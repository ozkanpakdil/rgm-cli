/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using cli.Client;
using cli.Api;
// uncomment below to import models
//using cli.Model;

namespace cli.Test.Api
{
    /// <summary>
    ///  Class for testing RpcDiagnosticsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class RpcDiagnosticsApiTests : IDisposable
    {
        private RpcDiagnosticsApi instance;

        public RpcDiagnosticsApiTests()
        {
            instance = new RpcDiagnosticsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RpcDiagnosticsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' RpcDiagnosticsApi
            //Assert.IsType<RpcDiagnosticsApi>(instance);
        }

        /// <summary>
        /// Test ApiDiagnosticsRpcDisableGet
        /// </summary>
        [Fact]
        public void ApiDiagnosticsRpcDisableGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiDiagnosticsRpcDisableGet();
            //Assert.IsType<UnitJSendSuccess>(response);
        }

        /// <summary>
        /// Test ApiDiagnosticsRpcDisableRequestGet
        /// </summary>
        [Fact]
        public void ApiDiagnosticsRpcDisableRequestGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiDiagnosticsRpcDisableRequestGet();
            //Assert.IsType<UnitJSendSuccess>(response);
        }

        /// <summary>
        /// Test ApiDiagnosticsRpcEnableGet
        /// </summary>
        [Fact]
        public void ApiDiagnosticsRpcEnableGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiDiagnosticsRpcEnableGet();
            //Assert.IsType<UnitJSendSuccess>(response);
        }

        /// <summary>
        /// Test ApiDiagnosticsRpcEnableRequestGet
        /// </summary>
        [Fact]
        public void ApiDiagnosticsRpcEnableRequestGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiDiagnosticsRpcEnableRequestGet();
            //Assert.IsType<UnitJSendSuccess>(response);
        }

        /// <summary>
        /// Test ApiDiagnosticsRpcGet
        /// </summary>
        [Fact]
        public void ApiDiagnosticsRpcGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? format = null;
            //instance.ApiDiagnosticsRpcGet(format);
        }

        /// <summary>
        /// Test ApiDiagnosticsRpcResetGet
        /// </summary>
        [Fact]
        public void ApiDiagnosticsRpcResetGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiDiagnosticsRpcResetGet();
            //Assert.IsType<UnitJSendSuccess>(response);
        }

        /// <summary>
        /// Test ApiDiagnosticsRpcStatusGet
        /// </summary>
        [Fact]
        public void ApiDiagnosticsRpcStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiDiagnosticsRpcStatusGet();
            //Assert.IsType<RpcStatusDtoJSendSuccess>(response);
        }

        /// <summary>
        /// Test ApiDiagnosticsRpcStatusRequestGet
        /// </summary>
        [Fact]
        public void ApiDiagnosticsRpcStatusRequestGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ApiDiagnosticsRpcStatusRequestGet();
            //Assert.IsType<RpcStatusDtoJSendSuccess>(response);
        }
    }
}
