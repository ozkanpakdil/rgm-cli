/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using cli.Api;
using Xunit;

// uncomment below to import models
//using cli.Model;

namespace cli.Test.Api;

/// <summary>
///     Class for testing GlobalDashboardApiApi
/// </summary>
/// <remarks>
///     This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
///     Please update the test case below to test the API endpoint.
/// </remarks>
public class GlobalDashboardApiApiTests : IDisposable
{
    private GlobalDashboardApiApi instance;

    public GlobalDashboardApiApiTests()
    {
        instance = new GlobalDashboardApiApi();
    }

    public void Dispose()
    {
        // Cleanup when everything is done.
    }

    /// <summary>
    ///     Test an instance of GlobalDashboardApiApi
    /// </summary>
    [Fact]
    public void InstanceTest()
    {
        // TODO uncomment below to test 'IsType' GlobalDashboardApiApi
        //Assert.IsType<GlobalDashboardApiApi>(instance);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameGlobaldashboardGet
    /// </summary>
    [Fact]
    public void ApiBasemonitorsBaseMonitorNameGlobaldashboardGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string baseMonitorName = null;
        //var response = instance.ApiBasemonitorsBaseMonitorNameGlobaldashboardGet(baseMonitorName);
        //Assert.IsType<GlobalDashboardViewModelJSendSuccess>(response);
    }

    /// <summary>
    ///     Test ApiGlobaldashboardAlertsGet
    /// </summary>
    [Fact]
    public void ApiGlobaldashboardAlertsGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //int? timeWindowMinutes = null;
        //string? group = null;
        //var response = instance.ApiGlobaldashboardAlertsGet(timeWindowMinutes, group);
        //Assert.IsType<AlertSummaryViewModelJSendSuccess>(response);
    }

    /// <summary>
    ///     Test ApiGlobaldashboardAlertsStagnantClearPost
    /// </summary>
    [Fact]
    public void ApiGlobaldashboardAlertsStagnantClearPostTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //var response = instance.ApiGlobaldashboardAlertsStagnantClearPost();
        //Assert.IsType<UnitJSendSuccess>(response);
    }

    /// <summary>
    ///     Test ApiGlobaldashboardAlertsStagnantGet
    /// </summary>
    [Fact]
    public void ApiGlobaldashboardAlertsStagnantGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //var response = instance.ApiGlobaldashboardAlertsStagnantGet();
        //Assert.IsType<Int32JSendSuccess>(response);
    }

    /// <summary>
    ///     Test ApiGlobaldashboardGet
    /// </summary>
    [Fact]
    public void ApiGlobaldashboardGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //var response = instance.ApiGlobaldashboardGet();
        //Assert.IsType<GlobalDashboardViewModelJSendSuccess>(response);
    }
}