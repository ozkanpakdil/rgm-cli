/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using cli.Client;
using cli.Api;
// uncomment below to import models
//using cli.Model;

namespace cli.Test.Api
{
    /// <summary>
    ///  Class for testing MonitoredServersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MonitoredServersApiTests : IDisposable
    {
        private MonitoredServersApi instance;

        public MonitoredServersApiTests()
        {
            instance = new MonitoredServersApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MonitoredServersApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' MonitoredServersApi
            //Assert.IsType<MonitoredServersApi>(instance);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameAmazonauroraclustersAmazonAuroraClusterNameMonitoredserversStatusGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameAmazonauroraclustersAmazonAuroraClusterNameMonitoredserversStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string amazonAuroraClusterName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameAmazonauroraclustersAmazonAuroraClusterNameMonitoredserversStatusGet(amazonAuroraClusterName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameAmazonrdshostsAmazonRdsHostNameMonitoredserversStatusGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameAmazonrdshostsAmazonRdsHostNameMonitoredserversStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string amazonRdsHostName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameAmazonrdshostsAmazonRdsHostNameMonitoredserversStatusGet(amazonRdsHostName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameAmazonrdssqlserversServerNameMonitoredserversStatusGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameAmazonrdssqlserversServerNameMonitoredserversStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string serverName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameAmazonrdssqlserversServerNameMonitoredserversStatusGet(serverName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameAmazonrdssqlserversServerNameMonitoredserversStatusSuspendedstatusPut
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameAmazonrdssqlserversServerNameMonitoredserversStatusSuspendedstatusPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string serverName = null;
            //string baseMonitorName = null;
            //int? body = null;
            //instance.ApiBasemonitorsBaseMonitorNameAmazonrdssqlserversServerNameMonitoredserversStatusSuspendedstatusPut(serverName, baseMonitorName, body);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameAzureflexhostsAzureFlexHostNameMonitoredserversStatusGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameAzureflexhostsAzureFlexHostNameMonitoredserversStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string azureFlexHostName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameAzureflexhostsAzureFlexHostNameMonitoredserversStatusGet(azureFlexHostName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameAzuremanagedinstancesInstanceNameMonitoredserversStatusGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameAzuremanagedinstancesInstanceNameMonitoredserversStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string instanceName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameAzuremanagedinstancesInstanceNameMonitoredserversStatusGet(instanceName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameAzuremanagedinstancesInstanceNameMonitoredserversStatusSuspendedstatusPut
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameAzuremanagedinstancesInstanceNameMonitoredserversStatusSuspendedstatusPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string instanceName = null;
            //string baseMonitorName = null;
            //int? body = null;
            //instance.ApiBasemonitorsBaseMonitorNameAzuremanagedinstancesInstanceNameMonitoredserversStatusSuspendedstatusPut(instanceName, baseMonitorName, body);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameDatabasesDatabaseNameMonitoredserversStatusGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameDatabasesDatabaseNameMonitoredserversStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string serverName = null;
            //string databaseName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameDatabasesDatabaseNameMonitoredserversStatusGet(serverName, databaseName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameMonitoredserversStatusGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameMonitoredserversStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string serverName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameMonitoredserversStatusGet(serverName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameMonitoredserversStatusSuspendedstatusPut
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameMonitoredserversStatusSuspendedstatusPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string serverName = null;
            //string baseMonitorName = null;
            //int? body = null;
            //instance.ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameMonitoredserversStatusSuspendedstatusPut(serverName, baseMonitorName, body);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameMonitoredserversStatusGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameMonitoredserversStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clusterName = null;
            //string instanceName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameMonitoredserversStatusGet(clusterName, instanceName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameMonitoredserversStatusSuspendedstatusPut
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameMonitoredserversStatusSuspendedstatusPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clusterName = null;
            //string instanceName = null;
            //string baseMonitorName = null;
            //int? body = null;
            //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameMonitoredserversStatusSuspendedstatusPut(clusterName, instanceName, baseMonitorName, body);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameMonitoredserversStatusGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameMonitoredserversStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clusterName = null;
            //string machineName = null;
            //string instanceName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameMonitoredserversStatusGet(clusterName, machineName, instanceName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameMonitoredserversStatusSuspendedstatusPut
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameMonitoredserversStatusSuspendedstatusPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clusterName = null;
            //string machineName = null;
            //string instanceName = null;
            //string baseMonitorName = null;
            //int? body = null;
            //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameMonitoredserversStatusSuspendedstatusPut(clusterName, machineName, instanceName, baseMonitorName, body);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameMonitoredserversStatusGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameMonitoredserversStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clusterName = null;
            //string machineName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameMonitoredserversStatusGet(clusterName, machineName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameClustersClusterNameMonitoredserversStatusGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameClustersClusterNameMonitoredserversStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clusterName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameMonitoredserversStatusGet(clusterName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameClustersClusterNameMonitoredserversStatusSuspendedstatusPut
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameClustersClusterNameMonitoredserversStatusSuspendedstatusPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clusterName = null;
            //string baseMonitorName = null;
            //int? body = null;
            //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameMonitoredserversStatusSuspendedstatusPut(clusterName, baseMonitorName, body);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameLinuxmachinesLinuxMachineNameInstancesSqlServerInstanceNameMonitoredserversStatusSuspendedstatusPut
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameLinuxmachinesLinuxMachineNameInstancesSqlServerInstanceNameMonitoredserversStatusSuspendedstatusPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sqlServerInstanceName = null;
            //string baseMonitorName = null;
            //string linuxMachineName = null;
            //int? body = null;
            //instance.ApiBasemonitorsBaseMonitorNameLinuxmachinesLinuxMachineNameInstancesSqlServerInstanceNameMonitoredserversStatusSuspendedstatusPut(sqlServerInstanceName, baseMonitorName, linuxMachineName, body);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameLinuxmachinesLinuxMachineNameMonitoredserversStatusSuspendedstatusPut
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameLinuxmachinesLinuxMachineNameMonitoredserversStatusSuspendedstatusPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string linuxMachineName = null;
            //string baseMonitorName = null;
            //int? body = null;
            //instance.ApiBasemonitorsBaseMonitorNameLinuxmachinesLinuxMachineNameMonitoredserversStatusSuspendedstatusPut(linuxMachineName, baseMonitorName, body);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameLinuxmachinesMachineNameInstancesSqlInstanceNameMonitoredserversStatusGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameLinuxmachinesMachineNameInstancesSqlInstanceNameMonitoredserversStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sqlInstanceName = null;
            //string baseMonitorName = null;
            //string machineName = null;
            //instance.ApiBasemonitorsBaseMonitorNameLinuxmachinesMachineNameInstancesSqlInstanceNameMonitoredserversStatusGet(sqlInstanceName, baseMonitorName, machineName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameLinuxmachinesMachineNameMonitoredserversStatusGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameLinuxmachinesMachineNameMonitoredserversStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string machineName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameLinuxmachinesMachineNameMonitoredserversStatusGet(machineName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameMonitoredserversDelete
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameMonitoredserversDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string baseMonitorName = null;
            //DeleteSqlServerModel? deleteSqlServerModel = null;
            //instance.ApiBasemonitorsBaseMonitorNameMonitoredserversDelete(baseMonitorName, deleteSqlServerModel);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameMonitoredserversInstancesDelete
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameMonitoredserversInstancesDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string baseMonitorName = null;
            //DeleteSqlServerInstanceModel? deleteSqlServerInstanceModel = null;
            //instance.ApiBasemonitorsBaseMonitorNameMonitoredserversInstancesDelete(baseMonitorName, deleteSqlServerInstanceModel);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameMonitoredserversPost
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameMonitoredserversPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string baseMonitorName = null;
            //AddSqlServerByTypeModel? addSqlServerByTypeModel = null;
            //instance.ApiBasemonitorsBaseMonitorNameMonitoredserversPost(baseMonitorName, addSqlServerByTypeModel);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameMonitoredserversSqlserverCredentialsPut
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameMonitoredserversSqlserverCredentialsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string baseMonitorName = null;
            //SqlServerInstanceCredentialsModel? sqlServerInstanceCredentialsModel = null;
            //instance.ApiBasemonitorsBaseMonitorNameMonitoredserversSqlserverCredentialsPut(baseMonitorName, sqlServerInstanceCredentialsModel);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameMonitoredserversclusterCredentialsPut
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameMonitoredserversclusterCredentialsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string baseMonitorName = null;
            //ClusterCredentialsModel? clusterCredentialsModel = null;
            //instance.ApiBasemonitorsBaseMonitorNameMonitoredserversclusterCredentialsPut(baseMonitorName, clusterCredentialsModel);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNamePostgresinstancesPostgresInstanceNameMonitoredserversStatusGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNamePostgresinstancesPostgresInstanceNameMonitoredserversStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string postgresInstanceName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNamePostgresinstancesPostgresInstanceNameMonitoredserversStatusGet(postgresInstanceName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameMonitoredserversStatusGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameMonitoredserversStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string machineName = null;
            //string instanceName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameMonitoredserversStatusGet(machineName, instanceName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameMonitoredserversStatusSuspendedstatusPut
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameMonitoredserversStatusSuspendedstatusPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string machineName = null;
            //string instanceName = null;
            //string baseMonitorName = null;
            //int? body = null;
            //instance.ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameMonitoredserversStatusSuspendedstatusPut(machineName, instanceName, baseMonitorName, body);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameMonitoredserversStatusGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameMonitoredserversStatusGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string machineName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameMonitoredserversStatusGet(machineName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameMonitoredserversStatusSuspendedstatusPut
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameMonitoredserversStatusSuspendedstatusPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string machineName = null;
            //string baseMonitorName = null;
            //int? body = null;
            //instance.ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameMonitoredserversStatusSuspendedstatusPut(machineName, baseMonitorName, body);
        }
    }
}
