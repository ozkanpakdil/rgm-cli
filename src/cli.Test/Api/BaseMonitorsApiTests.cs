/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using cli.Api;
using cli.Client;
using cli.Model;
using Xunit;

// uncomment below to import models
//using cli.Model;

namespace cli.Test.Api;

/// <summary>
///     Class for testing BaseMonitorsApi
/// </summary>
/// <remarks>
///     This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
///     Please update the test case below to test the API endpoint.
/// </remarks>
public class BaseMonitorsApiTests : IDisposable
{
    private BaseMonitorsApi instance;

    public BaseMonitorsApiTests()
    {
        instance = new BaseMonitorsApi();
    }

    public void Dispose()
    {
        // Cleanup when everything is done.
    }

    /// <summary>
    ///     Test an instance of BaseMonitorsApi
    /// </summary>
    [Fact]
    public void InstanceTest()
    {
        // TODO uncomment below to test 'IsType' BaseMonitorsApi
        //Assert.IsType<BaseMonitorsApi>(instance);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameGet
    /// </summary>
    [Fact]
    public void ApiBasemonitorsBaseMonitorNameGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string baseMonitorName = null;
        //var response = instance.ApiBasemonitorsBaseMonitorNameGet(baseMonitorName);
        //Assert.IsType<BaseMonitorDtoJSendSuccess>(response);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameStatusGet
    /// </summary>
    [Fact]
    public void ApiBasemonitorsBaseMonitorNameStatusGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string baseMonitorName = null;
        //var response = instance.ApiBasemonitorsBaseMonitorNameStatusGet(baseMonitorName);
        //Assert.IsType<BaseMonitorModelJSendSuccess>(response);
    }

    /// <summary>
    ///     Test ApiBasemonitorsGet
    /// </summary>
    [Fact]
    public void ApiBasemonitorsGetTest()
    {
        var config = new Configuration
        {
            BasePath = "https://monitor.red-gate.com/"
        };

        config.ApiKey.Add("Authorization", "Bearer CfDJ8EoKn-M5SQpEmCqQ3AXUvvZNV5IqRACex7ozo--1Y2RVqDDygjX6dPKGgPtDkAXIEfWBDKWVhHrOgZESE42q-62ulHeSMC_SoLJjjXk16ilZ1Jh9vFZuQBeBtdRZ9CZ3-FgM6tC8iXpW5rxG88KDNruqd1oH0GOOXGZ0jOFzgCE84ZoqllZs6hLtF6orbaKQNJE99geGe5VA3VOq4BRewuDo9jqbWOYv_sOXo61cPAMoIkRPGlci_LJLImTgy-IIRbQPRF1J6SZJn3VOX_K1KjMAQZpcMt-hUrWvmik2gQdX9wDIR0NUBrnObtJ92nhCZdF31v1Ub1eWrUlhjazWsMZemOC8Amt4p1fAAbPA8-94A9aSUZmnHdcK16vFY8OTKFn0rKy78OcaoQIHrrxwRlJ5O9XYJF-dthX-n6CK1_UjNo6hBByD_h-nbY8m52-gYXGVul3_i89gJ1XaZNeCPi9ahKFLMK2jnrVSrO-2BRVy5MywvFdEnJib6-K4-tDwjJnkdkXaJthtjecGPA7OtU1weyzuMSiyRJpgGj5z5iw2tBIUZa-IvZSqbD1ev03qgawYKXvhEeNVgPvxdF_mZ8L77Ehpzkr4mi37mr4Y1PgvyAxWWz0yfeQxjwDqz2cJAxTXJ0Jw2qD_--hi1-zaiHE");

        var baseMonitorsApi = new BaseMonitorsApi(config);

        var response = baseMonitorsApi.ApiBasemonitorsGet();
        Assert.IsType<BaseMonitorDtoArrayJSendSuccess>(response);
    }

    /// <summary>
    ///     Test ApiBasemonitorsSetconfigurationPost
    /// </summary>
    [Fact]
    public void ApiBasemonitorsSetconfigurationPostTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //BaseMonitorConfigurationRequest? baseMonitorConfigurationRequest = null;
        //var response = instance.ApiBasemonitorsSetconfigurationPost(baseMonitorConfigurationRequest);
        //Assert.IsType<JSendSuccess>(response);
    }

    /// <summary>
    ///     Test ApiBasemonitorsSetprimaryPost
    /// </summary>
    [Fact]
    public void ApiBasemonitorsSetprimaryPostTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //BaseMonitorPrimaryRequestDto? baseMonitorPrimaryRequestDto = null;
        //var response = instance.ApiBasemonitorsSetprimaryPost(baseMonitorPrimaryRequestDto);
        //Assert.IsType<JSendSuccess>(response);
    }

    /// <summary>
    ///     Test ApiBasemonitorsTestconnectionGet
    /// </summary>
    [Fact]
    public void ApiBasemonitorsTestconnectionGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //var response = instance.ApiBasemonitorsTestconnectionGet();
        //Assert.IsType<BooleanJSendSuccess>(response);
    }
}