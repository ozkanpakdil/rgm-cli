/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using cli.Client;
using cli.Api;
// uncomment below to import models
//using cli.Model;

namespace cli.Test.Api
{
    /// <summary>
    ///  Class for testing AlertInboxApiApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AlertInboxApiApiTests : IDisposable
    {
        private AlertInboxApiApi instance;

        public AlertInboxApiApiTests()
        {
            instance = new AlertInboxApiApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AlertInboxApiApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AlertInboxApiApi
            //Assert.IsType<AlertInboxApiApi>(instance);
        }

        /// <summary>
        /// Test AlertsInboxAddAlertComment
        /// </summary>
        [Fact]
        public void AlertsInboxAddAlertCommentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? author = null;
            //string? comment = null;
            //string? lastUpdate = null;
            //List<GroupIdDto>? selectedGroupIds = null;
            //List<QualifiedAlertIdDto>? selectedAlertIds = null;
            //AlertsFilterTimeRangeTypeDto? filterSettingsTimeRangeType = null;
            //int? filterSettingsTimeRangeRelativeMinutes = null;
            //long? filterSettingsTimeRangeFromDateTime = null;
            //long? filterSettingsTimeRangeToDateTime = null;
            //AlertsFilterTimeWindowModesDto? filterSettingsTimeRangeTimeWindowMode = null;
            //bool? filterSettingsIncludeStatusSeverityHigh = null;
            //bool? filterSettingsIncludeStatusSeverityMedium = null;
            //bool? filterSettingsIncludeStatusSeverityLow = null;
            //bool? filterSettingsIncludeStatusReadYes = null;
            //bool? filterSettingsIncludeStatusReadNo = null;
            //bool? filterSettingsIncludeStatusClearedYes = null;
            //bool? filterSettingsIncludeStatusClearedNo = null;
            //bool? filterSettingsIncludeStatusStatusEvent = null;
            //bool? filterSettingsIncludeStatusStatusActive = null;
            //bool? filterSettingsIncludeStatusStatusEnded = null;
            //bool? filterSettingsIncludeStatusCommentYes = null;
            //bool? filterSettingsIncludeStatusCommentNo = null;
            //List<string>? filterSettingsIncludeAlertTypeIds = null;
            //List<TagDto>? filterSettingsSelectedTags = null;
            //List<string>? channelInstanceRefs = null;
            //instance.AlertsInboxAddAlertComment(author, comment, lastUpdate, selectedGroupIds, selectedAlertIds, filterSettingsTimeRangeType, filterSettingsTimeRangeRelativeMinutes, filterSettingsTimeRangeFromDateTime, filterSettingsTimeRangeToDateTime, filterSettingsTimeRangeTimeWindowMode, filterSettingsIncludeStatusSeverityHigh, filterSettingsIncludeStatusSeverityMedium, filterSettingsIncludeStatusSeverityLow, filterSettingsIncludeStatusReadYes, filterSettingsIncludeStatusReadNo, filterSettingsIncludeStatusClearedYes, filterSettingsIncludeStatusClearedNo, filterSettingsIncludeStatusStatusEvent, filterSettingsIncludeStatusStatusActive, filterSettingsIncludeStatusStatusEnded, filterSettingsIncludeStatusCommentYes, filterSettingsIncludeStatusCommentNo, filterSettingsIncludeAlertTypeIds, filterSettingsSelectedTags, channelInstanceRefs);
        }

        /// <summary>
        /// Test AlertsInboxAddGroupComment
        /// </summary>
        [Fact]
        public void AlertsInboxAddGroupCommentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? author = null;
            //string? comment = null;
            //string? lastUpdate = null;
            //List<GroupIdDto>? selectedGroupIds = null;
            //List<QualifiedAlertIdDto>? selectedAlertIds = null;
            //AlertsFilterTimeRangeTypeDto? filterSettingsTimeRangeType = null;
            //int? filterSettingsTimeRangeRelativeMinutes = null;
            //long? filterSettingsTimeRangeFromDateTime = null;
            //long? filterSettingsTimeRangeToDateTime = null;
            //AlertsFilterTimeWindowModesDto? filterSettingsTimeRangeTimeWindowMode = null;
            //bool? filterSettingsIncludeStatusSeverityHigh = null;
            //bool? filterSettingsIncludeStatusSeverityMedium = null;
            //bool? filterSettingsIncludeStatusSeverityLow = null;
            //bool? filterSettingsIncludeStatusReadYes = null;
            //bool? filterSettingsIncludeStatusReadNo = null;
            //bool? filterSettingsIncludeStatusClearedYes = null;
            //bool? filterSettingsIncludeStatusClearedNo = null;
            //bool? filterSettingsIncludeStatusStatusEvent = null;
            //bool? filterSettingsIncludeStatusStatusActive = null;
            //bool? filterSettingsIncludeStatusStatusEnded = null;
            //bool? filterSettingsIncludeStatusCommentYes = null;
            //bool? filterSettingsIncludeStatusCommentNo = null;
            //List<string>? filterSettingsIncludeAlertTypeIds = null;
            //List<TagDto>? filterSettingsSelectedTags = null;
            //List<string>? channelInstanceRefs = null;
            //instance.AlertsInboxAddGroupComment(author, comment, lastUpdate, selectedGroupIds, selectedAlertIds, filterSettingsTimeRangeType, filterSettingsTimeRangeRelativeMinutes, filterSettingsTimeRangeFromDateTime, filterSettingsTimeRangeToDateTime, filterSettingsTimeRangeTimeWindowMode, filterSettingsIncludeStatusSeverityHigh, filterSettingsIncludeStatusSeverityMedium, filterSettingsIncludeStatusSeverityLow, filterSettingsIncludeStatusReadYes, filterSettingsIncludeStatusReadNo, filterSettingsIncludeStatusClearedYes, filterSettingsIncludeStatusClearedNo, filterSettingsIncludeStatusStatusEvent, filterSettingsIncludeStatusStatusActive, filterSettingsIncludeStatusStatusEnded, filterSettingsIncludeStatusCommentYes, filterSettingsIncludeStatusCommentNo, filterSettingsIncludeAlertTypeIds, filterSettingsSelectedTags, channelInstanceRefs);
        }

        /// <summary>
        /// Test AlertsInboxClear
        /// </summary>
        [Fact]
        public void AlertsInboxClearTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? lastUpdate = null;
            //List<GroupIdDto>? selectedGroupIds = null;
            //List<QualifiedAlertIdDto>? selectedAlertIds = null;
            //AlertsFilterTimeRangeTypeDto? filterSettingsTimeRangeType = null;
            //int? filterSettingsTimeRangeRelativeMinutes = null;
            //long? filterSettingsTimeRangeFromDateTime = null;
            //long? filterSettingsTimeRangeToDateTime = null;
            //AlertsFilterTimeWindowModesDto? filterSettingsTimeRangeTimeWindowMode = null;
            //bool? filterSettingsIncludeStatusSeverityHigh = null;
            //bool? filterSettingsIncludeStatusSeverityMedium = null;
            //bool? filterSettingsIncludeStatusSeverityLow = null;
            //bool? filterSettingsIncludeStatusReadYes = null;
            //bool? filterSettingsIncludeStatusReadNo = null;
            //bool? filterSettingsIncludeStatusClearedYes = null;
            //bool? filterSettingsIncludeStatusClearedNo = null;
            //bool? filterSettingsIncludeStatusStatusEvent = null;
            //bool? filterSettingsIncludeStatusStatusActive = null;
            //bool? filterSettingsIncludeStatusStatusEnded = null;
            //bool? filterSettingsIncludeStatusCommentYes = null;
            //bool? filterSettingsIncludeStatusCommentNo = null;
            //List<string>? filterSettingsIncludeAlertTypeIds = null;
            //List<TagDto>? filterSettingsSelectedTags = null;
            //List<string>? channelInstanceRefs = null;
            //instance.AlertsInboxClear(lastUpdate, selectedGroupIds, selectedAlertIds, filterSettingsTimeRangeType, filterSettingsTimeRangeRelativeMinutes, filterSettingsTimeRangeFromDateTime, filterSettingsTimeRangeToDateTime, filterSettingsTimeRangeTimeWindowMode, filterSettingsIncludeStatusSeverityHigh, filterSettingsIncludeStatusSeverityMedium, filterSettingsIncludeStatusSeverityLow, filterSettingsIncludeStatusReadYes, filterSettingsIncludeStatusReadNo, filterSettingsIncludeStatusClearedYes, filterSettingsIncludeStatusClearedNo, filterSettingsIncludeStatusStatusEvent, filterSettingsIncludeStatusStatusActive, filterSettingsIncludeStatusStatusEnded, filterSettingsIncludeStatusCommentYes, filterSettingsIncludeStatusCommentNo, filterSettingsIncludeAlertTypeIds, filterSettingsSelectedTags, channelInstanceRefs);
        }

        /// <summary>
        /// Test AlertsInboxClearAlert
        /// </summary>
        [Fact]
        public void AlertsInboxClearAlertTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? lastUpdate = null;
            //List<GroupIdDto>? selectedGroupIds = null;
            //List<QualifiedAlertIdDto>? selectedAlertIds = null;
            //AlertsFilterTimeRangeTypeDto? filterSettingsTimeRangeType = null;
            //int? filterSettingsTimeRangeRelativeMinutes = null;
            //long? filterSettingsTimeRangeFromDateTime = null;
            //long? filterSettingsTimeRangeToDateTime = null;
            //AlertsFilterTimeWindowModesDto? filterSettingsTimeRangeTimeWindowMode = null;
            //bool? filterSettingsIncludeStatusSeverityHigh = null;
            //bool? filterSettingsIncludeStatusSeverityMedium = null;
            //bool? filterSettingsIncludeStatusSeverityLow = null;
            //bool? filterSettingsIncludeStatusReadYes = null;
            //bool? filterSettingsIncludeStatusReadNo = null;
            //bool? filterSettingsIncludeStatusClearedYes = null;
            //bool? filterSettingsIncludeStatusClearedNo = null;
            //bool? filterSettingsIncludeStatusStatusEvent = null;
            //bool? filterSettingsIncludeStatusStatusActive = null;
            //bool? filterSettingsIncludeStatusStatusEnded = null;
            //bool? filterSettingsIncludeStatusCommentYes = null;
            //bool? filterSettingsIncludeStatusCommentNo = null;
            //List<string>? filterSettingsIncludeAlertTypeIds = null;
            //List<TagDto>? filterSettingsSelectedTags = null;
            //List<string>? channelInstanceRefs = null;
            //instance.AlertsInboxClearAlert(lastUpdate, selectedGroupIds, selectedAlertIds, filterSettingsTimeRangeType, filterSettingsTimeRangeRelativeMinutes, filterSettingsTimeRangeFromDateTime, filterSettingsTimeRangeToDateTime, filterSettingsTimeRangeTimeWindowMode, filterSettingsIncludeStatusSeverityHigh, filterSettingsIncludeStatusSeverityMedium, filterSettingsIncludeStatusSeverityLow, filterSettingsIncludeStatusReadYes, filterSettingsIncludeStatusReadNo, filterSettingsIncludeStatusClearedYes, filterSettingsIncludeStatusClearedNo, filterSettingsIncludeStatusStatusEvent, filterSettingsIncludeStatusStatusActive, filterSettingsIncludeStatusStatusEnded, filterSettingsIncludeStatusCommentYes, filterSettingsIncludeStatusCommentNo, filterSettingsIncludeAlertTypeIds, filterSettingsSelectedTags, channelInstanceRefs);
        }

        /// <summary>
        /// Test AlertsInboxDeleteCustomFilter
        /// </summary>
        [Fact]
        public void AlertsInboxDeleteCustomFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? name = null;
            //var response = instance.AlertsInboxDeleteCustomFilter(name);
            //Assert.IsType<bool>(response);
        }

        /// <summary>
        /// Test AlertsInboxRead
        /// </summary>
        [Fact]
        public void AlertsInboxReadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? lastUpdate = null;
            //List<GroupIdDto>? selectedGroupIds = null;
            //List<QualifiedAlertIdDto>? selectedAlertIds = null;
            //AlertsFilterTimeRangeTypeDto? filterSettingsTimeRangeType = null;
            //int? filterSettingsTimeRangeRelativeMinutes = null;
            //long? filterSettingsTimeRangeFromDateTime = null;
            //long? filterSettingsTimeRangeToDateTime = null;
            //AlertsFilterTimeWindowModesDto? filterSettingsTimeRangeTimeWindowMode = null;
            //bool? filterSettingsIncludeStatusSeverityHigh = null;
            //bool? filterSettingsIncludeStatusSeverityMedium = null;
            //bool? filterSettingsIncludeStatusSeverityLow = null;
            //bool? filterSettingsIncludeStatusReadYes = null;
            //bool? filterSettingsIncludeStatusReadNo = null;
            //bool? filterSettingsIncludeStatusClearedYes = null;
            //bool? filterSettingsIncludeStatusClearedNo = null;
            //bool? filterSettingsIncludeStatusStatusEvent = null;
            //bool? filterSettingsIncludeStatusStatusActive = null;
            //bool? filterSettingsIncludeStatusStatusEnded = null;
            //bool? filterSettingsIncludeStatusCommentYes = null;
            //bool? filterSettingsIncludeStatusCommentNo = null;
            //List<string>? filterSettingsIncludeAlertTypeIds = null;
            //List<TagDto>? filterSettingsSelectedTags = null;
            //List<string>? channelInstanceRefs = null;
            //instance.AlertsInboxRead(lastUpdate, selectedGroupIds, selectedAlertIds, filterSettingsTimeRangeType, filterSettingsTimeRangeRelativeMinutes, filterSettingsTimeRangeFromDateTime, filterSettingsTimeRangeToDateTime, filterSettingsTimeRangeTimeWindowMode, filterSettingsIncludeStatusSeverityHigh, filterSettingsIncludeStatusSeverityMedium, filterSettingsIncludeStatusSeverityLow, filterSettingsIncludeStatusReadYes, filterSettingsIncludeStatusReadNo, filterSettingsIncludeStatusClearedYes, filterSettingsIncludeStatusClearedNo, filterSettingsIncludeStatusStatusEvent, filterSettingsIncludeStatusStatusActive, filterSettingsIncludeStatusStatusEnded, filterSettingsIncludeStatusCommentYes, filterSettingsIncludeStatusCommentNo, filterSettingsIncludeAlertTypeIds, filterSettingsSelectedTags, channelInstanceRefs);
        }

        /// <summary>
        /// Test AlertsInboxReadAlert
        /// </summary>
        [Fact]
        public void AlertsInboxReadAlertTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? lastUpdate = null;
            //List<GroupIdDto>? selectedGroupIds = null;
            //List<QualifiedAlertIdDto>? selectedAlertIds = null;
            //AlertsFilterTimeRangeTypeDto? filterSettingsTimeRangeType = null;
            //int? filterSettingsTimeRangeRelativeMinutes = null;
            //long? filterSettingsTimeRangeFromDateTime = null;
            //long? filterSettingsTimeRangeToDateTime = null;
            //AlertsFilterTimeWindowModesDto? filterSettingsTimeRangeTimeWindowMode = null;
            //bool? filterSettingsIncludeStatusSeverityHigh = null;
            //bool? filterSettingsIncludeStatusSeverityMedium = null;
            //bool? filterSettingsIncludeStatusSeverityLow = null;
            //bool? filterSettingsIncludeStatusReadYes = null;
            //bool? filterSettingsIncludeStatusReadNo = null;
            //bool? filterSettingsIncludeStatusClearedYes = null;
            //bool? filterSettingsIncludeStatusClearedNo = null;
            //bool? filterSettingsIncludeStatusStatusEvent = null;
            //bool? filterSettingsIncludeStatusStatusActive = null;
            //bool? filterSettingsIncludeStatusStatusEnded = null;
            //bool? filterSettingsIncludeStatusCommentYes = null;
            //bool? filterSettingsIncludeStatusCommentNo = null;
            //List<string>? filterSettingsIncludeAlertTypeIds = null;
            //List<TagDto>? filterSettingsSelectedTags = null;
            //List<string>? channelInstanceRefs = null;
            //instance.AlertsInboxReadAlert(lastUpdate, selectedGroupIds, selectedAlertIds, filterSettingsTimeRangeType, filterSettingsTimeRangeRelativeMinutes, filterSettingsTimeRangeFromDateTime, filterSettingsTimeRangeToDateTime, filterSettingsTimeRangeTimeWindowMode, filterSettingsIncludeStatusSeverityHigh, filterSettingsIncludeStatusSeverityMedium, filterSettingsIncludeStatusSeverityLow, filterSettingsIncludeStatusReadYes, filterSettingsIncludeStatusReadNo, filterSettingsIncludeStatusClearedYes, filterSettingsIncludeStatusClearedNo, filterSettingsIncludeStatusStatusEvent, filterSettingsIncludeStatusStatusActive, filterSettingsIncludeStatusStatusEnded, filterSettingsIncludeStatusCommentYes, filterSettingsIncludeStatusCommentNo, filterSettingsIncludeAlertTypeIds, filterSettingsSelectedTags, channelInstanceRefs);
        }

        /// <summary>
        /// Test AlertsInboxSaveCustomFilter
        /// </summary>
        [Fact]
        public void AlertsInboxSaveCustomFilterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? name = null;
            //AlertsFilterTimeRangeTypeDto? timeRangeType = null;
            //int? timeRangeRelativeMinutes = null;
            //long? timeRangeFromDateTime = null;
            //long? timeRangeToDateTime = null;
            //AlertsFilterTimeWindowModesDto? timeRangeTimeWindowMode = null;
            //bool? includeStatusSeverityHigh = null;
            //bool? includeStatusSeverityMedium = null;
            //bool? includeStatusSeverityLow = null;
            //bool? includeStatusReadYes = null;
            //bool? includeStatusReadNo = null;
            //bool? includeStatusClearedYes = null;
            //bool? includeStatusClearedNo = null;
            //bool? includeStatusStatusEvent = null;
            //bool? includeStatusStatusActive = null;
            //bool? includeStatusStatusEnded = null;
            //bool? includeStatusCommentYes = null;
            //bool? includeStatusCommentNo = null;
            //List<string>? includeAlertTypeIds = null;
            //List<TagDto>? selectedTags = null;
            //instance.AlertsInboxSaveCustomFilter(name, timeRangeType, timeRangeRelativeMinutes, timeRangeFromDateTime, timeRangeToDateTime, timeRangeTimeWindowMode, includeStatusSeverityHigh, includeStatusSeverityMedium, includeStatusSeverityLow, includeStatusReadYes, includeStatusReadNo, includeStatusClearedYes, includeStatusClearedNo, includeStatusStatusEvent, includeStatusStatusActive, includeStatusStatusEnded, includeStatusCommentYes, includeStatusCommentNo, includeAlertTypeIds, selectedTags);
        }

        /// <summary>
        /// Test AlertsInboxUnclear
        /// </summary>
        [Fact]
        public void AlertsInboxUnclearTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? lastUpdate = null;
            //List<GroupIdDto>? selectedGroupIds = null;
            //List<QualifiedAlertIdDto>? selectedAlertIds = null;
            //AlertsFilterTimeRangeTypeDto? filterSettingsTimeRangeType = null;
            //int? filterSettingsTimeRangeRelativeMinutes = null;
            //long? filterSettingsTimeRangeFromDateTime = null;
            //long? filterSettingsTimeRangeToDateTime = null;
            //AlertsFilterTimeWindowModesDto? filterSettingsTimeRangeTimeWindowMode = null;
            //bool? filterSettingsIncludeStatusSeverityHigh = null;
            //bool? filterSettingsIncludeStatusSeverityMedium = null;
            //bool? filterSettingsIncludeStatusSeverityLow = null;
            //bool? filterSettingsIncludeStatusReadYes = null;
            //bool? filterSettingsIncludeStatusReadNo = null;
            //bool? filterSettingsIncludeStatusClearedYes = null;
            //bool? filterSettingsIncludeStatusClearedNo = null;
            //bool? filterSettingsIncludeStatusStatusEvent = null;
            //bool? filterSettingsIncludeStatusStatusActive = null;
            //bool? filterSettingsIncludeStatusStatusEnded = null;
            //bool? filterSettingsIncludeStatusCommentYes = null;
            //bool? filterSettingsIncludeStatusCommentNo = null;
            //List<string>? filterSettingsIncludeAlertTypeIds = null;
            //List<TagDto>? filterSettingsSelectedTags = null;
            //List<string>? channelInstanceRefs = null;
            //instance.AlertsInboxUnclear(lastUpdate, selectedGroupIds, selectedAlertIds, filterSettingsTimeRangeType, filterSettingsTimeRangeRelativeMinutes, filterSettingsTimeRangeFromDateTime, filterSettingsTimeRangeToDateTime, filterSettingsTimeRangeTimeWindowMode, filterSettingsIncludeStatusSeverityHigh, filterSettingsIncludeStatusSeverityMedium, filterSettingsIncludeStatusSeverityLow, filterSettingsIncludeStatusReadYes, filterSettingsIncludeStatusReadNo, filterSettingsIncludeStatusClearedYes, filterSettingsIncludeStatusClearedNo, filterSettingsIncludeStatusStatusEvent, filterSettingsIncludeStatusStatusActive, filterSettingsIncludeStatusStatusEnded, filterSettingsIncludeStatusCommentYes, filterSettingsIncludeStatusCommentNo, filterSettingsIncludeAlertTypeIds, filterSettingsSelectedTags, channelInstanceRefs);
        }

        /// <summary>
        /// Test AlertsInboxUnclearAlert
        /// </summary>
        [Fact]
        public void AlertsInboxUnclearAlertTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? lastUpdate = null;
            //List<GroupIdDto>? selectedGroupIds = null;
            //List<QualifiedAlertIdDto>? selectedAlertIds = null;
            //AlertsFilterTimeRangeTypeDto? filterSettingsTimeRangeType = null;
            //int? filterSettingsTimeRangeRelativeMinutes = null;
            //long? filterSettingsTimeRangeFromDateTime = null;
            //long? filterSettingsTimeRangeToDateTime = null;
            //AlertsFilterTimeWindowModesDto? filterSettingsTimeRangeTimeWindowMode = null;
            //bool? filterSettingsIncludeStatusSeverityHigh = null;
            //bool? filterSettingsIncludeStatusSeverityMedium = null;
            //bool? filterSettingsIncludeStatusSeverityLow = null;
            //bool? filterSettingsIncludeStatusReadYes = null;
            //bool? filterSettingsIncludeStatusReadNo = null;
            //bool? filterSettingsIncludeStatusClearedYes = null;
            //bool? filterSettingsIncludeStatusClearedNo = null;
            //bool? filterSettingsIncludeStatusStatusEvent = null;
            //bool? filterSettingsIncludeStatusStatusActive = null;
            //bool? filterSettingsIncludeStatusStatusEnded = null;
            //bool? filterSettingsIncludeStatusCommentYes = null;
            //bool? filterSettingsIncludeStatusCommentNo = null;
            //List<string>? filterSettingsIncludeAlertTypeIds = null;
            //List<TagDto>? filterSettingsSelectedTags = null;
            //List<string>? channelInstanceRefs = null;
            //instance.AlertsInboxUnclearAlert(lastUpdate, selectedGroupIds, selectedAlertIds, filterSettingsTimeRangeType, filterSettingsTimeRangeRelativeMinutes, filterSettingsTimeRangeFromDateTime, filterSettingsTimeRangeToDateTime, filterSettingsTimeRangeTimeWindowMode, filterSettingsIncludeStatusSeverityHigh, filterSettingsIncludeStatusSeverityMedium, filterSettingsIncludeStatusSeverityLow, filterSettingsIncludeStatusReadYes, filterSettingsIncludeStatusReadNo, filterSettingsIncludeStatusClearedYes, filterSettingsIncludeStatusClearedNo, filterSettingsIncludeStatusStatusEvent, filterSettingsIncludeStatusStatusActive, filterSettingsIncludeStatusStatusEnded, filterSettingsIncludeStatusCommentYes, filterSettingsIncludeStatusCommentNo, filterSettingsIncludeAlertTypeIds, filterSettingsSelectedTags, channelInstanceRefs);
        }

        /// <summary>
        /// Test AlertsInboxUnread
        /// </summary>
        [Fact]
        public void AlertsInboxUnreadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? lastUpdate = null;
            //List<GroupIdDto>? selectedGroupIds = null;
            //List<QualifiedAlertIdDto>? selectedAlertIds = null;
            //AlertsFilterTimeRangeTypeDto? filterSettingsTimeRangeType = null;
            //int? filterSettingsTimeRangeRelativeMinutes = null;
            //long? filterSettingsTimeRangeFromDateTime = null;
            //long? filterSettingsTimeRangeToDateTime = null;
            //AlertsFilterTimeWindowModesDto? filterSettingsTimeRangeTimeWindowMode = null;
            //bool? filterSettingsIncludeStatusSeverityHigh = null;
            //bool? filterSettingsIncludeStatusSeverityMedium = null;
            //bool? filterSettingsIncludeStatusSeverityLow = null;
            //bool? filterSettingsIncludeStatusReadYes = null;
            //bool? filterSettingsIncludeStatusReadNo = null;
            //bool? filterSettingsIncludeStatusClearedYes = null;
            //bool? filterSettingsIncludeStatusClearedNo = null;
            //bool? filterSettingsIncludeStatusStatusEvent = null;
            //bool? filterSettingsIncludeStatusStatusActive = null;
            //bool? filterSettingsIncludeStatusStatusEnded = null;
            //bool? filterSettingsIncludeStatusCommentYes = null;
            //bool? filterSettingsIncludeStatusCommentNo = null;
            //List<string>? filterSettingsIncludeAlertTypeIds = null;
            //List<TagDto>? filterSettingsSelectedTags = null;
            //List<string>? channelInstanceRefs = null;
            //instance.AlertsInboxUnread(lastUpdate, selectedGroupIds, selectedAlertIds, filterSettingsTimeRangeType, filterSettingsTimeRangeRelativeMinutes, filterSettingsTimeRangeFromDateTime, filterSettingsTimeRangeToDateTime, filterSettingsTimeRangeTimeWindowMode, filterSettingsIncludeStatusSeverityHigh, filterSettingsIncludeStatusSeverityMedium, filterSettingsIncludeStatusSeverityLow, filterSettingsIncludeStatusReadYes, filterSettingsIncludeStatusReadNo, filterSettingsIncludeStatusClearedYes, filterSettingsIncludeStatusClearedNo, filterSettingsIncludeStatusStatusEvent, filterSettingsIncludeStatusStatusActive, filterSettingsIncludeStatusStatusEnded, filterSettingsIncludeStatusCommentYes, filterSettingsIncludeStatusCommentNo, filterSettingsIncludeAlertTypeIds, filterSettingsSelectedTags, channelInstanceRefs);
        }

        /// <summary>
        /// Test AlertsInboxUnreadAlert
        /// </summary>
        [Fact]
        public void AlertsInboxUnreadAlertTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? lastUpdate = null;
            //List<GroupIdDto>? selectedGroupIds = null;
            //List<QualifiedAlertIdDto>? selectedAlertIds = null;
            //AlertsFilterTimeRangeTypeDto? filterSettingsTimeRangeType = null;
            //int? filterSettingsTimeRangeRelativeMinutes = null;
            //long? filterSettingsTimeRangeFromDateTime = null;
            //long? filterSettingsTimeRangeToDateTime = null;
            //AlertsFilterTimeWindowModesDto? filterSettingsTimeRangeTimeWindowMode = null;
            //bool? filterSettingsIncludeStatusSeverityHigh = null;
            //bool? filterSettingsIncludeStatusSeverityMedium = null;
            //bool? filterSettingsIncludeStatusSeverityLow = null;
            //bool? filterSettingsIncludeStatusReadYes = null;
            //bool? filterSettingsIncludeStatusReadNo = null;
            //bool? filterSettingsIncludeStatusClearedYes = null;
            //bool? filterSettingsIncludeStatusClearedNo = null;
            //bool? filterSettingsIncludeStatusStatusEvent = null;
            //bool? filterSettingsIncludeStatusStatusActive = null;
            //bool? filterSettingsIncludeStatusStatusEnded = null;
            //bool? filterSettingsIncludeStatusCommentYes = null;
            //bool? filterSettingsIncludeStatusCommentNo = null;
            //List<string>? filterSettingsIncludeAlertTypeIds = null;
            //List<TagDto>? filterSettingsSelectedTags = null;
            //List<string>? channelInstanceRefs = null;
            //instance.AlertsInboxUnreadAlert(lastUpdate, selectedGroupIds, selectedAlertIds, filterSettingsTimeRangeType, filterSettingsTimeRangeRelativeMinutes, filterSettingsTimeRangeFromDateTime, filterSettingsTimeRangeToDateTime, filterSettingsTimeRangeTimeWindowMode, filterSettingsIncludeStatusSeverityHigh, filterSettingsIncludeStatusSeverityMedium, filterSettingsIncludeStatusSeverityLow, filterSettingsIncludeStatusReadYes, filterSettingsIncludeStatusReadNo, filterSettingsIncludeStatusClearedYes, filterSettingsIncludeStatusClearedNo, filterSettingsIncludeStatusStatusEvent, filterSettingsIncludeStatusStatusActive, filterSettingsIncludeStatusStatusEnded, filterSettingsIncludeStatusCommentYes, filterSettingsIncludeStatusCommentNo, filterSettingsIncludeAlertTypeIds, filterSettingsSelectedTags, channelInstanceRefs);
        }

        /// <summary>
        /// Test ApiAlertsAlertsgroupinboxAddAlertCommentjsonPost
        /// </summary>
        [Fact]
        public void ApiAlertsAlertsgroupinboxAddAlertCommentjsonPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AlertInboxSelectionDto alertInboxSelectionDto = null;
            //string? author = null;
            //string? comment = null;
            //instance.ApiAlertsAlertsgroupinboxAddAlertCommentjsonPost(alertInboxSelectionDto, author, comment);
        }

        /// <summary>
        /// Test ApiAlertsAlertsgroupinboxAddGroupCommentjsonPost
        /// </summary>
        [Fact]
        public void ApiAlertsAlertsgroupinboxAddGroupCommentjsonPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AlertInboxSelectionDto alertInboxSelectionDto = null;
            //string? author = null;
            //string? comment = null;
            //instance.ApiAlertsAlertsgroupinboxAddGroupCommentjsonPost(alertInboxSelectionDto, author, comment);
        }

        /// <summary>
        /// Test ApiAlertsAlertsgroupinboxClearalertjsonPost
        /// </summary>
        [Fact]
        public void ApiAlertsAlertsgroupinboxClearalertjsonPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AlertInboxSelectionDto alertInboxSelectionDto = null;
            //instance.ApiAlertsAlertsgroupinboxClearalertjsonPost(alertInboxSelectionDto);
        }

        /// <summary>
        /// Test ApiAlertsAlertsgroupinboxClearjsonPost
        /// </summary>
        [Fact]
        public void ApiAlertsAlertsgroupinboxClearjsonPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AlertInboxSelectionDto alertInboxSelectionDto = null;
            //instance.ApiAlertsAlertsgroupinboxClearjsonPost(alertInboxSelectionDto);
        }

        /// <summary>
        /// Test ApiAlertsAlertsgroupinboxDeletecustomfilterjsonPost
        /// </summary>
        [Fact]
        public void ApiAlertsAlertsgroupinboxDeletecustomfilterjsonPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? name = null;
            //var response = instance.ApiAlertsAlertsgroupinboxDeletecustomfilterjsonPost(name);
            //Assert.IsType<bool>(response);
        }

        /// <summary>
        /// Test ApiAlertsAlertsgroupinboxReadalertjsonPost
        /// </summary>
        [Fact]
        public void ApiAlertsAlertsgroupinboxReadalertjsonPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AlertInboxSelectionDto alertInboxSelectionDto = null;
            //instance.ApiAlertsAlertsgroupinboxReadalertjsonPost(alertInboxSelectionDto);
        }

        /// <summary>
        /// Test ApiAlertsAlertsgroupinboxReadjsonPost
        /// </summary>
        [Fact]
        public void ApiAlertsAlertsgroupinboxReadjsonPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AlertInboxSelectionDto alertInboxSelectionDto = null;
            //instance.ApiAlertsAlertsgroupinboxReadjsonPost(alertInboxSelectionDto);
        }

        /// <summary>
        /// Test ApiAlertsAlertsgroupinboxSavecustomfilterjsonPost
        /// </summary>
        [Fact]
        public void ApiAlertsAlertsgroupinboxSavecustomfilterjsonPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //FilterSettingsDto filterSettingsDto = null;
            //string? name = null;
            //instance.ApiAlertsAlertsgroupinboxSavecustomfilterjsonPost(filterSettingsDto, name);
        }

        /// <summary>
        /// Test ApiAlertsAlertsgroupinboxUnclearalertjsonPost
        /// </summary>
        [Fact]
        public void ApiAlertsAlertsgroupinboxUnclearalertjsonPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AlertInboxSelectionDto alertInboxSelectionDto = null;
            //instance.ApiAlertsAlertsgroupinboxUnclearalertjsonPost(alertInboxSelectionDto);
        }

        /// <summary>
        /// Test ApiAlertsAlertsgroupinboxUnclearjsonPost
        /// </summary>
        [Fact]
        public void ApiAlertsAlertsgroupinboxUnclearjsonPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AlertInboxSelectionDto alertInboxSelectionDto = null;
            //instance.ApiAlertsAlertsgroupinboxUnclearjsonPost(alertInboxSelectionDto);
        }

        /// <summary>
        /// Test ApiAlertsAlertsgroupinboxUnreadalertjsonPost
        /// </summary>
        [Fact]
        public void ApiAlertsAlertsgroupinboxUnreadalertjsonPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AlertInboxSelectionDto alertInboxSelectionDto = null;
            //instance.ApiAlertsAlertsgroupinboxUnreadalertjsonPost(alertInboxSelectionDto);
        }

        /// <summary>
        /// Test ApiAlertsAlertsgroupinboxUnreadjsonPost
        /// </summary>
        [Fact]
        public void ApiAlertsAlertsgroupinboxUnreadjsonPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AlertInboxSelectionDto alertInboxSelectionDto = null;
            //instance.ApiAlertsAlertsgroupinboxUnreadjsonPost(alertInboxSelectionDto);
        }
    }
}
