/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using cli.Api;
using Xunit;

// uncomment below to import models
//using cli.Model;

namespace cli.Test.Api;

/// <summary>
///     Class for testing AzureSqlServerAlertSettingsApi
/// </summary>
/// <remarks>
///     This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
///     Please update the test case below to test the API endpoint.
/// </remarks>
public class AzureSqlServerAlertSettingsApiTests : IDisposable
{
    private AzureSqlServerAlertSettingsApi instance;

    public AzureSqlServerAlertSettingsApiTests()
    {
        instance = new AzureSqlServerAlertSettingsApi();
    }

    public void Dispose()
    {
        // Cleanup when everything is done.
    }

    /// <summary>
    ///     Test an instance of AzureSqlServerAlertSettingsApi
    /// </summary>
    [Fact]
    public void InstanceTest()
    {
        // TODO uncomment below to test 'IsType' AzureSqlServerAlertSettingsApi
        //Assert.IsType<AzureSqlServerAlertSettingsApi>(instance);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameAlertsettingsAlertTypeIdCommentsPatch
    /// </summary>
    [Fact]
    public void ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameAlertsettingsAlertTypeIdCommentsPatchTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string serverName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //string? body = null;
        //instance.ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameAlertsettingsAlertTypeIdCommentsPatch(serverName, alertTypeId, baseMonitorName, body);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameAlertsettingsAlertTypeIdGet
    /// </summary>
    [Fact]
    public void ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameAlertsettingsAlertTypeIdGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string serverName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //instance.ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameAlertsettingsAlertTypeIdGet(serverName, alertTypeId, baseMonitorName);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameAlertsettingsAlertTypeIdNotificationsettingsPatch
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameAlertsettingsAlertTypeIdNotificationsettingsPatchTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string serverName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //AlertNotificationSettingsDto? alertNotificationSettingsDto = null;
        //instance.ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameAlertsettingsAlertTypeIdNotificationsettingsPatch(serverName, alertTypeId, baseMonitorName, alertNotificationSettingsDto);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameAlertsettingsAlertTypeIdSpecificsettingsPatch
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameAlertsettingsAlertTypeIdSpecificsettingsPatchTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string serverName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //Hashtable? requestBody = null;
        //instance.ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameAlertsettingsAlertTypeIdSpecificsettingsPatch(serverName, alertTypeId, baseMonitorName, requestBody);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameAlertsettingsAlertTypeIdStatusPatch
    /// </summary>
    [Fact]
    public void ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameAlertsettingsAlertTypeIdStatusPatchTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string serverName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //int? body = null;
        //instance.ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameAlertsettingsAlertTypeIdStatusPatch(serverName, alertTypeId, baseMonitorName, body);
    }
}