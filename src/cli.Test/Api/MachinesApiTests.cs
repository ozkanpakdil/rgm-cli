/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using cli.Api;
using Xunit;

// uncomment below to import models
//using cli.Model;

namespace cli.Test.Api;

/// <summary>
///     Class for testing MachinesApi
/// </summary>
/// <remarks>
///     This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
///     Please update the test case below to test the API endpoint.
/// </remarks>
public class MachinesApiTests : IDisposable
{
    private MachinesApi instance;

    public MachinesApiTests()
    {
        instance = new MachinesApi();
    }

    public void Dispose()
    {
        // Cleanup when everything is done.
    }

    /// <summary>
    ///     Test an instance of MachinesApi
    /// </summary>
    [Fact]
    public void InstanceTest()
    {
        // TODO uncomment below to test 'IsType' MachinesApi
        //Assert.IsType<MachinesApi>(instance);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesGet
    /// </summary>
    [Fact]
    public void ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string clusterName = null;
        //string baseMonitorName = null;
        //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesGet(clusterName, baseMonitorName);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameGet
    /// </summary>
    [Fact]
    public void ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string clusterName = null;
        //string machineName = null;
        //string baseMonitorName = null;
        //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameGet(clusterName, machineName, baseMonitorName);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameStandalonemachinesGet
    /// </summary>
    [Fact]
    public void ApiBasemonitorsBaseMonitorNameStandalonemachinesGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string baseMonitorName = null;
        //instance.ApiBasemonitorsBaseMonitorNameStandalonemachinesGet(baseMonitorName);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameGet
    /// </summary>
    [Fact]
    public void ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string machineName = null;
        //string baseMonitorName = null;
        //instance.ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameGet(machineName, baseMonitorName);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNamePut
    /// </summary>
    [Fact]
    public void ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNamePutTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string machineName = null;
        //string baseMonitorName = null;
        //StandaloneMachineDto? standaloneMachineDto = null;
        //instance.ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNamePut(machineName, baseMonitorName, standaloneMachineDto);
    }
}