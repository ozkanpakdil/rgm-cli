/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using cli.Api;
using Xunit;

// uncomment below to import models
//using cli.Model;

namespace cli.Test.Api;

/// <summary>
///     Class for testing AlertFeedApiApi
/// </summary>
/// <remarks>
///     This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
///     Please update the test case below to test the API endpoint.
/// </remarks>
public class AlertFeedApiApiTests : IDisposable
{
    private AlertFeedApiApi instance;

    public AlertFeedApiApiTests()
    {
        instance = new AlertFeedApiApi();
    }

    public void Dispose()
    {
        // Cleanup when everything is done.
    }

    /// <summary>
    ///     Test an instance of AlertFeedApiApi
    /// </summary>
    [Fact]
    public void InstanceTest()
    {
        // TODO uncomment below to test 'IsType' AlertFeedApiApi
        //Assert.IsType<AlertFeedApiApi>(instance);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameAlertsDetailsAlertIdGet
    /// </summary>
    [Fact]
    public void ApiBasemonitorsBaseMonitorNameAlertsDetailsAlertIdGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //IntegerIdentifier alertId = null;
        //string baseMonitorName = null;
        //var response = instance.ApiBasemonitorsBaseMonitorNameAlertsDetailsAlertIdGet(alertId, baseMonitorName);
        //Assert.IsType<RecentAlertDetailsDtoJSendSuccess>(response);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameAlertsDetailsRelatedAlertIdGet
    /// </summary>
    [Fact]
    public void ApiBasemonitorsBaseMonitorNameAlertsDetailsRelatedAlertIdGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //IntegerIdentifier alertId = null;
        //string baseMonitorName = null;
        //var response = instance.ApiBasemonitorsBaseMonitorNameAlertsDetailsRelatedAlertIdGet(alertId, baseMonitorName);
        //Assert.IsType<AlertHistoryCommentsDtoIEnumerableJSendSuccess>(response);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameAlertsFeedGet
    /// </summary>
    [Fact]
    public void ApiBasemonitorsBaseMonitorNameAlertsFeedGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //ChannelInstanceRef cir = null;
        //DateTime minTime = null;
        //DateTime maxTime = null;
        //string baseMonitorName = null;
        //var response = instance.ApiBasemonitorsBaseMonitorNameAlertsFeedGet(cir, minTime, maxTime, baseMonitorName);
        //Assert.IsType<ServerOverviewAlertsFeedModelDtoJSendSuccess>(response);
    }
}