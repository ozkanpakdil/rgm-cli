/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using cli.Api;
using Xunit;

// uncomment below to import models
//using cli.Model;

namespace cli.Test.Api;

/// <summary>
///     Class for testing AzureElasticPoolAlertSettingsApi
/// </summary>
/// <remarks>
///     This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
///     Please update the test case below to test the API endpoint.
/// </remarks>
public class AzureElasticPoolAlertSettingsApiTests : IDisposable
{
    private AzureElasticPoolAlertSettingsApi instance;

    public AzureElasticPoolAlertSettingsApiTests()
    {
        instance = new AzureElasticPoolAlertSettingsApi();
    }

    public void Dispose()
    {
        // Cleanup when everything is done.
    }

    /// <summary>
    ///     Test an instance of AzureElasticPoolAlertSettingsApi
    /// </summary>
    [Fact]
    public void InstanceTest()
    {
        // TODO uncomment below to test 'IsType' AzureElasticPoolAlertSettingsApi
        //Assert.IsType<AzureElasticPoolAlertSettingsApi>(instance);
    }

    /// <summary>
    ///     Test
    ///     ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameElasticpoolsElasticPoolNameAlertsettingsAlertTypeIdCommentsPatch
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameElasticpoolsElasticPoolNameAlertsettingsAlertTypeIdCommentsPatchTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string serverName = null;
        //string elasticPoolName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //string? body = null;
        //instance.ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameElasticpoolsElasticPoolNameAlertsettingsAlertTypeIdCommentsPatch(serverName, elasticPoolName, alertTypeId, baseMonitorName, body);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameElasticpoolsElasticPoolNameAlertsettingsAlertTypeIdGet
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameElasticpoolsElasticPoolNameAlertsettingsAlertTypeIdGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string serverName = null;
        //string elasticPoolName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //var response = instance.ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameElasticpoolsElasticPoolNameAlertsettingsAlertTypeIdGet(serverName, elasticPoolName, alertTypeId, baseMonitorName);
        //Assert.IsType<AlertSettingsDto>(response);
    }

    /// <summary>
    ///     Test
    ///     ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameElasticpoolsElasticPoolNameAlertsettingsAlertTypeIdNotificationsettingsPatch
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameElasticpoolsElasticPoolNameAlertsettingsAlertTypeIdNotificationsettingsPatchTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string serverName = null;
        //string elasticPoolName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //AlertNotificationSettingsDto? alertNotificationSettingsDto = null;
        //instance.ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameElasticpoolsElasticPoolNameAlertsettingsAlertTypeIdNotificationsettingsPatch(serverName, elasticPoolName, alertTypeId, baseMonitorName, alertNotificationSettingsDto);
    }

    /// <summary>
    ///     Test
    ///     ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameElasticpoolsElasticPoolNameAlertsettingsAlertTypeIdSpecificsettingsPatch
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameElasticpoolsElasticPoolNameAlertsettingsAlertTypeIdSpecificsettingsPatchTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string serverName = null;
        //string elasticPoolName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //Hashtable? requestBody = null;
        //instance.ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameElasticpoolsElasticPoolNameAlertsettingsAlertTypeIdSpecificsettingsPatch(serverName, elasticPoolName, alertTypeId, baseMonitorName, requestBody);
    }

    /// <summary>
    ///     Test
    ///     ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameElasticpoolsElasticPoolNameAlertsettingsAlertTypeIdStatusPatch
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameElasticpoolsElasticPoolNameAlertsettingsAlertTypeIdStatusPatchTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string serverName = null;
        //string elasticPoolName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //int? body = null;
        //instance.ApiBasemonitorsBaseMonitorNameAzuresqlserversServerNameElasticpoolsElasticPoolNameAlertsettingsAlertTypeIdStatusPatch(serverName, elasticPoolName, alertTypeId, baseMonitorName, body);
    }
}