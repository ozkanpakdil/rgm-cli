/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using cli.Client;
using cli.Api;
// uncomment below to import models
//using cli.Model;

namespace cli.Test.Api
{
    /// <summary>
    ///  Class for testing InstancesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class InstancesApiTests : IDisposable
    {
        private InstancesApi instance;

        public InstancesApiTests()
        {
            instance = new InstancesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of InstancesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' InstancesApi
            //Assert.IsType<InstancesApi>(instance);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clusterName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesGet(clusterName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clusterName = null;
            //string instanceName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameGet(clusterName, instanceName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNamePut
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNamePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clusterName = null;
            //string instanceName = null;
            //string baseMonitorName = null;
            //ClusterInstanceDto? clusterInstanceDto = null;
            //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNamePut(clusterName, instanceName, baseMonitorName, clusterInstanceDto);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clusterName = null;
            //string machineName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesGet(clusterName, machineName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clusterName = null;
            //string machineName = null;
            //string instanceName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameGet(clusterName, machineName, instanceName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNamePut
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNamePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clusterName = null;
            //string machineName = null;
            //string instanceName = null;
            //string baseMonitorName = null;
            //MachineInstanceDto? machineInstanceDto = null;
            //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNamePut(clusterName, machineName, instanceName, baseMonitorName, machineInstanceDto);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameInstancesGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameInstancesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameInstancesGet(baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string machineName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesGet(machineName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameGet
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string machineName = null;
            //string instanceName = null;
            //string baseMonitorName = null;
            //instance.ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameGet(machineName, instanceName, baseMonitorName);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNamePut
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNamePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string machineName = null;
            //string instanceName = null;
            //string baseMonitorName = null;
            //MachineInstanceDto? machineInstanceDto = null;
            //instance.ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNamePut(machineName, instanceName, baseMonitorName, machineInstanceDto);
        }
    }
}
