/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using cli.Api;
using Xunit;

// uncomment below to import models
//using cli.Model;

namespace cli.Test.Api;

/// <summary>
///     Class for testing InstanceAlertSettingsApi
/// </summary>
/// <remarks>
///     This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
///     Please update the test case below to test the API endpoint.
/// </remarks>
public class InstanceAlertSettingsApiTests : IDisposable
{
    private InstanceAlertSettingsApi instance;

    public InstanceAlertSettingsApiTests()
    {
        instance = new InstanceAlertSettingsApi();
    }

    public void Dispose()
    {
        // Cleanup when everything is done.
    }

    /// <summary>
    ///     Test an instance of InstanceAlertSettingsApi
    /// </summary>
    [Fact]
    public void InstanceTest()
    {
        // TODO uncomment below to test 'IsType' InstanceAlertSettingsApi
        //Assert.IsType<InstanceAlertSettingsApi>(instance);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameAlertsettingsAlertTypeIdCommentsPatch
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameAlertsettingsAlertTypeIdCommentsPatchTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string clusterName = null;
        //string instanceName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //string? body = null;
        //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameAlertsettingsAlertTypeIdCommentsPatch(clusterName, instanceName, alertTypeId, baseMonitorName, body);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameAlertsettingsAlertTypeIdGet
    /// </summary>
    [Fact]
    public void ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameAlertsettingsAlertTypeIdGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string clusterName = null;
        //string instanceName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameAlertsettingsAlertTypeIdGet(clusterName, instanceName, alertTypeId, baseMonitorName);
    }

    /// <summary>
    ///     Test
    ///     ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameAlertsettingsAlertTypeIdNotificationsettingsPatch
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameAlertsettingsAlertTypeIdNotificationsettingsPatchTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string clusterName = null;
        //string instanceName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //AlertNotificationSettingsDto? alertNotificationSettingsDto = null;
        //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameAlertsettingsAlertTypeIdNotificationsettingsPatch(clusterName, instanceName, alertTypeId, baseMonitorName, alertNotificationSettingsDto);
    }

    /// <summary>
    ///     Test
    ///     ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameAlertsettingsAlertTypeIdSpecificsettingsPatch
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameAlertsettingsAlertTypeIdSpecificsettingsPatchTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string clusterName = null;
        //string instanceName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //Hashtable? requestBody = null;
        //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameAlertsettingsAlertTypeIdSpecificsettingsPatch(clusterName, instanceName, alertTypeId, baseMonitorName, requestBody);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameAlertsettingsAlertTypeIdStatusPatch
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameAlertsettingsAlertTypeIdStatusPatchTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string clusterName = null;
        //string instanceName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //int? body = null;
        //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameInstancesInstanceNameAlertsettingsAlertTypeIdStatusPatch(clusterName, instanceName, alertTypeId, baseMonitorName, body);
    }

    /// <summary>
    ///     Test
    ///     ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdCommentsPatch
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdCommentsPatchTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string clusterName = null;
        //string machineName = null;
        //string instanceName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //string? body = null;
        //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdCommentsPatch(clusterName, machineName, instanceName, alertTypeId, baseMonitorName, body);
    }

    /// <summary>
    ///     Test
    ///     ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdGet
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string clusterName = null;
        //string machineName = null;
        //string instanceName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdGet(clusterName, machineName, instanceName, alertTypeId, baseMonitorName);
    }

    /// <summary>
    ///     Test
    ///     ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdNotificationsettingsPatch
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdNotificationsettingsPatchTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string clusterName = null;
        //string machineName = null;
        //string instanceName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //AlertNotificationSettingsDto? alertNotificationSettingsDto = null;
        //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdNotificationsettingsPatch(clusterName, machineName, instanceName, alertTypeId, baseMonitorName, alertNotificationSettingsDto);
    }

    /// <summary>
    ///     Test
    ///     ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdSpecificsettingsPatch
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdSpecificsettingsPatchTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string clusterName = null;
        //string machineName = null;
        //string instanceName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //Hashtable? requestBody = null;
        //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdSpecificsettingsPatch(clusterName, machineName, instanceName, alertTypeId, baseMonitorName, requestBody);
    }

    /// <summary>
    ///     Test
    ///     ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdStatusPatch
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdStatusPatchTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string clusterName = null;
        //string machineName = null;
        //string instanceName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //int? body = null;
        //instance.ApiBasemonitorsBaseMonitorNameClustersClusterNameMachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdStatusPatch(clusterName, machineName, instanceName, alertTypeId, baseMonitorName, body);
    }

    /// <summary>
    ///     Test
    ///     ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdCommentsPatch
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdCommentsPatchTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string machineName = null;
        //string instanceName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //string? body = null;
        //instance.ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdCommentsPatch(machineName, instanceName, alertTypeId, baseMonitorName, body);
    }

    /// <summary>
    ///     Test ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdGet
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string machineName = null;
        //string instanceName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //instance.ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdGet(machineName, instanceName, alertTypeId, baseMonitorName);
    }

    /// <summary>
    ///     Test
    ///     ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdNotificationsettingsPatch
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdNotificationsettingsPatchTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string machineName = null;
        //string instanceName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //AlertNotificationSettingsDto? alertNotificationSettingsDto = null;
        //instance.ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdNotificationsettingsPatch(machineName, instanceName, alertTypeId, baseMonitorName, alertNotificationSettingsDto);
    }

    /// <summary>
    ///     Test
    ///     ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdSpecificsettingsPatch
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdSpecificsettingsPatchTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string machineName = null;
        //string instanceName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //Hashtable? requestBody = null;
        //instance.ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdSpecificsettingsPatch(machineName, instanceName, alertTypeId, baseMonitorName, requestBody);
    }

    /// <summary>
    ///     Test
    ///     ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdStatusPatch
    /// </summary>
    [Fact]
    public void
        ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdStatusPatchTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //string machineName = null;
        //string instanceName = null;
        //long alertTypeId = null;
        //string baseMonitorName = null;
        //int? body = null;
        //instance.ApiBasemonitorsBaseMonitorNameStandalonemachinesMachineNameInstancesInstanceNameAlertsettingsAlertTypeIdStatusPatch(machineName, instanceName, alertTypeId, baseMonitorName, body);
    }
}