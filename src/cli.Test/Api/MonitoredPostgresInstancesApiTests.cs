/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using cli.Client;
using cli.Api;
// uncomment below to import models
//using cli.Model;

namespace cli.Test.Api
{
    /// <summary>
    ///  Class for testing MonitoredPostgresInstancesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MonitoredPostgresInstancesApiTests : IDisposable
    {
        private MonitoredPostgresInstancesApi instance;

        public MonitoredPostgresInstancesApiTests()
        {
            instance = new MonitoredPostgresInstancesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MonitoredPostgresInstancesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' MonitoredPostgresInstancesApi
            //Assert.IsType<MonitoredPostgresInstancesApi>(instance);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNamePostgresinstancesInstanceNamePut
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNamePostgresinstancesInstanceNamePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string instanceName = null;
            //string baseMonitorName = null;
            //PostgresServerAliasUpdateDto? postgresServerAliasUpdateDto = null;
            //instance.ApiBasemonitorsBaseMonitorNamePostgresinstancesInstanceNamePut(instanceName, baseMonitorName, postgresServerAliasUpdateDto);
        }

        /// <summary>
        /// Test ApiBasemonitorsBaseMonitorNamePostgresinstancesPost
        /// </summary>
        [Fact]
        public void ApiBasemonitorsBaseMonitorNamePostgresinstancesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string baseMonitorName = null;
            //AddPostgresInstanceRequest? addPostgresInstanceRequest = null;
            //var response = instance.ApiBasemonitorsBaseMonitorNamePostgresinstancesPost(baseMonitorName, addPostgresInstanceRequest);
            //Assert.IsType<AddPostgresInstanceResultJSendSuccess>(response);
        }
    }
}
