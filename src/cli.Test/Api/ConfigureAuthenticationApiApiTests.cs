/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using cli.Api;
using Xunit;

// uncomment below to import models
//using cli.Model;

namespace cli.Test.Api;

/// <summary>
///     Class for testing ConfigureAuthenticationApiApi
/// </summary>
/// <remarks>
///     This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
///     Please update the test case below to test the API endpoint.
/// </remarks>
public class ConfigureAuthenticationApiApiTests : IDisposable
{
    private ConfigureAuthenticationApiApi instance;

    public ConfigureAuthenticationApiApiTests()
    {
        instance = new ConfigureAuthenticationApiApi();
    }

    public void Dispose()
    {
        // Cleanup when everything is done.
    }

    /// <summary>
    ///     Test an instance of ConfigureAuthenticationApiApi
    /// </summary>
    [Fact]
    public void InstanceTest()
    {
        // TODO uncomment below to test 'IsType' ConfigureAuthenticationApiApi
        //Assert.IsType<ConfigureAuthenticationApiApi>(instance);
    }

    /// <summary>
    ///     Test ApiConfigurationAuthAdDomainDelete
    /// </summary>
    [Fact]
    public void ApiConfigurationAuthAdDomainDeleteTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //DeleteDomainConnectionRequest? deleteDomainConnectionRequest = null;
        //var response = instance.ApiConfigurationAuthAdDomainDelete(deleteDomainConnectionRequest);
        //Assert.IsType<JSendSuccess>(response);
    }

    /// <summary>
    ///     Test ApiConfigurationAuthAdDomainPost
    /// </summary>
    [Fact]
    public void ApiConfigurationAuthAdDomainPostTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //ActiveDirectoryDomainViewModel? activeDirectoryDomainViewModel = null;
        //var response = instance.ApiConfigurationAuthAdDomainPost(activeDirectoryDomainViewModel);
        //Assert.IsType<JSendSuccess>(response);
    }

    /// <summary>
    ///     Test ApiConfigurationAuthAdDomainTestPost
    /// </summary>
    [Fact]
    public void ApiConfigurationAuthAdDomainTestPostTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //ActiveDirectoryDomainViewModel? activeDirectoryDomainViewModel = null;
        //var response = instance.ApiConfigurationAuthAdDomainTestPost(activeDirectoryDomainViewModel);
        //Assert.IsType<JSendSuccess>(response);
    }

    /// <summary>
    ///     Test ApiConfigurationAuthAdGet
    /// </summary>
    [Fact]
    public void ApiConfigurationAuthAdGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //var response = instance.ApiConfigurationAuthAdGet();
        //Assert.IsType<AuthenticationViewModelJSendSuccess>(response);
    }

    /// <summary>
    ///     Test ApiConfigurationAuthAdPut
    /// </summary>
    [Fact]
    public void ApiConfigurationAuthAdPutTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //SwitchToActiveDirectoryNewSettingsRequest? switchToActiveDirectoryNewSettingsRequest = null;
        //var response = instance.ApiConfigurationAuthAdPut(switchToActiveDirectoryNewSettingsRequest);
        //Assert.IsType<JSendSuccess>(response);
    }

    /// <summary>
    ///     Test ApiConfigurationAuthOidcGet
    /// </summary>
    [Fact]
    public void ApiConfigurationAuthOidcGetTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //var response = instance.ApiConfigurationAuthOidcGet();
        //Assert.IsType<OpenIdConnectSettingsDtoJSendSuccess>(response);
    }

    /// <summary>
    ///     Test ApiConfigurationAuthOidcPut
    /// </summary>
    [Fact]
    public void ApiConfigurationAuthOidcPutTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //OpenIdConnectSettingsDto? openIdConnectSettingsDto = null;
        //var response = instance.ApiConfigurationAuthOidcPut(openIdConnectSettingsDto);
        //Assert.IsType<JSendSuccess>(response);
    }

    /// <summary>
    ///     Test ApiConfigurationAuthPost
    /// </summary>
    [Fact]
    public void ApiConfigurationAuthPostTest()
    {
        // TODO uncomment below to test the method and replace null with proper value
        //SwitchAuthenticationTypeDto? switchAuthenticationTypeDto = null;
        //var response = instance.ApiConfigurationAuthPost(switchAuthenticationTypeDto);
        //Assert.IsType<JSendSuccess>(response);
    }
}