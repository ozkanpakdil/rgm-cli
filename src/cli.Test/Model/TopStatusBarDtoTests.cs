/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using cli.Model;
using cli.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace cli.Test.Model
{
    /// <summary>
    ///  Class for testing TopStatusBarDto
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TopStatusBarDtoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TopStatusBarDto
        //private TopStatusBarDto instance;

        public TopStatusBarDtoTests()
        {
            // TODO uncomment below to create an instance of TopStatusBarDto
            //instance = new TopStatusBarDto();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TopStatusBarDto
        /// </summary>
        [Fact]
        public void TopStatusBarDtoInstanceTest()
        {
            // TODO uncomment below to test "IsType" TopStatusBarDto
            //Assert.IsType<TopStatusBarDto>(instance);
        }

        /// <summary>
        /// Test the property 'ProductName'
        /// </summary>
        [Fact]
        public void ProductNameTest()
        {
            // TODO unit test for the property 'ProductName'
        }

        /// <summary>
        /// Test the property 'LicensingWarnings'
        /// </summary>
        [Fact]
        public void LicensingWarningsTest()
        {
            // TODO unit test for the property 'LicensingWarnings'
        }

        /// <summary>
        /// Test the property 'FailingNotifiers'
        /// </summary>
        [Fact]
        public void FailingNotifiersTest()
        {
            // TODO unit test for the property 'FailingNotifiers'
        }

        /// <summary>
        /// Test the property 'ShowHttpWarning'
        /// </summary>
        [Fact]
        public void ShowHttpWarningTest()
        {
            // TODO unit test for the property 'ShowHttpWarning'
        }

        /// <summary>
        /// Test the property 'ShowTopBar'
        /// </summary>
        [Fact]
        public void ShowTopBarTest()
        {
            // TODO unit test for the property 'ShowTopBar'
        }

        /// <summary>
        /// Test the property 'Updates'
        /// </summary>
        [Fact]
        public void UpdatesTest()
        {
            // TODO unit test for the property 'Updates'
        }

        /// <summary>
        /// Test the property 'SkewedClocks'
        /// </summary>
        [Fact]
        public void SkewedClocksTest()
        {
            // TODO unit test for the property 'SkewedClocks'
        }

        /// <summary>
        /// Test the property 'BlockedBaseMonitors'
        /// </summary>
        [Fact]
        public void BlockedBaseMonitorsTest()
        {
            // TODO unit test for the property 'BlockedBaseMonitors'
        }

        /// <summary>
        /// Test the property 'BaseMonitorsWithDecryptionFailures'
        /// </summary>
        [Fact]
        public void BaseMonitorsWithDecryptionFailuresTest()
        {
            // TODO unit test for the property 'BaseMonitorsWithDecryptionFailures'
        }

        /// <summary>
        /// Test the property 'IsConnectedToBaseMonitorUsingPostgres'
        /// </summary>
        [Fact]
        public void IsConnectedToBaseMonitorUsingPostgresTest()
        {
            // TODO unit test for the property 'IsConnectedToBaseMonitorUsingPostgres'
        }
    }
}
