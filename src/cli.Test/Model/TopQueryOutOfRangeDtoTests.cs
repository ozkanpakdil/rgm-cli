/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using cli.Model;
using cli.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace cli.Test.Model
{
    /// <summary>
    ///  Class for testing TopQueryOutOfRangeDto
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TopQueryOutOfRangeDtoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TopQueryOutOfRangeDto
        //private TopQueryOutOfRangeDto instance;

        public TopQueryOutOfRangeDtoTests()
        {
            // TODO uncomment below to create an instance of TopQueryOutOfRangeDto
            //instance = new TopQueryOutOfRangeDto();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TopQueryOutOfRangeDto
        /// </summary>
        [Fact]
        public void TopQueryOutOfRangeDtoInstanceTest()
        {
            // TODO uncomment below to test "IsType" TopQueryOutOfRangeDto
            //Assert.IsType<TopQueryOutOfRangeDto>(instance);
        }

        /// <summary>
        /// Test the property 'ChannelInstanceRef'
        /// </summary>
        [Fact]
        public void ChannelInstanceRefTest()
        {
            // TODO unit test for the property 'ChannelInstanceRef'
        }

        /// <summary>
        /// Test the property 'QueryText'
        /// </summary>
        [Fact]
        public void QueryTextTest()
        {
            // TODO unit test for the property 'QueryText'
        }

        /// <summary>
        /// Test the property 'QueryHash'
        /// </summary>
        [Fact]
        public void QueryHashTest()
        {
            // TODO unit test for the property 'QueryHash'
        }

        /// <summary>
        /// Test the property 'Database'
        /// </summary>
        [Fact]
        public void DatabaseTest()
        {
            // TODO unit test for the property 'Database'
        }

        /// <summary>
        /// Test the property 'IsTrackedAndNotInZoomRange'
        /// </summary>
        [Fact]
        public void IsTrackedAndNotInZoomRangeTest()
        {
            // TODO unit test for the property 'IsTrackedAndNotInZoomRange'
        }
    }
}
