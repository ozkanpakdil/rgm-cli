/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using cli.Model;
using cli.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace cli.Test.Model
{
    /// <summary>
    ///  Class for testing PostgresTopQueryDto
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PostgresTopQueryDtoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PostgresTopQueryDto
        //private PostgresTopQueryDto instance;

        public PostgresTopQueryDtoTests()
        {
            // TODO uncomment below to create an instance of PostgresTopQueryDto
            //instance = new PostgresTopQueryDto();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PostgresTopQueryDto
        /// </summary>
        [Fact]
        public void PostgresTopQueryDtoInstanceTest()
        {
            // TODO uncomment below to test "IsType" PostgresTopQueryDto
            //Assert.IsType<PostgresTopQueryDto>(instance);
        }

        /// <summary>
        /// Test the property 'QueryId'
        /// </summary>
        [Fact]
        public void QueryIdTest()
        {
            // TODO unit test for the property 'QueryId'
        }

        /// <summary>
        /// Test the property 'QueryCir'
        /// </summary>
        [Fact]
        public void QueryCirTest()
        {
            // TODO unit test for the property 'QueryCir'
        }

        /// <summary>
        /// Test the property 'DatabaseName'
        /// </summary>
        [Fact]
        public void DatabaseNameTest()
        {
            // TODO unit test for the property 'DatabaseName'
        }

        /// <summary>
        /// Test the property 'DatabaseId'
        /// </summary>
        [Fact]
        public void DatabaseIdTest()
        {
            // TODO unit test for the property 'DatabaseId'
        }

        /// <summary>
        /// Test the property 'UserId'
        /// </summary>
        [Fact]
        public void UserIdTest()
        {
            // TODO unit test for the property 'UserId'
        }

        /// <summary>
        /// Test the property 'TopLevel'
        /// </summary>
        [Fact]
        public void TopLevelTest()
        {
            // TODO unit test for the property 'TopLevel'
        }

        /// <summary>
        /// Test the property 'QueryText'
        /// </summary>
        [Fact]
        public void QueryTextTest()
        {
            // TODO unit test for the property 'QueryText'
        }

        /// <summary>
        /// Test the property 'QueryHash'
        /// </summary>
        [Fact]
        public void QueryHashTest()
        {
            // TODO unit test for the property 'QueryHash'
        }

        /// <summary>
        /// Test the property 'Duration'
        /// </summary>
        [Fact]
        public void DurationTest()
        {
            // TODO unit test for the property 'Duration'
        }

        /// <summary>
        /// Test the property 'ExecutionCount'
        /// </summary>
        [Fact]
        public void ExecutionCountTest()
        {
            // TODO unit test for the property 'ExecutionCount'
        }

        /// <summary>
        /// Test the property 'CacheBlocksHit'
        /// </summary>
        [Fact]
        public void CacheBlocksHitTest()
        {
            // TODO unit test for the property 'CacheBlocksHit'
        }

        /// <summary>
        /// Test the property 'BlocksRead'
        /// </summary>
        [Fact]
        public void BlocksReadTest()
        {
            // TODO unit test for the property 'BlocksRead'
        }

        /// <summary>
        /// Test the property 'BlocksWritten'
        /// </summary>
        [Fact]
        public void BlocksWrittenTest()
        {
            // TODO unit test for the property 'BlocksWritten'
        }

        /// <summary>
        /// Test the property 'IoTime'
        /// </summary>
        [Fact]
        public void IoTimeTest()
        {
            // TODO unit test for the property 'IoTime'
        }

        /// <summary>
        /// Test the property 'QueryPlanExists'
        /// </summary>
        [Fact]
        public void QueryPlanExistsTest()
        {
            // TODO unit test for the property 'QueryPlanExists'
        }

        /// <summary>
        /// Test the property 'PlanHash'
        /// </summary>
        [Fact]
        public void PlanHashTest()
        {
            // TODO unit test for the property 'PlanHash'
        }
    }
}
