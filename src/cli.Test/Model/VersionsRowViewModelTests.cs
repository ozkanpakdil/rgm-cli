/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using cli.Model;
using cli.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace cli.Test.Model
{
    /// <summary>
    ///  Class for testing VersionsRowViewModel
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class VersionsRowViewModelTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for VersionsRowViewModel
        //private VersionsRowViewModel instance;

        public VersionsRowViewModelTests()
        {
            // TODO uncomment below to create an instance of VersionsRowViewModel
            //instance = new VersionsRowViewModel();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of VersionsRowViewModel
        /// </summary>
        [Fact]
        public void VersionsRowViewModelInstanceTest()
        {
            // TODO uncomment below to test "IsType" VersionsRowViewModel
            //Assert.IsType<VersionsRowViewModel>(instance);
        }

        /// <summary>
        /// Test the property 'EntityName'
        /// </summary>
        [Fact]
        public void EntityNameTest()
        {
            // TODO unit test for the property 'EntityName'
        }

        /// <summary>
        /// Test the property 'Group'
        /// </summary>
        [Fact]
        public void GroupTest()
        {
            // TODO unit test for the property 'Group'
        }

        /// <summary>
        /// Test the property 'ClusterName'
        /// </summary>
        [Fact]
        public void ClusterNameTest()
        {
            // TODO unit test for the property 'ClusterName'
        }

        /// <summary>
        /// Test the property 'EntityType'
        /// </summary>
        [Fact]
        public void EntityTypeTest()
        {
            // TODO unit test for the property 'EntityType'
        }

        /// <summary>
        /// Test the property 'Edition'
        /// </summary>
        [Fact]
        public void EditionTest()
        {
            // TODO unit test for the property 'Edition'
        }

        /// <summary>
        /// Test the property 'RawProductLevel'
        /// </summary>
        [Fact]
        public void RawProductLevelTest()
        {
            // TODO unit test for the property 'RawProductLevel'
        }

        /// <summary>
        /// Test the property 'VersionNumber'
        /// </summary>
        [Fact]
        public void VersionNumberTest()
        {
            // TODO unit test for the property 'VersionNumber'
        }

        /// <summary>
        /// Test the property 'FriendlyVersion'
        /// </summary>
        [Fact]
        public void FriendlyVersionTest()
        {
            // TODO unit test for the property 'FriendlyVersion'
        }

        /// <summary>
        /// Test the property 'IsUpToDate'
        /// </summary>
        [Fact]
        public void IsUpToDateTest()
        {
            // TODO unit test for the property 'IsUpToDate'
        }

        /// <summary>
        /// Test the property 'IsOnLatestServicePack'
        /// </summary>
        [Fact]
        public void IsOnLatestServicePackTest()
        {
            // TODO unit test for the property 'IsOnLatestServicePack'
        }

        /// <summary>
        /// Test the property 'HasAdditionalPatches'
        /// </summary>
        [Fact]
        public void HasAdditionalPatchesTest()
        {
            // TODO unit test for the property 'HasAdditionalPatches'
        }

        /// <summary>
        /// Test the property 'ReleaseDate'
        /// </summary>
        [Fact]
        public void ReleaseDateTest()
        {
            // TODO unit test for the property 'ReleaseDate'
        }

        /// <summary>
        /// Test the property 'EndOfSupportDate'
        /// </summary>
        [Fact]
        public void EndOfSupportDateTest()
        {
            // TODO unit test for the property 'EndOfSupportDate'
        }

        /// <summary>
        /// Test the property 'EndOfExtendedSupportDate'
        /// </summary>
        [Fact]
        public void EndOfExtendedSupportDateTest()
        {
            // TODO unit test for the property 'EndOfExtendedSupportDate'
        }

        /// <summary>
        /// Test the property 'LatestUpdate'
        /// </summary>
        [Fact]
        public void LatestUpdateTest()
        {
            // TODO unit test for the property 'LatestUpdate'
        }

        /// <summary>
        /// Test the property 'ProductLevel'
        /// </summary>
        [Fact]
        public void ProductLevelTest()
        {
            // TODO unit test for the property 'ProductLevel'
        }

        /// <summary>
        /// Test the property 'Tags'
        /// </summary>
        [Fact]
        public void TagsTest()
        {
            // TODO unit test for the property 'Tags'
        }
    }
}
