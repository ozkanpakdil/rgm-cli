/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using Xunit;

namespace cli.Test.Model;

/// <summary>
///     Class for testing PropertiesDto
/// </summary>
/// <remarks>
///     This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
///     Please update the test case below to test the model.
/// </remarks>
public class PropertiesDtoTests : IDisposable
{
    // TODO uncomment below to declare an instance variable for PropertiesDto
    //private PropertiesDto instance;

    public void Dispose()
    {
        // Cleanup when everything is done.
    }

    /// <summary>
    ///     Test an instance of PropertiesDto
    /// </summary>
    [Fact]
    public void PropertiesDtoInstanceTest()
    {
        // TODO uncomment below to test "IsType" PropertiesDto
        //Assert.IsType<PropertiesDto>(instance);
    }

    /// <summary>
    ///     Test the property 'ForceEncryption'
    /// </summary>
    [Fact]
    public void ForceEncryptionTest()
    {
        // TODO unit test for the property 'ForceEncryption'
    }

    /// <summary>
    ///     Test the property 'CertificateThumbprint'
    /// </summary>
    [Fact]
    public void CertificateThumbprintTest()
    {
        // TODO unit test for the property 'CertificateThumbprint'
    }

    /// <summary>
    ///     Test the property 'InstallationDirectory'
    /// </summary>
    [Fact]
    public void InstallationDirectoryTest()
    {
        // TODO unit test for the property 'InstallationDirectory'
    }

    /// <summary>
    ///     Test the property 'CustomerExperienceFeedbackEnabled'
    /// </summary>
    [Fact]
    public void CustomerExperienceFeedbackEnabledTest()
    {
        // TODO unit test for the property 'CustomerExperienceFeedbackEnabled'
    }

    /// <summary>
    ///     Test the property 'CustomerExperienceErrorReportingEnabled'
    /// </summary>
    [Fact]
    public void CustomerExperienceErrorReportingEnabledTest()
    {
        // TODO unit test for the property 'CustomerExperienceErrorReportingEnabled'
    }

    /// <summary>
    ///     Test the property 'CustomerExperienceAuditDirectory'
    /// </summary>
    [Fact]
    public void CustomerExperienceAuditDirectoryTest()
    {
        // TODO unit test for the property 'CustomerExperienceAuditDirectory'
    }

    /// <summary>
    ///     Test the property 'IsClustered'
    /// </summary>
    [Fact]
    public void IsClusteredTest()
    {
        // TODO unit test for the property 'IsClustered'
    }

    /// <summary>
    ///     Test the property 'IsSingleUser'
    /// </summary>
    [Fact]
    public void IsSingleUserTest()
    {
        // TODO unit test for the property 'IsSingleUser'
    }

    /// <summary>
    ///     Test the property 'HideInstance'
    /// </summary>
    [Fact]
    public void HideInstanceTest()
    {
        // TODO unit test for the property 'HideInstance'
    }

    /// <summary>
    ///     Test the property 'ProductLevel'
    /// </summary>
    [Fact]
    public void ProductLevelTest()
    {
        // TODO unit test for the property 'ProductLevel'
    }

    /// <summary>
    ///     Test the property 'ProductVersion'
    /// </summary>
    [Fact]
    public void ProductVersionTest()
    {
        // TODO unit test for the property 'ProductVersion'
    }

    /// <summary>
    ///     Test the property 'ProductVersionNumber'
    /// </summary>
    [Fact]
    public void ProductVersionNumberTest()
    {
        // TODO unit test for the property 'ProductVersionNumber'
    }

    /// <summary>
    ///     Test the property 'Edition'
    /// </summary>
    [Fact]
    public void EditionTest()
    {
        // TODO unit test for the property 'Edition'
    }

    /// <summary>
    ///     Test the property 'MaxNumberErrorLogFiles'
    /// </summary>
    [Fact]
    public void MaxNumberErrorLogFilesTest()
    {
        // TODO unit test for the property 'MaxNumberErrorLogFiles'
    }

    /// <summary>
    ///     Test the property 'AuditLevel'
    /// </summary>
    [Fact]
    public void AuditLevelTest()
    {
        // TODO unit test for the property 'AuditLevel'
    }
}