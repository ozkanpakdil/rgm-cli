/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using Xunit;

namespace cli.Test.Model;

/// <summary>
///     Class for testing PrincipalEditorMonitoredEntityDto
/// </summary>
/// <remarks>
///     This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
///     Please update the test case below to test the model.
/// </remarks>
public class PrincipalEditorMonitoredEntityDtoTests : IDisposable
{
    // TODO uncomment below to declare an instance variable for PrincipalEditorMonitoredEntityDto
    //private PrincipalEditorMonitoredEntityDto instance;

    public void Dispose()
    {
        // Cleanup when everything is done.
    }

    /// <summary>
    ///     Test an instance of PrincipalEditorMonitoredEntityDto
    /// </summary>
    [Fact]
    public void PrincipalEditorMonitoredEntityDtoInstanceTest()
    {
        // TODO uncomment below to test "IsType" PrincipalEditorMonitoredEntityDto
        //Assert.IsType<PrincipalEditorMonitoredEntityDto>(instance);
    }

    /// <summary>
    ///     Test the property 'Name'
    /// </summary>
    [Fact]
    public void NameTest()
    {
        // TODO unit test for the property 'Name'
    }

    /// <summary>
    ///     Test the property 'Cir'
    /// </summary>
    [Fact]
    public void CirTest()
    {
        // TODO unit test for the property 'Cir'
    }

    /// <summary>
    ///     Test the property 'Selected'
    /// </summary>
    [Fact]
    public void SelectedTest()
    {
        // TODO unit test for the property 'Selected'
    }

    /// <summary>
    ///     Test the property 'EntityType'
    /// </summary>
    [Fact]
    public void EntityTypeTest()
    {
        // TODO unit test for the property 'EntityType'
    }

    /// <summary>
    ///     Test the property 'BaseMonitorName'
    /// </summary>
    [Fact]
    public void BaseMonitorNameTest()
    {
        // TODO unit test for the property 'BaseMonitorName'
    }

    /// <summary>
    ///     Test the property 'ChildEntities'
    /// </summary>
    [Fact]
    public void ChildEntitiesTest()
    {
        // TODO unit test for the property 'ChildEntities'
    }

    /// <summary>
    ///     Test the property 'IsMachine'
    /// </summary>
    [Fact]
    public void IsMachineTest()
    {
        // TODO unit test for the property 'IsMachine'
    }

    /// <summary>
    ///     Test the property 'IsCluster'
    /// </summary>
    [Fact]
    public void IsClusterTest()
    {
        // TODO unit test for the property 'IsCluster'
    }

    /// <summary>
    ///     Test the property 'IsAzureSqlServer'
    /// </summary>
    [Fact]
    public void IsAzureSqlServerTest()
    {
        // TODO unit test for the property 'IsAzureSqlServer'
    }

    /// <summary>
    ///     Test the property 'IsAzureManagedInstance'
    /// </summary>
    [Fact]
    public void IsAzureManagedInstanceTest()
    {
        // TODO unit test for the property 'IsAzureManagedInstance'
    }

    /// <summary>
    ///     Test the property 'IsAmazonRdsSqlServer'
    /// </summary>
    [Fact]
    public void IsAmazonRdsSqlServerTest()
    {
        // TODO unit test for the property 'IsAmazonRdsSqlServer'
    }

    /// <summary>
    ///     Test the property 'IsLinuxMachine'
    /// </summary>
    [Fact]
    public void IsLinuxMachineTest()
    {
        // TODO unit test for the property 'IsLinuxMachine'
    }

    /// <summary>
    ///     Test the property 'IsSqlServerInstance'
    /// </summary>
    [Fact]
    public void IsSqlServerInstanceTest()
    {
        // TODO unit test for the property 'IsSqlServerInstance'
    }

    /// <summary>
    ///     Test the property 'IsPostgresInstance'
    /// </summary>
    [Fact]
    public void IsPostgresInstanceTest()
    {
        // TODO unit test for the property 'IsPostgresInstance'
    }
}