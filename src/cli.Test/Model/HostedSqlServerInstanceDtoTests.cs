/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using cli.Model;
using cli.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace cli.Test.Model
{
    /// <summary>
    ///  Class for testing HostedSqlServerInstanceDto
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class HostedSqlServerInstanceDtoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for HostedSqlServerInstanceDto
        //private HostedSqlServerInstanceDto instance;

        public HostedSqlServerInstanceDtoTests()
        {
            // TODO uncomment below to create an instance of HostedSqlServerInstanceDto
            //instance = new HostedSqlServerInstanceDto();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of HostedSqlServerInstanceDto
        /// </summary>
        [Fact]
        public void HostedSqlServerInstanceDtoInstanceTest()
        {
            // TODO uncomment below to test "IsType" HostedSqlServerInstanceDto
            //Assert.IsType<HostedSqlServerInstanceDto>(instance);
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Cir'
        /// </summary>
        [Fact]
        public void CirTest()
        {
            // TODO unit test for the property 'Cir'
        }

        /// <summary>
        /// Test the property 'MonitoredObjectState'
        /// </summary>
        [Fact]
        public void MonitoredObjectStateTest()
        {
            // TODO unit test for the property 'MonitoredObjectState'
        }

        /// <summary>
        /// Test the property 'Machine'
        /// </summary>
        [Fact]
        public void MachineTest()
        {
            // TODO unit test for the property 'Machine'
        }

        /// <summary>
        /// Test the property 'EntityReference'
        /// </summary>
        [Fact]
        public void EntityReferenceTest()
        {
            // TODO unit test for the property 'EntityReference'
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

        /// <summary>
        /// Test the property 'DisplayType'
        /// </summary>
        [Fact]
        public void DisplayTypeTest()
        {
            // TODO unit test for the property 'DisplayType'
        }

        /// <summary>
        /// Test the property 'FullName'
        /// </summary>
        [Fact]
        public void FullNameTest()
        {
            // TODO unit test for the property 'FullName'
        }

        /// <summary>
        /// Test the property 'Alias'
        /// </summary>
        [Fact]
        public void AliasTest()
        {
            // TODO unit test for the property 'Alias'
        }

        /// <summary>
        /// Test the property 'BaseMonitor'
        /// </summary>
        [Fact]
        public void BaseMonitorTest()
        {
            // TODO unit test for the property 'BaseMonitor'
        }

        /// <summary>
        /// Test the property 'Tags'
        /// </summary>
        [Fact]
        public void TagsTest()
        {
            // TODO unit test for the property 'Tags'
        }
    }
}
