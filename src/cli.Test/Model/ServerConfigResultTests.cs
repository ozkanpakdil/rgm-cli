/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using Xunit;

namespace cli.Test.Model;

/// <summary>
///     Class for testing ServerConfigResult
/// </summary>
/// <remarks>
///     This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
///     Please update the test case below to test the model.
/// </remarks>
public class ServerConfigResultTests : IDisposable
{
    // TODO uncomment below to declare an instance variable for ServerConfigResult
    //private ServerConfigResult instance;

    public void Dispose()
    {
        // Cleanup when everything is done.
    }

    /// <summary>
    ///     Test an instance of ServerConfigResult
    /// </summary>
    [Fact]
    public void ServerConfigResultInstanceTest()
    {
        // TODO uncomment below to test "IsType" ServerConfigResult
        //Assert.IsType<ServerConfigResult>(instance);
    }

    /// <summary>
    ///     Test the property 'ClusterName'
    /// </summary>
    [Fact]
    public void ClusterNameTest()
    {
        // TODO unit test for the property 'ClusterName'
    }

    /// <summary>
    ///     Test the property 'SqlServerVersion'
    /// </summary>
    [Fact]
    public void SqlServerVersionTest()
    {
        // TODO unit test for the property 'SqlServerVersion'
    }

    /// <summary>
    ///     Test the property 'Edition'
    /// </summary>
    [Fact]
    public void EditionTest()
    {
        // TODO unit test for the property 'Edition'
    }

    /// <summary>
    ///     Test the property 'Collation'
    /// </summary>
    [Fact]
    public void CollationTest()
    {
        // TODO unit test for the property 'Collation'
    }

    /// <summary>
    ///     Test the property 'VarOperatingSystem'
    /// </summary>
    [Fact]
    public void VarOperatingSystemTest()
    {
        // TODO unit test for the property 'VarOperatingSystem'
    }

    /// <summary>
    ///     Test the property 'Memory'
    /// </summary>
    [Fact]
    public void MemoryTest()
    {
        // TODO unit test for the property 'Memory'
    }

    /// <summary>
    ///     Test the property 'Clustered'
    /// </summary>
    [Fact]
    public void ClusteredTest()
    {
        // TODO unit test for the property 'Clustered'
    }

    /// <summary>
    ///     Test the property 'Virtualized'
    /// </summary>
    [Fact]
    public void VirtualizedTest()
    {
        // TODO unit test for the property 'Virtualized'
    }

    /// <summary>
    ///     Test the property 'Monitoring'
    /// </summary>
    [Fact]
    public void MonitoringTest()
    {
        // TODO unit test for the property 'Monitoring'
    }

    /// <summary>
    ///     Test the property 'MonitoringClass'
    /// </summary>
    [Fact]
    public void MonitoringClassTest()
    {
        // TODO unit test for the property 'MonitoringClass'
    }

    /// <summary>
    ///     Test the property 'Availability'
    /// </summary>
    [Fact]
    public void AvailabilityTest()
    {
        // TODO unit test for the property 'Availability'
    }

    /// <summary>
    ///     Test the property 'LastRestart'
    /// </summary>
    [Fact]
    public void LastRestartTest()
    {
        // TODO unit test for the property 'LastRestart'
    }

    /// <summary>
    ///     Test the property 'Integration'
    /// </summary>
    [Fact]
    public void IntegrationTest()
    {
        // TODO unit test for the property 'Integration'
    }

    /// <summary>
    ///     Test the property 'Browser'
    /// </summary>
    [Fact]
    public void BrowserTest()
    {
        // TODO unit test for the property 'Browser'
    }

    /// <summary>
    ///     Test the property 'SqlService'
    /// </summary>
    [Fact]
    public void SqlServiceTest()
    {
        // TODO unit test for the property 'SqlService'
    }

    /// <summary>
    ///     Test the property 'Agent'
    /// </summary>
    [Fact]
    public void AgentTest()
    {
        // TODO unit test for the property 'Agent'
    }

    /// <summary>
    ///     Test the property 'DataUnavailableMessage'
    /// </summary>
    [Fact]
    public void DataUnavailableMessageTest()
    {
        // TODO unit test for the property 'DataUnavailableMessage'
    }
}