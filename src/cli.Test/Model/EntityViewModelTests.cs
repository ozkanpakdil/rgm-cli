/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using Xunit;

namespace cli.Test.Model;

/// <summary>
///     Class for testing EntityViewModel
/// </summary>
/// <remarks>
///     This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
///     Please update the test case below to test the model.
/// </remarks>
public class EntityViewModelTests : IDisposable
{
    // TODO uncomment below to declare an instance variable for EntityViewModel
    //private EntityViewModel instance;

    public void Dispose()
    {
        // Cleanup when everything is done.
    }

    /// <summary>
    ///     Test an instance of EntityViewModel
    /// </summary>
    [Fact]
    public void EntityViewModelInstanceTest()
    {
        // TODO uncomment below to test "IsType" EntityViewModel
        //Assert.IsType<EntityViewModel>(instance);
    }

    /// <summary>
    ///     Test the property 'EntityType'
    /// </summary>
    [Fact]
    public void EntityTypeTest()
    {
        // TODO unit test for the property 'EntityType'
    }

    /// <summary>
    ///     Test the property 'Name'
    /// </summary>
    [Fact]
    public void NameTest()
    {
        // TODO unit test for the property 'Name'
    }

    /// <summary>
    ///     Test the property 'Status'
    /// </summary>
    [Fact]
    public void StatusTest()
    {
        // TODO unit test for the property 'Status'
    }

    /// <summary>
    ///     Test the property 'Metrics'
    /// </summary>
    [Fact]
    public void MetricsTest()
    {
        // TODO unit test for the property 'Metrics'
    }

    /// <summary>
    ///     Test the property 'BaseMonitorName'
    /// </summary>
    [Fact]
    public void BaseMonitorNameTest()
    {
        // TODO unit test for the property 'BaseMonitorName'
    }

    /// <summary>
    ///     Test the property 'DisplayName'
    /// </summary>
    [Fact]
    public void DisplayNameTest()
    {
        // TODO unit test for the property 'DisplayName'
    }

    /// <summary>
    ///     Test the property 'UserHasPermissionToClearAlerts'
    /// </summary>
    [Fact]
    public void UserHasPermissionToClearAlertsTest()
    {
        // TODO unit test for the property 'UserHasPermissionToClearAlerts'
    }

    /// <summary>
    ///     Test the property 'GetCir'
    /// </summary>
    [Fact]
    public void GetCirTest()
    {
        // TODO unit test for the property 'GetCir'
    }

    /// <summary>
    ///     Test the property 'Suspended'
    /// </summary>
    [Fact]
    public void SuspendedTest()
    {
        // TODO unit test for the property 'Suspended'
    }

    /// <summary>
    ///     Test the property 'InstanceUrl'
    /// </summary>
    [Fact]
    public void InstanceUrlTest()
    {
        // TODO unit test for the property 'InstanceUrl'
    }

    /// <summary>
    ///     Test the property 'Group'
    /// </summary>
    [Fact]
    public void GroupTest()
    {
        // TODO unit test for the property 'Group'
    }

    /// <summary>
    ///     Test the property 'Tags'
    /// </summary>
    [Fact]
    public void TagsTest()
    {
        // TODO unit test for the property 'Tags'
    }

    /// <summary>
    ///     Test the property 'AvailabilityGroups'
    /// </summary>
    [Fact]
    public void AvailabilityGroupsTest()
    {
        // TODO unit test for the property 'AvailabilityGroups'
    }

    /// <summary>
    ///     Test the property 'AlertInboxUrl'
    /// </summary>
    [Fact]
    public void AlertInboxUrlTest()
    {
        // TODO unit test for the property 'AlertInboxUrl'
    }

    /// <summary>
    ///     Test the property 'Metadata'
    /// </summary>
    [Fact]
    public void MetadataTest()
    {
        // TODO unit test for the property 'Metadata'
    }
}