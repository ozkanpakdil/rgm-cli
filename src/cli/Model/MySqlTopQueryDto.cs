/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;
using RedGate.SqlMonitor.Channels.Data;

namespace cli.Model;

/// <summary>
///     MySqlTopQueryDto
/// </summary>
[DataContract(Name = "MySqlTopQueryDto")]
public class MySqlTopQueryDto : IValidatableObject
{
    /// <summary>
    ///     Initializes a new instance of the <see cref="MySqlTopQueryDto" /> class.
    /// </summary>
    /// <param name="channelInstanceRef">channelInstanceRef.</param>
    /// <param name="schema">schema.</param>
    /// <param name="queryHash">queryHash.</param>
    /// <param name="queryText">queryText.</param>
    /// <param name="duration">duration.</param>
    /// <param name="executionCount">executionCount.</param>
    /// <param name="cpuTime">cpuTime.</param>
    /// <param name="rowsReads">rowsReads.</param>
    /// <param name="rowsWritten">rowsWritten.</param>
    /// <param name="maxMemory">maxMemory.</param>
    /// <param name="errorCount">errorCount.</param>
    public MySqlTopQueryDto(ChannelInstanceRef channelInstanceRef = default, string schema = default,
        string queryHash = default, string queryText = default, long duration = default, long executionCount = default,
        long cpuTime = default, long rowsReads = default, long rowsWritten = default, long maxMemory = default,
        long errorCount = default)
    {
        ChannelInstanceRef = channelInstanceRef;
        Schema = schema;
        QueryHash = queryHash;
        QueryText = queryText;
        Duration = duration;
        ExecutionCount = executionCount;
        CpuTime = cpuTime;
        RowsReads = rowsReads;
        RowsWritten = rowsWritten;
        MaxMemory = maxMemory;
        ErrorCount = errorCount;
    }

    /// <summary>
    ///     Gets or Sets ChannelInstanceRef
    /// </summary>
    [DataMember(Name = "channelInstanceRef", EmitDefaultValue = true)]
    public ChannelInstanceRef ChannelInstanceRef { get; set; }

    /// <summary>
    ///     Gets or Sets Schema
    /// </summary>
    [DataMember(Name = "schema", EmitDefaultValue = true)]
    public string Schema { get; set; }

    /// <summary>
    ///     Gets or Sets QueryHash
    /// </summary>
    [DataMember(Name = "queryHash", EmitDefaultValue = true)]
    public string QueryHash { get; set; }

    /// <summary>
    ///     Gets or Sets QueryText
    /// </summary>
    [DataMember(Name = "queryText", EmitDefaultValue = true)]
    public string QueryText { get; set; }

    /// <summary>
    ///     Gets or Sets Duration
    /// </summary>
    [DataMember(Name = "duration", EmitDefaultValue = false)]
    public long Duration { get; set; }

    /// <summary>
    ///     Gets or Sets ExecutionCount
    /// </summary>
    [DataMember(Name = "executionCount", EmitDefaultValue = false)]
    public long ExecutionCount { get; set; }

    /// <summary>
    ///     Gets or Sets CpuTime
    /// </summary>
    [DataMember(Name = "cpuTime", EmitDefaultValue = false)]
    public long CpuTime { get; set; }

    /// <summary>
    ///     Gets or Sets RowsReads
    /// </summary>
    [DataMember(Name = "rowsReads", EmitDefaultValue = false)]
    public long RowsReads { get; set; }

    /// <summary>
    ///     Gets or Sets RowsWritten
    /// </summary>
    [DataMember(Name = "rowsWritten", EmitDefaultValue = false)]
    public long RowsWritten { get; set; }

    /// <summary>
    ///     Gets or Sets MaxMemory
    /// </summary>
    [DataMember(Name = "maxMemory", EmitDefaultValue = false)]
    public long MaxMemory { get; set; }

    /// <summary>
    ///     Gets or Sets ErrorCount
    /// </summary>
    [DataMember(Name = "errorCount", EmitDefaultValue = false)]
    public long ErrorCount { get; set; }

    /// <summary>
    ///     To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }

    /// <summary>
    ///     Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class MySqlTopQueryDto {\n");
        sb.Append("  ChannelInstanceRef: ").Append(ChannelInstanceRef).Append("\n");
        sb.Append("  Schema: ").Append(Schema).Append("\n");
        sb.Append("  QueryHash: ").Append(QueryHash).Append("\n");
        sb.Append("  QueryText: ").Append(QueryText).Append("\n");
        sb.Append("  Duration: ").Append(Duration).Append("\n");
        sb.Append("  ExecutionCount: ").Append(ExecutionCount).Append("\n");
        sb.Append("  CpuTime: ").Append(CpuTime).Append("\n");
        sb.Append("  RowsReads: ").Append(RowsReads).Append("\n");
        sb.Append("  RowsWritten: ").Append(RowsWritten).Append("\n");
        sb.Append("  MaxMemory: ").Append(MaxMemory).Append("\n");
        sb.Append("  ErrorCount: ").Append(ErrorCount).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    ///     Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}