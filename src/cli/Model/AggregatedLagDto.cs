/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace cli.Model;

/// <summary>
///     AggregatedLagDto
/// </summary>
[DataContract(Name = "AggregatedLagDto")]
public class AggregatedLagDto : IValidatableObject
{
    /// <summary>
    ///     Initializes a new instance of the <see cref="AggregatedLagDto" /> class.
    /// </summary>
    /// <param name="collectionDate">collectionDate.</param>
    /// <param name="pendingLag">pendingLag.</param>
    /// <param name="writeLag">writeLag.</param>
    /// <param name="flushLag">flushLag.</param>
    /// <param name="replayLag">replayLag.</param>
    public AggregatedLagDto(long collectionDate = default, long pendingLag = default, long writeLag = default,
        long flushLag = default, long replayLag = default)
    {
        CollectionDate = collectionDate;
        PendingLag = pendingLag;
        WriteLag = writeLag;
        FlushLag = flushLag;
        ReplayLag = replayLag;
    }

    /// <summary>
    ///     Gets or Sets CollectionDate
    /// </summary>
    [DataMember(Name = "collectionDate", EmitDefaultValue = false)]
    public long CollectionDate { get; set; }

    /// <summary>
    ///     Gets or Sets PendingLag
    /// </summary>
    [DataMember(Name = "pendingLag", EmitDefaultValue = false)]
    public long PendingLag { get; set; }

    /// <summary>
    ///     Gets or Sets WriteLag
    /// </summary>
    [DataMember(Name = "writeLag", EmitDefaultValue = false)]
    public long WriteLag { get; set; }

    /// <summary>
    ///     Gets or Sets FlushLag
    /// </summary>
    [DataMember(Name = "flushLag", EmitDefaultValue = false)]
    public long FlushLag { get; set; }

    /// <summary>
    ///     Gets or Sets ReplayLag
    /// </summary>
    [DataMember(Name = "replayLag", EmitDefaultValue = false)]
    public long ReplayLag { get; set; }

    /// <summary>
    ///     To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }

    /// <summary>
    ///     Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class AggregatedLagDto {\n");
        sb.Append("  CollectionDate: ").Append(CollectionDate).Append("\n");
        sb.Append("  PendingLag: ").Append(PendingLag).Append("\n");
        sb.Append("  WriteLag: ").Append(WriteLag).Append("\n");
        sb.Append("  FlushLag: ").Append(FlushLag).Append("\n");
        sb.Append("  ReplayLag: ").Append(ReplayLag).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    ///     Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}