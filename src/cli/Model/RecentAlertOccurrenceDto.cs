/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cli.Client.OpenAPIDateConverter;

namespace cli.Model
{
    /// <summary>
    /// RecentAlertOccurrenceDto
    /// </summary>
    [DataContract(Name = "RecentAlertOccurrenceDto")]
    public partial class RecentAlertOccurrenceDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="RecentAlertOccurrenceDto" /> class.
        /// </summary>
        /// <param name="alertId">alertId.</param>
        /// <param name="displayName">displayName.</param>
        /// <param name="status">status.</param>
        /// <param name="startTime">startTime.</param>
        /// <param name="commentCount">commentCount.</param>
        public RecentAlertOccurrenceDto(IntegerIdentifier alertId = default(IntegerIdentifier), string displayName = default(string), string status = default(string), long startTime = default(long), int commentCount = default(int))
        {
            this.AlertId = alertId;
            this.DisplayName = displayName;
            this.Status = status;
            this.StartTime = startTime;
            this.CommentCount = commentCount;
        }

        /// <summary>
        /// Gets or Sets AlertId
        /// </summary>
        [DataMember(Name = "alertId", EmitDefaultValue = false)]
        public IntegerIdentifier AlertId { get; set; }

        /// <summary>
        /// Gets or Sets DisplayName
        /// </summary>
        [DataMember(Name = "displayName", EmitDefaultValue = true)]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = true)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets StartTime
        /// </summary>
        [DataMember(Name = "startTime", EmitDefaultValue = false)]
        public long StartTime { get; set; }

        /// <summary>
        /// Gets or Sets CommentCount
        /// </summary>
        [DataMember(Name = "commentCount", EmitDefaultValue = false)]
        public int CommentCount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RecentAlertOccurrenceDto {\n");
            sb.Append("  AlertId: ").Append(AlertId).Append("\n");
            sb.Append("  DisplayName: ").Append(DisplayName).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  StartTime: ").Append(StartTime).Append("\n");
            sb.Append("  CommentCount: ").Append(CommentCount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
