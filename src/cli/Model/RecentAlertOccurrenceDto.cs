/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace cli.Model;

/// <summary>
///     RecentAlertOccurrenceDto
/// </summary>
[DataContract(Name = "RecentAlertOccurrenceDto")]
public class RecentAlertOccurrenceDto : IValidatableObject
{
    /// <summary>
    ///     Initializes a new instance of the <see cref="RecentAlertOccurrenceDto" /> class.
    /// </summary>
    /// <param name="alertId">alertId.</param>
    /// <param name="displayName">displayName.</param>
    /// <param name="status">status.</param>
    /// <param name="startTime">startTime.</param>
    /// <param name="commentCount">commentCount.</param>
    public RecentAlertOccurrenceDto(IntegerIdentifier alertId = default, string displayName = default,
        string status = default, long startTime = default, int commentCount = default)
    {
        AlertId = alertId;
        DisplayName = displayName;
        Status = status;
        StartTime = startTime;
        CommentCount = commentCount;
    }

    /// <summary>
    ///     Gets or Sets AlertId
    /// </summary>
    [DataMember(Name = "alertId", EmitDefaultValue = false)]
    public IntegerIdentifier AlertId { get; set; }

    /// <summary>
    ///     Gets or Sets DisplayName
    /// </summary>
    [DataMember(Name = "displayName", EmitDefaultValue = true)]
    public string DisplayName { get; set; }

    /// <summary>
    ///     Gets or Sets Status
    /// </summary>
    [DataMember(Name = "status", EmitDefaultValue = true)]
    public string Status { get; set; }

    /// <summary>
    ///     Gets or Sets StartTime
    /// </summary>
    [DataMember(Name = "startTime", EmitDefaultValue = false)]
    public long StartTime { get; set; }

    /// <summary>
    ///     Gets or Sets CommentCount
    /// </summary>
    [DataMember(Name = "commentCount", EmitDefaultValue = false)]
    public int CommentCount { get; set; }

    /// <summary>
    ///     To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }

    /// <summary>
    ///     Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class RecentAlertOccurrenceDto {\n");
        sb.Append("  AlertId: ").Append(AlertId).Append("\n");
        sb.Append("  DisplayName: ").Append(DisplayName).Append("\n");
        sb.Append("  Status: ").Append(Status).Append("\n");
        sb.Append("  StartTime: ").Append(StartTime).Append("\n");
        sb.Append("  CommentCount: ").Append(CommentCount).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    ///     Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}