/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace cli.Model;

/// <summary>
///     OldUserPermissionsDto
/// </summary>
[DataContract(Name = "OldUserPermissionsDto")]
public class OldUserPermissionsDto : IValidatableObject
{
    /// <summary>
    ///     Initializes a new instance of the <see cref="OldUserPermissionsDto" /> class.
    /// </summary>
    /// <param name="name">name.</param>
    /// <param name="accountName">accountName.</param>
    /// <param name="sid">sid.</param>
    /// <param name="sysAdmins">sysAdmins.</param>
    /// <param name="serverAdmins">serverAdmins.</param>
    /// <param name="securityAdmins">securityAdmins.</param>
    /// <param name="totalServers">totalServers.</param>
    /// <param name="dbOwners">dbOwners.</param>
    /// <param name="dbAccessAdmins">dbAccessAdmins.</param>
    /// <param name="dbSecurityAdmins">dbSecurityAdmins.</param>
    /// <param name="totalDatabases">totalDatabases.</param>
    /// <param name="serverLoginPermissions">serverLoginPermissions.</param>
    /// <param name="serverDatabasePermissions">serverDatabasePermissions.</param>
    public OldUserPermissionsDto(string name = default, string accountName = default, string sid = default,
        int sysAdmins = default, int serverAdmins = default, int securityAdmins = default, int totalServers = default,
        int dbOwners = default, int dbAccessAdmins = default, int dbSecurityAdmins = default,
        int totalDatabases = default, List<OldServerLoginPermissionsDto> serverLoginPermissions = default,
        List<OldServerDatabasePermissionsDto> serverDatabasePermissions = default)
    {
        Name = name;
        AccountName = accountName;
        Sid = sid;
        SysAdmins = sysAdmins;
        ServerAdmins = serverAdmins;
        SecurityAdmins = securityAdmins;
        TotalServers = totalServers;
        DbOwners = dbOwners;
        DbAccessAdmins = dbAccessAdmins;
        DbSecurityAdmins = dbSecurityAdmins;
        TotalDatabases = totalDatabases;
        ServerLoginPermissions = serverLoginPermissions;
        ServerDatabasePermissions = serverDatabasePermissions;
    }

    /// <summary>
    ///     Gets or Sets Name
    /// </summary>
    [DataMember(Name = "name", EmitDefaultValue = true)]
    public string Name { get; set; }

    /// <summary>
    ///     Gets or Sets AccountName
    /// </summary>
    [DataMember(Name = "accountName", EmitDefaultValue = true)]
    public string AccountName { get; set; }

    /// <summary>
    ///     Gets or Sets Sid
    /// </summary>
    [DataMember(Name = "sid", EmitDefaultValue = true)]
    public string Sid { get; set; }

    /// <summary>
    ///     Gets or Sets SysAdmins
    /// </summary>
    [DataMember(Name = "sysAdmins", EmitDefaultValue = false)]
    public int SysAdmins { get; set; }

    /// <summary>
    ///     Gets or Sets ServerAdmins
    /// </summary>
    [DataMember(Name = "serverAdmins", EmitDefaultValue = false)]
    public int ServerAdmins { get; set; }

    /// <summary>
    ///     Gets or Sets SecurityAdmins
    /// </summary>
    [DataMember(Name = "securityAdmins", EmitDefaultValue = false)]
    public int SecurityAdmins { get; set; }

    /// <summary>
    ///     Gets or Sets TotalServers
    /// </summary>
    [DataMember(Name = "totalServers", EmitDefaultValue = false)]
    public int TotalServers { get; set; }

    /// <summary>
    ///     Gets or Sets DbOwners
    /// </summary>
    [DataMember(Name = "dbOwners", EmitDefaultValue = false)]
    public int DbOwners { get; set; }

    /// <summary>
    ///     Gets or Sets DbAccessAdmins
    /// </summary>
    [DataMember(Name = "dbAccessAdmins", EmitDefaultValue = false)]
    public int DbAccessAdmins { get; set; }

    /// <summary>
    ///     Gets or Sets DbSecurityAdmins
    /// </summary>
    [DataMember(Name = "dbSecurityAdmins", EmitDefaultValue = false)]
    public int DbSecurityAdmins { get; set; }

    /// <summary>
    ///     Gets or Sets TotalDatabases
    /// </summary>
    [DataMember(Name = "totalDatabases", EmitDefaultValue = false)]
    public int TotalDatabases { get; set; }

    /// <summary>
    ///     Gets or Sets ServerLoginPermissions
    /// </summary>
    [DataMember(Name = "serverLoginPermissions", EmitDefaultValue = true)]
    public List<OldServerLoginPermissionsDto> ServerLoginPermissions { get; set; }

    /// <summary>
    ///     Gets or Sets ServerDatabasePermissions
    /// </summary>
    [DataMember(Name = "serverDatabasePermissions", EmitDefaultValue = true)]
    public List<OldServerDatabasePermissionsDto> ServerDatabasePermissions { get; set; }

    /// <summary>
    ///     To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }

    /// <summary>
    ///     Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class OldUserPermissionsDto {\n");
        sb.Append("  Name: ").Append(Name).Append("\n");
        sb.Append("  AccountName: ").Append(AccountName).Append("\n");
        sb.Append("  Sid: ").Append(Sid).Append("\n");
        sb.Append("  SysAdmins: ").Append(SysAdmins).Append("\n");
        sb.Append("  ServerAdmins: ").Append(ServerAdmins).Append("\n");
        sb.Append("  SecurityAdmins: ").Append(SecurityAdmins).Append("\n");
        sb.Append("  TotalServers: ").Append(TotalServers).Append("\n");
        sb.Append("  DbOwners: ").Append(DbOwners).Append("\n");
        sb.Append("  DbAccessAdmins: ").Append(DbAccessAdmins).Append("\n");
        sb.Append("  DbSecurityAdmins: ").Append(DbSecurityAdmins).Append("\n");
        sb.Append("  TotalDatabases: ").Append(TotalDatabases).Append("\n");
        sb.Append("  ServerLoginPermissions: ").Append(ServerLoginPermissions).Append("\n");
        sb.Append("  ServerDatabasePermissions: ").Append(ServerDatabasePermissions).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    ///     Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}