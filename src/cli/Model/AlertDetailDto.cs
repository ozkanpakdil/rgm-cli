/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace cli.Model;

/// <summary>
///     AlertDetailDto
/// </summary>
[DataContract(Name = "AlertDetailDto")]
public class AlertDetailDto : IValidatableObject
{
    /// <summary>
    ///     Initializes a new instance of the <see cref="AlertDetailDto" /> class.
    /// </summary>
    /// <param name="monitoredEntity">monitoredEntity.</param>
    /// <param name="id">id.</param>
    /// <param name="sourceName">sourceName.</param>
    /// <param name="status">status.</param>
    /// <param name="severity">severity.</param>
    /// <param name="raisedAt">raisedAt.</param>
    /// <param name="endedAt">endedAt.</param>
    /// <param name="alertType">alertType.</param>
    public AlertDetailDto(EntityDto monitoredEntity = default, string id = default, string sourceName = default,
        AlertStatus? status = default, Severity? severity = default, DateTime raisedAt = default,
        DateTime? endedAt = default, AlertDetailTypeDto alertType = default)
    {
        MonitoredEntity = monitoredEntity;
        Id = id;
        SourceName = sourceName;
        Status = status;
        Severity = severity;
        RaisedAt = raisedAt;
        EndedAt = endedAt;
        AlertType = alertType;
    }

    /// <summary>
    ///     Gets or Sets Status
    /// </summary>
    [DataMember(Name = "status", EmitDefaultValue = false)]
    public AlertStatus? Status { get; set; }

    /// <summary>
    ///     Gets or Sets Severity
    /// </summary>
    [DataMember(Name = "severity", EmitDefaultValue = false)]
    public Severity? Severity { get; set; }

    /// <summary>
    ///     Gets or Sets MonitoredEntity
    /// </summary>
    [DataMember(Name = "monitoredEntity", EmitDefaultValue = false)]
    public EntityDto MonitoredEntity { get; set; }

    /// <summary>
    ///     Gets or Sets Id
    /// </summary>
    [DataMember(Name = "id", EmitDefaultValue = true)]
    public string Id { get; set; }

    /// <summary>
    ///     Gets or Sets SourceName
    /// </summary>
    [DataMember(Name = "sourceName", EmitDefaultValue = true)]
    public string SourceName { get; set; }

    /// <summary>
    ///     Gets or Sets RaisedAt
    /// </summary>
    [DataMember(Name = "raisedAt", EmitDefaultValue = false)]
    public DateTime RaisedAt { get; set; }

    /// <summary>
    ///     Gets or Sets EndedAt
    /// </summary>
    [DataMember(Name = "endedAt", EmitDefaultValue = true)]
    public DateTime? EndedAt { get; set; }

    /// <summary>
    ///     Gets or Sets AlertType
    /// </summary>
    [DataMember(Name = "alertType", EmitDefaultValue = false)]
    public AlertDetailTypeDto AlertType { get; set; }

    /// <summary>
    ///     To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }

    /// <summary>
    ///     Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class AlertDetailDto {\n");
        sb.Append("  MonitoredEntity: ").Append(MonitoredEntity).Append("\n");
        sb.Append("  Id: ").Append(Id).Append("\n");
        sb.Append("  SourceName: ").Append(SourceName).Append("\n");
        sb.Append("  Status: ").Append(Status).Append("\n");
        sb.Append("  Severity: ").Append(Severity).Append("\n");
        sb.Append("  RaisedAt: ").Append(RaisedAt).Append("\n");
        sb.Append("  EndedAt: ").Append(EndedAt).Append("\n");
        sb.Append("  AlertType: ").Append(AlertType).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    ///     Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}