/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cli.Client.OpenAPIDateConverter;

namespace cli.Model
{
    /// <summary>
    /// AlertDetailDto
    /// </summary>
    [DataContract(Name = "AlertDetailDto")]
    public partial class AlertDetailDto : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public AlertStatus? Status { get; set; }

        /// <summary>
        /// Gets or Sets Severity
        /// </summary>
        [DataMember(Name = "severity", EmitDefaultValue = false)]
        public Severity? Severity { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AlertDetailDto" /> class.
        /// </summary>
        /// <param name="monitoredEntity">monitoredEntity.</param>
        /// <param name="id">id.</param>
        /// <param name="sourceName">sourceName.</param>
        /// <param name="status">status.</param>
        /// <param name="severity">severity.</param>
        /// <param name="raisedAt">raisedAt.</param>
        /// <param name="endedAt">endedAt.</param>
        /// <param name="alertType">alertType.</param>
        public AlertDetailDto(EntityDto monitoredEntity = default(EntityDto), string id = default(string), string sourceName = default(string), AlertStatus? status = default(AlertStatus?), Severity? severity = default(Severity?), DateTime raisedAt = default(DateTime), DateTime? endedAt = default(DateTime?), AlertDetailTypeDto alertType = default(AlertDetailTypeDto))
        {
            this.MonitoredEntity = monitoredEntity;
            this.Id = id;
            this.SourceName = sourceName;
            this.Status = status;
            this.Severity = severity;
            this.RaisedAt = raisedAt;
            this.EndedAt = endedAt;
            this.AlertType = alertType;
        }

        /// <summary>
        /// Gets or Sets MonitoredEntity
        /// </summary>
        [DataMember(Name = "monitoredEntity", EmitDefaultValue = false)]
        public EntityDto MonitoredEntity { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets SourceName
        /// </summary>
        [DataMember(Name = "sourceName", EmitDefaultValue = true)]
        public string SourceName { get; set; }

        /// <summary>
        /// Gets or Sets RaisedAt
        /// </summary>
        [DataMember(Name = "raisedAt", EmitDefaultValue = false)]
        public DateTime RaisedAt { get; set; }

        /// <summary>
        /// Gets or Sets EndedAt
        /// </summary>
        [DataMember(Name = "endedAt", EmitDefaultValue = true)]
        public DateTime? EndedAt { get; set; }

        /// <summary>
        /// Gets or Sets AlertType
        /// </summary>
        [DataMember(Name = "alertType", EmitDefaultValue = false)]
        public AlertDetailTypeDto AlertType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AlertDetailDto {\n");
            sb.Append("  MonitoredEntity: ").Append(MonitoredEntity).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  SourceName: ").Append(SourceName).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Severity: ").Append(Severity).Append("\n");
            sb.Append("  RaisedAt: ").Append(RaisedAt).Append("\n");
            sb.Append("  EndedAt: ").Append(EndedAt).Append("\n");
            sb.Append("  AlertType: ").Append(AlertType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
