/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace cli.Model;

/// <summary>
///     IncludeStatusDto
/// </summary>
[DataContract(Name = "IncludeStatusDto")]
public class IncludeStatusDto : IValidatableObject
{
    /// <summary>
    ///     Initializes a new instance of the <see cref="IncludeStatusDto" /> class.
    /// </summary>
    /// <param name="severityHigh">severityHigh.</param>
    /// <param name="severityMedium">severityMedium.</param>
    /// <param name="severityLow">severityLow.</param>
    /// <param name="readYes">readYes.</param>
    /// <param name="readNo">readNo.</param>
    /// <param name="clearedYes">clearedYes.</param>
    /// <param name="clearedNo">clearedNo.</param>
    /// <param name="statusEvent">statusEvent.</param>
    /// <param name="statusActive">statusActive.</param>
    /// <param name="statusEnded">statusEnded.</param>
    /// <param name="commentYes">commentYes.</param>
    /// <param name="commentNo">commentNo.</param>
    public IncludeStatusDto(bool severityHigh = default, bool severityMedium = default, bool severityLow = default,
        bool readYes = default, bool readNo = default, bool clearedYes = default, bool clearedNo = default,
        bool statusEvent = default, bool statusActive = default, bool statusEnded = default, bool commentYes = default,
        bool commentNo = default)
    {
        SeverityHigh = severityHigh;
        SeverityMedium = severityMedium;
        SeverityLow = severityLow;
        ReadYes = readYes;
        ReadNo = readNo;
        ClearedYes = clearedYes;
        ClearedNo = clearedNo;
        StatusEvent = statusEvent;
        StatusActive = statusActive;
        StatusEnded = statusEnded;
        CommentYes = commentYes;
        CommentNo = commentNo;
    }

    /// <summary>
    ///     Gets or Sets SeverityHigh
    /// </summary>
    [DataMember(Name = "severityHigh", EmitDefaultValue = true)]
    public bool SeverityHigh { get; set; }

    /// <summary>
    ///     Gets or Sets SeverityMedium
    /// </summary>
    [DataMember(Name = "severityMedium", EmitDefaultValue = true)]
    public bool SeverityMedium { get; set; }

    /// <summary>
    ///     Gets or Sets SeverityLow
    /// </summary>
    [DataMember(Name = "severityLow", EmitDefaultValue = true)]
    public bool SeverityLow { get; set; }

    /// <summary>
    ///     Gets or Sets ReadYes
    /// </summary>
    [DataMember(Name = "readYes", EmitDefaultValue = true)]
    public bool ReadYes { get; set; }

    /// <summary>
    ///     Gets or Sets ReadNo
    /// </summary>
    [DataMember(Name = "readNo", EmitDefaultValue = true)]
    public bool ReadNo { get; set; }

    /// <summary>
    ///     Gets or Sets ClearedYes
    /// </summary>
    [DataMember(Name = "clearedYes", EmitDefaultValue = true)]
    public bool ClearedYes { get; set; }

    /// <summary>
    ///     Gets or Sets ClearedNo
    /// </summary>
    [DataMember(Name = "clearedNo", EmitDefaultValue = true)]
    public bool ClearedNo { get; set; }

    /// <summary>
    ///     Gets or Sets StatusEvent
    /// </summary>
    [DataMember(Name = "statusEvent", EmitDefaultValue = true)]
    public bool StatusEvent { get; set; }

    /// <summary>
    ///     Gets or Sets StatusActive
    /// </summary>
    [DataMember(Name = "statusActive", EmitDefaultValue = true)]
    public bool StatusActive { get; set; }

    /// <summary>
    ///     Gets or Sets StatusEnded
    /// </summary>
    [DataMember(Name = "statusEnded", EmitDefaultValue = true)]
    public bool StatusEnded { get; set; }

    /// <summary>
    ///     Gets or Sets CommentYes
    /// </summary>
    [DataMember(Name = "commentYes", EmitDefaultValue = true)]
    public bool CommentYes { get; set; }

    /// <summary>
    ///     Gets or Sets CommentNo
    /// </summary>
    [DataMember(Name = "commentNo", EmitDefaultValue = true)]
    public bool CommentNo { get; set; }

    /// <summary>
    ///     To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }

    /// <summary>
    ///     Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class IncludeStatusDto {\n");
        sb.Append("  SeverityHigh: ").Append(SeverityHigh).Append("\n");
        sb.Append("  SeverityMedium: ").Append(SeverityMedium).Append("\n");
        sb.Append("  SeverityLow: ").Append(SeverityLow).Append("\n");
        sb.Append("  ReadYes: ").Append(ReadYes).Append("\n");
        sb.Append("  ReadNo: ").Append(ReadNo).Append("\n");
        sb.Append("  ClearedYes: ").Append(ClearedYes).Append("\n");
        sb.Append("  ClearedNo: ").Append(ClearedNo).Append("\n");
        sb.Append("  StatusEvent: ").Append(StatusEvent).Append("\n");
        sb.Append("  StatusActive: ").Append(StatusActive).Append("\n");
        sb.Append("  StatusEnded: ").Append(StatusEnded).Append("\n");
        sb.Append("  CommentYes: ").Append(CommentYes).Append("\n");
        sb.Append("  CommentNo: ").Append(CommentNo).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    ///     Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}