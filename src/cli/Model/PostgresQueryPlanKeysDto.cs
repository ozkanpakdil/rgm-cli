/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace cli.Model;

/// <summary>
///     PostgresQueryPlanKeysDto
/// </summary>
[DataContract(Name = "PostgresQueryPlanKeysDto")]
public class PostgresQueryPlanKeysDto : IValidatableObject
{
    /// <summary>
    ///     Initializes a new instance of the <see cref="PostgresQueryPlanKeysDto" /> class.
    /// </summary>
    /// <param name="queryHash">queryHash.</param>
    /// <param name="databaseName">databaseName.</param>
    /// <param name="queryId">queryId.</param>
    /// <param name="userId">userId.</param>
    /// <param name="databaseId">databaseId.</param>
    /// <param name="topLevel">topLevel.</param>
    /// <param name="planHash">planHash.</param>
    public PostgresQueryPlanKeysDto(string queryHash = default, string databaseName = default,
        IntegerIdentifier queryId = default, IntegerIdentifier userId = default, IntegerIdentifier databaseId = default,
        bool topLevel = default, string planHash = default)
    {
        QueryHash = queryHash;
        DatabaseName = databaseName;
        QueryId = queryId;
        UserId = userId;
        DatabaseId = databaseId;
        TopLevel = topLevel;
        PlanHash = planHash;
    }

    /// <summary>
    ///     Gets or Sets QueryHash
    /// </summary>
    [DataMember(Name = "queryHash", EmitDefaultValue = true)]
    public string QueryHash { get; set; }

    /// <summary>
    ///     Gets or Sets DatabaseName
    /// </summary>
    [DataMember(Name = "databaseName", EmitDefaultValue = true)]
    public string DatabaseName { get; set; }

    /// <summary>
    ///     Gets or Sets QueryId
    /// </summary>
    [DataMember(Name = "queryId", EmitDefaultValue = false)]
    public IntegerIdentifier QueryId { get; set; }

    /// <summary>
    ///     Gets or Sets UserId
    /// </summary>
    [DataMember(Name = "userId", EmitDefaultValue = false)]
    public IntegerIdentifier UserId { get; set; }

    /// <summary>
    ///     Gets or Sets DatabaseId
    /// </summary>
    [DataMember(Name = "databaseId", EmitDefaultValue = false)]
    public IntegerIdentifier DatabaseId { get; set; }

    /// <summary>
    ///     Gets or Sets TopLevel
    /// </summary>
    [DataMember(Name = "topLevel", EmitDefaultValue = true)]
    public bool TopLevel { get; set; }

    /// <summary>
    ///     Gets or Sets PlanHash
    /// </summary>
    [DataMember(Name = "planHash", EmitDefaultValue = true)]
    public string PlanHash { get; set; }

    /// <summary>
    ///     To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }

    /// <summary>
    ///     Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class PostgresQueryPlanKeysDto {\n");
        sb.Append("  QueryHash: ").Append(QueryHash).Append("\n");
        sb.Append("  DatabaseName: ").Append(DatabaseName).Append("\n");
        sb.Append("  QueryId: ").Append(QueryId).Append("\n");
        sb.Append("  UserId: ").Append(UserId).Append("\n");
        sb.Append("  DatabaseId: ").Append(DatabaseId).Append("\n");
        sb.Append("  TopLevel: ").Append(TopLevel).Append("\n");
        sb.Append("  PlanHash: ").Append(PlanHash).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    ///     Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}