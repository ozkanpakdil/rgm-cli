/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cli.Client.OpenAPIDateConverter;

namespace cli.Model
{
    /// <summary>
    /// FragmentAnalysisIssueDto
    /// </summary>
    [DataContract(Name = "FragmentAnalysisIssueDto")]
    public partial class FragmentAnalysisIssueDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FragmentAnalysisIssueDto" /> class.
        /// </summary>
        /// <param name="issueCode">issueCode.</param>
        /// <param name="errorText">errorText.</param>
        /// <param name="description">description.</param>
        /// <param name="documentationUrl">documentationUrl.</param>
        /// <param name="fullQueryColumnStart">fullQueryColumnStart.</param>
        /// <param name="fullQueryLineStart">fullQueryLineStart.</param>
        /// <param name="fullQueryColumnEnd">fullQueryColumnEnd.</param>
        /// <param name="fullQueryLineEnd">fullQueryLineEnd.</param>
        /// <param name="fragmentColumnStart">fragmentColumnStart.</param>
        /// <param name="fragmentLineStart">fragmentLineStart.</param>
        /// <param name="fragmentColumnEnd">fragmentColumnEnd.</param>
        /// <param name="fragmentLineEnd">fragmentLineEnd.</param>
        public FragmentAnalysisIssueDto(string issueCode = default(string), string errorText = default(string), string description = default(string), string documentationUrl = default(string), int fullQueryColumnStart = default(int), int fullQueryLineStart = default(int), int fullQueryColumnEnd = default(int), int fullQueryLineEnd = default(int), int fragmentColumnStart = default(int), int fragmentLineStart = default(int), int fragmentColumnEnd = default(int), int fragmentLineEnd = default(int))
        {
            this.IssueCode = issueCode;
            this.ErrorText = errorText;
            this.Description = description;
            this.DocumentationUrl = documentationUrl;
            this.FullQueryColumnStart = fullQueryColumnStart;
            this.FullQueryLineStart = fullQueryLineStart;
            this.FullQueryColumnEnd = fullQueryColumnEnd;
            this.FullQueryLineEnd = fullQueryLineEnd;
            this.FragmentColumnStart = fragmentColumnStart;
            this.FragmentLineStart = fragmentLineStart;
            this.FragmentColumnEnd = fragmentColumnEnd;
            this.FragmentLineEnd = fragmentLineEnd;
        }

        /// <summary>
        /// Gets or Sets IssueCode
        /// </summary>
        [DataMember(Name = "issueCode", EmitDefaultValue = true)]
        public string IssueCode { get; set; }

        /// <summary>
        /// Gets or Sets ErrorText
        /// </summary>
        [DataMember(Name = "errorText", EmitDefaultValue = true)]
        public string ErrorText { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = true)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets DocumentationUrl
        /// </summary>
        [DataMember(Name = "documentationUrl", EmitDefaultValue = true)]
        public string DocumentationUrl { get; set; }

        /// <summary>
        /// Gets or Sets FullQueryColumnStart
        /// </summary>
        [DataMember(Name = "fullQueryColumnStart", EmitDefaultValue = false)]
        public int FullQueryColumnStart { get; set; }

        /// <summary>
        /// Gets or Sets FullQueryLineStart
        /// </summary>
        [DataMember(Name = "fullQueryLineStart", EmitDefaultValue = false)]
        public int FullQueryLineStart { get; set; }

        /// <summary>
        /// Gets or Sets FullQueryColumnEnd
        /// </summary>
        [DataMember(Name = "fullQueryColumnEnd", EmitDefaultValue = false)]
        public int FullQueryColumnEnd { get; set; }

        /// <summary>
        /// Gets or Sets FullQueryLineEnd
        /// </summary>
        [DataMember(Name = "fullQueryLineEnd", EmitDefaultValue = false)]
        public int FullQueryLineEnd { get; set; }

        /// <summary>
        /// Gets or Sets FragmentColumnStart
        /// </summary>
        [DataMember(Name = "fragmentColumnStart", EmitDefaultValue = false)]
        public int FragmentColumnStart { get; set; }

        /// <summary>
        /// Gets or Sets FragmentLineStart
        /// </summary>
        [DataMember(Name = "fragmentLineStart", EmitDefaultValue = false)]
        public int FragmentLineStart { get; set; }

        /// <summary>
        /// Gets or Sets FragmentColumnEnd
        /// </summary>
        [DataMember(Name = "fragmentColumnEnd", EmitDefaultValue = false)]
        public int FragmentColumnEnd { get; set; }

        /// <summary>
        /// Gets or Sets FragmentLineEnd
        /// </summary>
        [DataMember(Name = "fragmentLineEnd", EmitDefaultValue = false)]
        public int FragmentLineEnd { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FragmentAnalysisIssueDto {\n");
            sb.Append("  IssueCode: ").Append(IssueCode).Append("\n");
            sb.Append("  ErrorText: ").Append(ErrorText).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  DocumentationUrl: ").Append(DocumentationUrl).Append("\n");
            sb.Append("  FullQueryColumnStart: ").Append(FullQueryColumnStart).Append("\n");
            sb.Append("  FullQueryLineStart: ").Append(FullQueryLineStart).Append("\n");
            sb.Append("  FullQueryColumnEnd: ").Append(FullQueryColumnEnd).Append("\n");
            sb.Append("  FullQueryLineEnd: ").Append(FullQueryLineEnd).Append("\n");
            sb.Append("  FragmentColumnStart: ").Append(FragmentColumnStart).Append("\n");
            sb.Append("  FragmentLineStart: ").Append(FragmentLineStart).Append("\n");
            sb.Append("  FragmentColumnEnd: ").Append(FragmentColumnEnd).Append("\n");
            sb.Append("  FragmentLineEnd: ").Append(FragmentLineEnd).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
