/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace cli.Model;

/// <summary>
///     PostgresReplicationDataDto
/// </summary>
[DataContract(Name = "PostgresReplicationDataDto")]
public class PostgresReplicationDataDto : IValidatableObject
{
    /// <summary>
    ///     Initializes a new instance of the <see cref="PostgresReplicationDataDto" /> class.
    /// </summary>
    /// <param name="role">role.</param>
    /// <param name="standbyReplicas">standbyReplicas.</param>
    /// <param name="walReceiver">walReceiver.</param>
    /// <param name="clusterName">clusterName.</param>
    /// <param name="lineGroups">lineGroups.</param>
    /// <param name="metricPresentations">metricPresentations.</param>
    public PostgresReplicationDataDto(PostgresReplicationRole? role = default,
        List<PostgresReplicaDto> standbyReplicas = default, PostgresWalReceiverDto walReceiver = default,
        string clusterName = default, List<InstanceMetricLineGroup> lineGroups = default,
        List<PostgresMetricPresentationDto> metricPresentations = default)
    {
        Role = role;
        StandbyReplicas = standbyReplicas;
        WalReceiver = walReceiver;
        ClusterName = clusterName;
        LineGroups = lineGroups;
        MetricPresentations = metricPresentations;
    }

    /// <summary>
    ///     Gets or Sets Role
    /// </summary>
    [DataMember(Name = "role", EmitDefaultValue = false)]
    public PostgresReplicationRole? Role { get; set; }

    /// <summary>
    ///     Gets or Sets StandbyReplicas
    /// </summary>
    [DataMember(Name = "standbyReplicas", EmitDefaultValue = false)]
    public List<PostgresReplicaDto> StandbyReplicas { get; set; }

    /// <summary>
    ///     Gets or Sets WalReceiver
    /// </summary>
    [DataMember(Name = "walReceiver", EmitDefaultValue = false)]
    public PostgresWalReceiverDto WalReceiver { get; set; }

    /// <summary>
    ///     Gets or Sets ClusterName
    /// </summary>
    [DataMember(Name = "clusterName", EmitDefaultValue = true)]
    public string ClusterName { get; set; }

    /// <summary>
    ///     Gets or Sets LineGroups
    /// </summary>
    [DataMember(Name = "lineGroups", EmitDefaultValue = false)]
    public List<InstanceMetricLineGroup> LineGroups { get; set; }

    /// <summary>
    ///     Gets or Sets MetricPresentations
    /// </summary>
    [DataMember(Name = "metricPresentations", EmitDefaultValue = false)]
    public List<PostgresMetricPresentationDto> MetricPresentations { get; set; }

    /// <summary>
    ///     To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }

    /// <summary>
    ///     Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class PostgresReplicationDataDto {\n");
        sb.Append("  Role: ").Append(Role).Append("\n");
        sb.Append("  StandbyReplicas: ").Append(StandbyReplicas).Append("\n");
        sb.Append("  WalReceiver: ").Append(WalReceiver).Append("\n");
        sb.Append("  ClusterName: ").Append(ClusterName).Append("\n");
        sb.Append("  LineGroups: ").Append(LineGroups).Append("\n");
        sb.Append("  MetricPresentations: ").Append(MetricPresentations).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    ///     Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}