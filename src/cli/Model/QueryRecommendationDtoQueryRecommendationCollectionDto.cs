/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cli.Client.OpenAPIDateConverter;

namespace cli.Model
{
    /// <summary>
    /// QueryRecommendationDtoQueryRecommendationCollectionDto
    /// </summary>
    [DataContract(Name = "QueryRecommendationDtoQueryRecommendationCollectionDto")]
    public partial class QueryRecommendationDtoQueryRecommendationCollectionDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="QueryRecommendationDtoQueryRecommendationCollectionDto" /> class.
        /// </summary>
        /// <param name="planHandle">planHandle.</param>
        /// <param name="createDate">createDate.</param>
        /// <param name="queryRecommendations">queryRecommendations.</param>
        public QueryRecommendationDtoQueryRecommendationCollectionDto(string planHandle = default(string), DateTime createDate = default(DateTime), List<QueryRecommendationDto> queryRecommendations = default(List<QueryRecommendationDto>))
        {
            this.PlanHandle = planHandle;
            this.CreateDate = createDate;
            this.QueryRecommendations = queryRecommendations;
        }

        /// <summary>
        /// Gets or Sets PlanHandle
        /// </summary>
        [DataMember(Name = "planHandle", EmitDefaultValue = false)]
        public string PlanHandle { get; set; }

        /// <summary>
        /// Gets or Sets CreateDate
        /// </summary>
        [DataMember(Name = "createDate", EmitDefaultValue = false)]
        public DateTime CreateDate { get; set; }

        /// <summary>
        /// Gets or Sets QueryRecommendations
        /// </summary>
        [DataMember(Name = "queryRecommendations", EmitDefaultValue = false)]
        public List<QueryRecommendationDto> QueryRecommendations { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class QueryRecommendationDtoQueryRecommendationCollectionDto {\n");
            sb.Append("  PlanHandle: ").Append(PlanHandle).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  QueryRecommendations: ").Append(QueryRecommendations).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
