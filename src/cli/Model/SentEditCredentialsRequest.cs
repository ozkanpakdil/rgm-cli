/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;
using RedGate.SqlMonitor.Common.Domain;

namespace cli.Model;

/// <summary>
///     SentEditCredentialsRequest
/// </summary>
[DataContract(Name = "SentEditCredentialsRequest")]
public class SentEditCredentialsRequest : IValidatableObject
{
    /// <summary>
    ///     Initializes a new instance of the <see cref="SentEditCredentialsRequest" /> class.
    /// </summary>
    /// <param name="entityIds">entityIds.</param>
    /// <param name="sqlServerIds">sqlServerIds.</param>
    /// <param name="editEntityType">editEntityType.</param>
    /// <param name="credentials">credentials.</param>
    public SentEditCredentialsRequest(List<string> entityIds = default, List<string> sqlServerIds = default,
        EntityType? editEntityType = default, AllCredentialsModel credentials = default)
    {
        EntityIds = entityIds;
        SqlServerIds = sqlServerIds;
        EditEntityType = editEntityType;
        Credentials = credentials;
    }

    /// <summary>
    ///     Gets or Sets EditEntityType
    /// </summary>
    [DataMember(Name = "editEntityType", EmitDefaultValue = false)]
    public EntityType? EditEntityType { get; set; }

    /// <summary>
    ///     Gets or Sets EntityIds
    /// </summary>
    [DataMember(Name = "entityIds", EmitDefaultValue = true)]
    public List<string> EntityIds { get; set; }

    /// <summary>
    ///     Gets or Sets SqlServerIds
    /// </summary>
    [DataMember(Name = "sqlServerIds", EmitDefaultValue = true)]
    public List<string> SqlServerIds { get; set; }

    /// <summary>
    ///     Gets or Sets Credentials
    /// </summary>
    [DataMember(Name = "credentials", EmitDefaultValue = false)]
    public AllCredentialsModel Credentials { get; set; }

    /// <summary>
    ///     To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }

    /// <summary>
    ///     Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class SentEditCredentialsRequest {\n");
        sb.Append("  EntityIds: ").Append(EntityIds).Append("\n");
        sb.Append("  SqlServerIds: ").Append(SqlServerIds).Append("\n");
        sb.Append("  EditEntityType: ").Append(EditEntityType).Append("\n");
        sb.Append("  Credentials: ").Append(Credentials).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    ///     Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}