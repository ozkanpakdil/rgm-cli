/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace cli.Model;

/// <summary>
///     SystemProcessDto
/// </summary>
[DataContract(Name = "SystemProcessDto")]
public class SystemProcessDto : IValidatableObject
{
    /// <summary>
    ///     Initializes a new instance of the <see cref="SystemProcessDto" /> class.
    /// </summary>
    /// <param name="id">id.</param>
    /// <param name="name">name.</param>
    /// <param name="startDate">startDate.</param>
    /// <param name="percentProcessorTime">percentProcessorTime.</param>
    /// <param name="workingSetMemoryInBytes">workingSetMemoryInBytes.</param>
    /// <param name="virtualMemoryInBytes">virtualMemoryInBytes.</param>
    public SystemProcessDto(IntegerIdentifier id = default, string name = default, DateTime startDate = default,
        double? percentProcessorTime = default, long? workingSetMemoryInBytes = default,
        long? virtualMemoryInBytes = default)
    {
        Id = id;
        Name = name;
        StartDate = startDate;
        PercentProcessorTime = percentProcessorTime;
        WorkingSetMemoryInBytes = workingSetMemoryInBytes;
        VirtualMemoryInBytes = virtualMemoryInBytes;
    }

    /// <summary>
    ///     Gets or Sets Id
    /// </summary>
    [DataMember(Name = "id", EmitDefaultValue = false)]
    public IntegerIdentifier Id { get; set; }

    /// <summary>
    ///     Gets or Sets Name
    /// </summary>
    [DataMember(Name = "name", EmitDefaultValue = false)]
    public string Name { get; set; }

    /// <summary>
    ///     Gets or Sets StartDate
    /// </summary>
    [DataMember(Name = "startDate", EmitDefaultValue = false)]
    public DateTime StartDate { get; set; }

    /// <summary>
    ///     Gets or Sets PercentProcessorTime
    /// </summary>
    [DataMember(Name = "percentProcessorTime", EmitDefaultValue = true)]
    public double? PercentProcessorTime { get; set; }

    /// <summary>
    ///     Gets or Sets WorkingSetMemoryInBytes
    /// </summary>
    [DataMember(Name = "workingSetMemoryInBytes", EmitDefaultValue = true)]
    public long? WorkingSetMemoryInBytes { get; set; }

    /// <summary>
    ///     Gets or Sets VirtualMemoryInBytes
    /// </summary>
    [DataMember(Name = "virtualMemoryInBytes", EmitDefaultValue = true)]
    public long? VirtualMemoryInBytes { get; set; }

    /// <summary>
    ///     To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }

    /// <summary>
    ///     Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class SystemProcessDto {\n");
        sb.Append("  Id: ").Append(Id).Append("\n");
        sb.Append("  Name: ").Append(Name).Append("\n");
        sb.Append("  StartDate: ").Append(StartDate).Append("\n");
        sb.Append("  PercentProcessorTime: ").Append(PercentProcessorTime).Append("\n");
        sb.Append("  WorkingSetMemoryInBytes: ").Append(WorkingSetMemoryInBytes).Append("\n");
        sb.Append("  VirtualMemoryInBytes: ").Append(VirtualMemoryInBytes).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    ///     Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}