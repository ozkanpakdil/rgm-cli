/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cli.Client.OpenAPIDateConverter;

namespace cli.Model
{
    /// <summary>
    /// SaveAliasRequest
    /// </summary>
    [DataContract(Name = "SaveAliasRequest")]
    public partial class SaveAliasRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SaveAliasRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected SaveAliasRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="SaveAliasRequest" /> class.
        /// </summary>
        /// <param name="alias">alias (required).</param>
        /// <param name="channelInstanceRef">channelInstanceRef (required).</param>
        public SaveAliasRequest(string alias = default(string), ChannelInstanceRef channelInstanceRef = default(ChannelInstanceRef))
        {
            // to ensure "alias" is required (not null)
            if (alias == null)
            {
                throw new ArgumentNullException("alias is a required property for SaveAliasRequest and cannot be null");
            }
            this.Alias = alias;
            // to ensure "channelInstanceRef" is required (not null)
            if (channelInstanceRef == null)
            {
                throw new ArgumentNullException("channelInstanceRef is a required property for SaveAliasRequest and cannot be null");
            }
            this.ChannelInstanceRef = channelInstanceRef;
        }

        /// <summary>
        /// Gets or Sets Alias
        /// </summary>
        [DataMember(Name = "alias", IsRequired = true, EmitDefaultValue = true)]
        public string Alias { get; set; }

        /// <summary>
        /// Gets or Sets ChannelInstanceRef
        /// </summary>
        [DataMember(Name = "channelInstanceRef", IsRequired = true, EmitDefaultValue = true)]
        public ChannelInstanceRef ChannelInstanceRef { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SaveAliasRequest {\n");
            sb.Append("  Alias: ").Append(Alias).Append("\n");
            sb.Append("  ChannelInstanceRef: ").Append(ChannelInstanceRef).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
