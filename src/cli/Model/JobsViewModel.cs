/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace cli.Model;

/// <summary>
///     JobsViewModel
/// </summary>
[DataContract(Name = "JobsViewModel")]
public class JobsViewModel : IValidatableObject
{
    /// <summary>
    ///     Initializes a new instance of the <see cref="JobsViewModel" /> class.
    /// </summary>
    /// <param name="summary">summary.</param>
    /// <param name="jobs">jobs.</param>
    /// <param name="groups">groups.</param>
    /// <param name="categories">categories.</param>
    /// <param name="timeFormatString">timeFormatString.</param>
    /// <param name="showShortPurgeSettingWarning">showShortPurgeSettingWarning.</param>
    /// <param name="jobHistoryDataPurgeLifetime">jobHistoryDataPurgeLifetime.</param>
    public JobsViewModel(List<JobsBucketViewModel> summary = default, List<JobsRowViewModel> jobs = default,
        List<string> groups = default, List<string> categories = default, string timeFormatString = default,
        bool showShortPurgeSettingWarning = default, string jobHistoryDataPurgeLifetime = default)
    {
        Summary = summary;
        Jobs = jobs;
        Groups = groups;
        Categories = categories;
        TimeFormatString = timeFormatString;
        ShowShortPurgeSettingWarning = showShortPurgeSettingWarning;
        JobHistoryDataPurgeLifetime = jobHistoryDataPurgeLifetime;
    }

    /// <summary>
    ///     Gets or Sets Summary
    /// </summary>
    [DataMember(Name = "summary", EmitDefaultValue = true)]
    public List<JobsBucketViewModel> Summary { get; set; }

    /// <summary>
    ///     Gets or Sets Jobs
    /// </summary>
    [DataMember(Name = "jobs", EmitDefaultValue = true)]
    public List<JobsRowViewModel> Jobs { get; set; }

    /// <summary>
    ///     Gets or Sets Groups
    /// </summary>
    [DataMember(Name = "groups", EmitDefaultValue = true)]
    public List<string> Groups { get; set; }

    /// <summary>
    ///     Gets or Sets Categories
    /// </summary>
    [DataMember(Name = "categories", EmitDefaultValue = true)]
    public List<string> Categories { get; set; }

    /// <summary>
    ///     Gets or Sets TimeFormatString
    /// </summary>
    [DataMember(Name = "timeFormatString", EmitDefaultValue = true)]
    public string TimeFormatString { get; set; }

    /// <summary>
    ///     Gets or Sets ShowShortPurgeSettingWarning
    /// </summary>
    [DataMember(Name = "showShortPurgeSettingWarning", EmitDefaultValue = true)]
    public bool ShowShortPurgeSettingWarning { get; set; }

    /// <summary>
    ///     Gets or Sets JobHistoryDataPurgeLifetime
    /// </summary>
    [DataMember(Name = "jobHistoryDataPurgeLifetime", EmitDefaultValue = true)]
    public string JobHistoryDataPurgeLifetime { get; set; }

    /// <summary>
    ///     To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }

    /// <summary>
    ///     Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class JobsViewModel {\n");
        sb.Append("  Summary: ").Append(Summary).Append("\n");
        sb.Append("  Jobs: ").Append(Jobs).Append("\n");
        sb.Append("  Groups: ").Append(Groups).Append("\n");
        sb.Append("  Categories: ").Append(Categories).Append("\n");
        sb.Append("  TimeFormatString: ").Append(TimeFormatString).Append("\n");
        sb.Append("  ShowShortPurgeSettingWarning: ").Append(ShowShortPurgeSettingWarning).Append("\n");
        sb.Append("  JobHistoryDataPurgeLifetime: ").Append(JobHistoryDataPurgeLifetime).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    ///     Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}