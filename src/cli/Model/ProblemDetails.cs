/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace cli.Model;

/// <summary>
///     ProblemDetails
/// </summary>
[DataContract(Name = "ProblemDetails")]
public class ProblemDetails : IValidatableObject
{
    /// <summary>
    ///     Initializes a new instance of the <see cref="ProblemDetails" /> class.
    /// </summary>
    /// <param name="type">type.</param>
    /// <param name="title">title.</param>
    /// <param name="status">status.</param>
    /// <param name="detail">detail.</param>
    /// <param name="instance">instance.</param>
    public ProblemDetails(string type = default, string title = default, int? status = default, string detail = default,
        string instance = default)
    {
        Type = type;
        Title = title;
        Status = status;
        Detail = detail;
        Instance = instance;
        AdditionalProperties = new Dictionary<string, object>();
    }

    /// <summary>
    ///     Gets or Sets Type
    /// </summary>
    [DataMember(Name = "type", EmitDefaultValue = true)]
    public string Type { get; set; }

    /// <summary>
    ///     Gets or Sets Title
    /// </summary>
    [DataMember(Name = "title", EmitDefaultValue = true)]
    public string Title { get; set; }

    /// <summary>
    ///     Gets or Sets Status
    /// </summary>
    [DataMember(Name = "status", EmitDefaultValue = true)]
    public int? Status { get; set; }

    /// <summary>
    ///     Gets or Sets Detail
    /// </summary>
    [DataMember(Name = "detail", EmitDefaultValue = true)]
    public string Detail { get; set; }

    /// <summary>
    ///     Gets or Sets Instance
    /// </summary>
    [DataMember(Name = "instance", EmitDefaultValue = true)]
    public string Instance { get; set; }

    /// <summary>
    ///     Gets or Sets additional properties
    /// </summary>
    [JsonExtensionData]
    public IDictionary<string, object> AdditionalProperties { get; set; }

    /// <summary>
    ///     To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }

    /// <summary>
    ///     Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class ProblemDetails {\n");
        sb.Append("  Type: ").Append(Type).Append("\n");
        sb.Append("  Title: ").Append(Title).Append("\n");
        sb.Append("  Status: ").Append(Status).Append("\n");
        sb.Append("  Detail: ").Append(Detail).Append("\n");
        sb.Append("  Instance: ").Append(Instance).Append("\n");
        sb.Append("  AdditionalProperties: ").Append(AdditionalProperties).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    ///     Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}