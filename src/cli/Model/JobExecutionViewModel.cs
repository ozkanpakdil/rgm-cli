/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace cli.Model;

/// <summary>
///     JobExecutionViewModel
/// </summary>
[DataContract(Name = "JobExecutionViewModel")]
public class JobExecutionViewModel : IValidatableObject
{
    /// <summary>
    ///     Initializes a new instance of the <see cref="JobExecutionViewModel" /> class.
    /// </summary>
    /// <param name="category">category.</param>
    /// <param name="name">name.</param>
    /// <param name="description">description.</param>
    /// <param name="executionCount">executionCount.</param>
    /// <param name="successCount">successCount.</param>
    /// <param name="failureCount">failureCount.</param>
    /// <param name="nextRun">nextRun.</param>
    /// <param name="lastRun">lastRun.</param>
    public JobExecutionViewModel(string category = default, string name = default, string description = default,
        int executionCount = default, int successCount = default, int failureCount = default,
        DateTime? nextRun = default, JobExecutionResultDto lastRun = default)
    {
        Category = category;
        Name = name;
        Description = description;
        ExecutionCount = executionCount;
        SuccessCount = successCount;
        FailureCount = failureCount;
        NextRun = nextRun;
        LastRun = lastRun;
    }

    /// <summary>
    ///     Gets or Sets Category
    /// </summary>
    [DataMember(Name = "category", EmitDefaultValue = true)]
    public string Category { get; set; }

    /// <summary>
    ///     Gets or Sets Name
    /// </summary>
    [DataMember(Name = "name", EmitDefaultValue = true)]
    public string Name { get; set; }

    /// <summary>
    ///     Gets or Sets Description
    /// </summary>
    [DataMember(Name = "description", EmitDefaultValue = true)]
    public string Description { get; set; }

    /// <summary>
    ///     Gets or Sets ExecutionCount
    /// </summary>
    [DataMember(Name = "executionCount", EmitDefaultValue = false)]
    public int ExecutionCount { get; set; }

    /// <summary>
    ///     Gets or Sets SuccessCount
    /// </summary>
    [DataMember(Name = "successCount", EmitDefaultValue = false)]
    public int SuccessCount { get; set; }

    /// <summary>
    ///     Gets or Sets FailureCount
    /// </summary>
    [DataMember(Name = "failureCount", EmitDefaultValue = false)]
    public int FailureCount { get; set; }

    /// <summary>
    ///     Gets or Sets NextRun
    /// </summary>
    [DataMember(Name = "nextRun", EmitDefaultValue = true)]
    public DateTime? NextRun { get; set; }

    /// <summary>
    ///     Gets or Sets LastRun
    /// </summary>
    [DataMember(Name = "lastRun", EmitDefaultValue = false)]
    public JobExecutionResultDto LastRun { get; set; }

    /// <summary>
    ///     To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }

    /// <summary>
    ///     Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class JobExecutionViewModel {\n");
        sb.Append("  Category: ").Append(Category).Append("\n");
        sb.Append("  Name: ").Append(Name).Append("\n");
        sb.Append("  Description: ").Append(Description).Append("\n");
        sb.Append("  ExecutionCount: ").Append(ExecutionCount).Append("\n");
        sb.Append("  SuccessCount: ").Append(SuccessCount).Append("\n");
        sb.Append("  FailureCount: ").Append(FailureCount).Append("\n");
        sb.Append("  NextRun: ").Append(NextRun).Append("\n");
        sb.Append("  LastRun: ").Append(LastRun).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    ///     Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}