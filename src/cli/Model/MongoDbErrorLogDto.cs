/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace cli.Model;

/// <summary>
///     MongoDbErrorLogDto
/// </summary>
[DataContract(Name = "MongoDbErrorLogDto")]
public class MongoDbErrorLogDto : IValidatableObject
{
    /// <summary>
    ///     Initializes a new instance of the <see cref="MongoDbErrorLogDto" /> class.
    /// </summary>
    /// <param name="logDate">logDate.</param>
    /// <param name="sequenceNumber">sequenceNumber.</param>
    /// <param name="id">id.</param>
    /// <param name="context">context.</param>
    /// <param name="severityCode">severityCode.</param>
    /// <param name="component">component.</param>
    /// <param name="message">message.</param>
    /// <param name="attributes">attributes.</param>
    public MongoDbErrorLogDto(DateTime logDate = default, IntegerIdentifier sequenceNumber = default,
        IntegerIdentifier id = default, string context = default, string severityCode = default,
        string component = default, string message = default, string attributes = default)
    {
        LogDate = logDate;
        SequenceNumber = sequenceNumber;
        Id = id;
        Context = context;
        SeverityCode = severityCode;
        Component = component;
        Message = message;
        Attributes = attributes;
    }

    /// <summary>
    ///     Gets or Sets LogDate
    /// </summary>
    [DataMember(Name = "logDate", EmitDefaultValue = false)]
    public DateTime LogDate { get; set; }

    /// <summary>
    ///     Gets or Sets SequenceNumber
    /// </summary>
    [DataMember(Name = "sequenceNumber", EmitDefaultValue = false)]
    public IntegerIdentifier SequenceNumber { get; set; }

    /// <summary>
    ///     Gets or Sets Id
    /// </summary>
    [DataMember(Name = "id", EmitDefaultValue = false)]
    public IntegerIdentifier Id { get; set; }

    /// <summary>
    ///     Gets or Sets Context
    /// </summary>
    [DataMember(Name = "context", EmitDefaultValue = true)]
    public string Context { get; set; }

    /// <summary>
    ///     Gets or Sets SeverityCode
    /// </summary>
    [DataMember(Name = "severityCode", EmitDefaultValue = true)]
    public string SeverityCode { get; set; }

    /// <summary>
    ///     Gets or Sets Component
    /// </summary>
    [DataMember(Name = "component", EmitDefaultValue = true)]
    public string Component { get; set; }

    /// <summary>
    ///     Gets or Sets Message
    /// </summary>
    [DataMember(Name = "message", EmitDefaultValue = true)]
    public string Message { get; set; }

    /// <summary>
    ///     Gets or Sets Attributes
    /// </summary>
    [DataMember(Name = "attributes", EmitDefaultValue = true)]
    public string Attributes { get; set; }

    /// <summary>
    ///     To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }

    /// <summary>
    ///     Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class MongoDbErrorLogDto {\n");
        sb.Append("  LogDate: ").Append(LogDate).Append("\n");
        sb.Append("  SequenceNumber: ").Append(SequenceNumber).Append("\n");
        sb.Append("  Id: ").Append(Id).Append("\n");
        sb.Append("  Context: ").Append(Context).Append("\n");
        sb.Append("  SeverityCode: ").Append(SeverityCode).Append("\n");
        sb.Append("  Component: ").Append(Component).Append("\n");
        sb.Append("  Message: ").Append(Message).Append("\n");
        sb.Append("  Attributes: ").Append(Attributes).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    ///     Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}