/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cli.Client.OpenAPIDateConverter;

namespace cli.Model
{
    /// <summary>
    /// CustomMetricsGridDto
    /// </summary>
    [DataContract(Name = "CustomMetricsGridDto")]
    public partial class CustomMetricsGridDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomMetricsGridDto" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="name">name.</param>
        /// <param name="frequency">frequency.</param>
        /// <param name="alertName">alertName.</param>
        /// <param name="alertIsEnabled">alertIsEnabled.</param>
        /// <param name="isEnabled">isEnabled.</param>
        /// <param name="serversSummary">serversSummary.</param>
        /// <param name="databasesSummary">databasesSummary.</param>
        /// <param name="analysisLinkData">analysisLinkData.</param>
        public CustomMetricsGridDto(IntegerIdentifier id = default(IntegerIdentifier), string name = default(string), string frequency = default(string), string alertName = default(string), bool? alertIsEnabled = default(bool?), bool isEnabled = default(bool), string serversSummary = default(string), string databasesSummary = default(string), AnalysisLinkData analysisLinkData = default(AnalysisLinkData))
        {
            this.Id = id;
            this.Name = name;
            this.Frequency = frequency;
            this.AlertName = alertName;
            this.AlertIsEnabled = alertIsEnabled;
            this.IsEnabled = isEnabled;
            this.ServersSummary = serversSummary;
            this.DatabasesSummary = databasesSummary;
            this.AnalysisLinkData = analysisLinkData;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public IntegerIdentifier Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Frequency
        /// </summary>
        [DataMember(Name = "frequency", EmitDefaultValue = true)]
        public string Frequency { get; set; }

        /// <summary>
        /// Gets or Sets AlertName
        /// </summary>
        [DataMember(Name = "alertName", EmitDefaultValue = true)]
        public string AlertName { get; set; }

        /// <summary>
        /// Gets or Sets AlertIsEnabled
        /// </summary>
        [DataMember(Name = "alertIsEnabled", EmitDefaultValue = true)]
        public bool? AlertIsEnabled { get; set; }

        /// <summary>
        /// Gets or Sets IsEnabled
        /// </summary>
        [DataMember(Name = "isEnabled", EmitDefaultValue = true)]
        public bool IsEnabled { get; set; }

        /// <summary>
        /// Gets or Sets ServersSummary
        /// </summary>
        [DataMember(Name = "serversSummary", EmitDefaultValue = true)]
        public string ServersSummary { get; set; }

        /// <summary>
        /// Gets or Sets DatabasesSummary
        /// </summary>
        [DataMember(Name = "databasesSummary", EmitDefaultValue = true)]
        public string DatabasesSummary { get; set; }

        /// <summary>
        /// Gets or Sets AnalysisLinkData
        /// </summary>
        [DataMember(Name = "analysisLinkData", EmitDefaultValue = false)]
        public AnalysisLinkData AnalysisLinkData { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CustomMetricsGridDto {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Frequency: ").Append(Frequency).Append("\n");
            sb.Append("  AlertName: ").Append(AlertName).Append("\n");
            sb.Append("  AlertIsEnabled: ").Append(AlertIsEnabled).Append("\n");
            sb.Append("  IsEnabled: ").Append(IsEnabled).Append("\n");
            sb.Append("  ServersSummary: ").Append(ServersSummary).Append("\n");
            sb.Append("  DatabasesSummary: ").Append(DatabasesSummary).Append("\n");
            sb.Append("  AnalysisLinkData: ").Append(AnalysisLinkData).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
