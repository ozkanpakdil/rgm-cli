/*
 * Redgate Monitor API - internal - for dev use only
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 14.0.45
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;
using RedGate.SqlMonitor.Channels.Data;

namespace cli.Model;

/// <summary>
///     OracleTopQueryDto
/// </summary>
[DataContract(Name = "OracleTopQueryDto")]
public class OracleTopQueryDto : IValidatableObject
{
    /// <summary>
    ///     Initializes a new instance of the <see cref="OracleTopQueryDto" /> class.
    /// </summary>
    /// <param name="channelInstanceRef">channelInstanceRef.</param>
    /// <param name="sqlId">sqlId.</param>
    /// <param name="sqlText">sqlText.</param>
    /// <param name="executionCount">executionCount.</param>
    /// <param name="elapsedTime">elapsedTime.</param>
    /// <param name="cpuTime">cpuTime.</param>
    /// <param name="userIoWait">userIoWait.</param>
    /// <param name="shareableMemory">shareableMemory.</param>
    /// <param name="optimizerCost">optimizerCost.</param>
    /// <param name="planHashValue">planHashValue.</param>
    /// <param name="containerName">containerName.</param>
    public OracleTopQueryDto(ChannelInstanceRef channelInstanceRef = default, string sqlId = default,
        string sqlText = default, long executionCount = default, long elapsedTime = default, long cpuTime = default,
        long userIoWait = default, long shareableMemory = default, long optimizerCost = default,
        string planHashValue = default, string containerName = default)
    {
        ChannelInstanceRef = channelInstanceRef;
        SqlId = sqlId;
        SqlText = sqlText;
        ExecutionCount = executionCount;
        ElapsedTime = elapsedTime;
        CpuTime = cpuTime;
        UserIoWait = userIoWait;
        ShareableMemory = shareableMemory;
        OptimizerCost = optimizerCost;
        PlanHashValue = planHashValue;
        ContainerName = containerName;
    }

    /// <summary>
    ///     Gets or Sets ChannelInstanceRef
    /// </summary>
    [DataMember(Name = "channelInstanceRef", EmitDefaultValue = true)]
    public ChannelInstanceRef ChannelInstanceRef { get; set; }

    /// <summary>
    ///     Gets or Sets SqlId
    /// </summary>
    [DataMember(Name = "sqlId", EmitDefaultValue = true)]
    public string SqlId { get; set; }

    /// <summary>
    ///     Gets or Sets SqlText
    /// </summary>
    [DataMember(Name = "sqlText", EmitDefaultValue = true)]
    public string SqlText { get; set; }

    /// <summary>
    ///     Gets or Sets ExecutionCount
    /// </summary>
    [DataMember(Name = "executionCount", EmitDefaultValue = false)]
    public long ExecutionCount { get; set; }

    /// <summary>
    ///     Gets or Sets ElapsedTime
    /// </summary>
    [DataMember(Name = "elapsedTime", EmitDefaultValue = false)]
    public long ElapsedTime { get; set; }

    /// <summary>
    ///     Gets or Sets CpuTime
    /// </summary>
    [DataMember(Name = "cpuTime", EmitDefaultValue = false)]
    public long CpuTime { get; set; }

    /// <summary>
    ///     Gets or Sets UserIoWait
    /// </summary>
    [DataMember(Name = "userIoWait", EmitDefaultValue = false)]
    public long UserIoWait { get; set; }

    /// <summary>
    ///     Gets or Sets ShareableMemory
    /// </summary>
    [DataMember(Name = "shareableMemory", EmitDefaultValue = false)]
    public long ShareableMemory { get; set; }

    /// <summary>
    ///     Gets or Sets OptimizerCost
    /// </summary>
    [DataMember(Name = "optimizerCost", EmitDefaultValue = false)]
    public long OptimizerCost { get; set; }

    /// <summary>
    ///     Gets or Sets PlanHashValue
    /// </summary>
    [DataMember(Name = "planHashValue", EmitDefaultValue = true)]
    public string PlanHashValue { get; set; }

    /// <summary>
    ///     Gets or Sets ContainerName
    /// </summary>
    [DataMember(Name = "containerName", EmitDefaultValue = true)]
    public string ContainerName { get; set; }

    /// <summary>
    ///     To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }

    /// <summary>
    ///     Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class OracleTopQueryDto {\n");
        sb.Append("  ChannelInstanceRef: ").Append(ChannelInstanceRef).Append("\n");
        sb.Append("  SqlId: ").Append(SqlId).Append("\n");
        sb.Append("  SqlText: ").Append(SqlText).Append("\n");
        sb.Append("  ExecutionCount: ").Append(ExecutionCount).Append("\n");
        sb.Append("  ElapsedTime: ").Append(ElapsedTime).Append("\n");
        sb.Append("  CpuTime: ").Append(CpuTime).Append("\n");
        sb.Append("  UserIoWait: ").Append(UserIoWait).Append("\n");
        sb.Append("  ShareableMemory: ").Append(ShareableMemory).Append("\n");
        sb.Append("  OptimizerCost: ").Append(OptimizerCost).Append("\n");
        sb.Append("  PlanHashValue: ").Append(PlanHashValue).Append("\n");
        sb.Append("  ContainerName: ").Append(ContainerName).Append("\n");
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    ///     Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson()
    {
        return JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}