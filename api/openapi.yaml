openapi: 3.0.1
info:
  title: Redgate Monitor API - internal - for dev use only
  version: 14.0.45
servers:
- url: /
paths:
  /api/basemonitors/{baseMonitorName}/configuration/additionalMonitoringSettings:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AdditionalMonitoringConfigItemIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalMonitoringConfigItemIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AdditionalMonitoringConfigItemIEnumerableJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AdditionalMonitoringSettingsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.AdditionalMonitoringSettingsApiController.Get
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/AdditionalMonitoringConfigurationEntry'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AdditionalMonitoringConfigurationEntry'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/AdditionalMonitoringConfigurationEntry'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/AdditionalMonitoringConfigurationEntry'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AdditionalMonitoringSettingsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.AdditionalMonitoringSettingsApiController.UpdateIndexSampling
  /api/agents:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AgentStatusDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AgentStatusDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AgentStatusDtoArrayJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AgentStatusApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.Agent.AgentStatusApiController.Get
  /api/basemonitors/{baseMonitorName}/alert/{alertId}/clear:
    post:
      parameters:
      - explode: false
        in: path
        name: alertId
        required: true
        schema:
          $ref: '#/components/schemas/IntegerIdentifier'
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AlertActionApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Controllers.AlertActionApiController.ClearAlert
  /api/basemonitors/{baseMonitorName}/alert/{alertId}/unclear:
    post:
      parameters:
      - explode: false
        in: path
        name: alertId
        required: true
        schema:
          $ref: '#/components/schemas/IntegerIdentifier'
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AlertActionApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Controllers.AlertActionApiController.UndoClearAlert
  /api/basemonitors/{baseMonitorName}/alerts/feed:
    get:
      parameters:
      - explode: true
        in: query
        name: cir
        required: true
        schema:
          format: entity-id
          type: ChannelInstanceRef
        style: form
      - explode: true
        in: query
        name: minTime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: maxTime
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServerOverviewAlertsFeedModelDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerOverviewAlertsFeedModelDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/ServerOverviewAlertsFeedModelDtoJSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AlertFeedApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Alerts.Controllers.AlertFeedApiController.GetAlertsFeedModel
  /api/basemonitors/{baseMonitorName}/alerts/details/{alertId}:
    get:
      parameters:
      - explode: false
        in: path
        name: alertId
        required: true
        schema:
          $ref: '#/components/schemas/IntegerIdentifier'
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RecentAlertDetailsDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/RecentAlertDetailsDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/RecentAlertDetailsDtoJSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AlertFeedApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Alerts.Controllers.AlertFeedApiController.GetAlertDetails
  /api/basemonitors/{baseMonitorName}/alerts/details/related/{alertId}:
    get:
      parameters:
      - explode: false
        in: path
        name: alertId
        required: true
        schema:
          $ref: '#/components/schemas/IntegerIdentifier'
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlertHistoryCommentsDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AlertHistoryCommentsDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertHistoryCommentsDtoIEnumerableJSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AlertFeedApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Alerts.Controllers.AlertFeedApiController.GetRelatedAlertDetails
  /api/Alerts/alertsgroupinbox/savecustomfilter:
    post:
      operationId: AlertsInboxSaveCustomFilter
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          multipart/form-data:
            encoding:
              TimeRange.Type:
                style: form
              TimeRange.RelativeMinutes:
                style: form
              TimeRange.FromDateTime:
                style: form
              TimeRange.ToDateTime:
                style: form
              TimeRange.TimeWindowMode:
                style: form
              IncludeStatus.SeverityHigh:
                style: form
              IncludeStatus.SeverityMedium:
                style: form
              IncludeStatus.SeverityLow:
                style: form
              IncludeStatus.ReadYes:
                style: form
              IncludeStatus.ReadNo:
                style: form
              IncludeStatus.ClearedYes:
                style: form
              IncludeStatus.ClearedNo:
                style: form
              IncludeStatus.StatusEvent:
                style: form
              IncludeStatus.StatusActive:
                style: form
              IncludeStatus.StatusEnded:
                style: form
              IncludeStatus.CommentYes:
                style: form
              IncludeStatus.CommentNo:
                style: form
              IncludeAlertTypeIds:
                style: form
              SelectedTags:
                style: form
            schema:
              $ref: '#/components/schemas/AlertsInboxSaveCustomFilter_request'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/deletecustomfilter:
    post:
      operationId: AlertsInboxDeleteCustomFilter
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/savecustomfilterjson:
    post:
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
        required: true
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/deletecustomfilterjson:
    post:
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: boolean
            application/json:
              schema:
                type: boolean
            text/json:
              schema:
                type: boolean
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/readalertjson:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
        required: true
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/unreadalertjson:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
        required: true
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/clearalertjson:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
        required: true
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/unclearalertjson:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
        required: true
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/readjson:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
        required: true
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/unreadjson:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
        required: true
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/clearjson:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
        required: true
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/unclearjson:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
        required: true
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/add-alert-commentjson:
    post:
      parameters:
      - explode: true
        in: query
        name: author
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: comment
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
        required: true
      responses:
        "200":
          description: OK
        "400":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Bad Request
        default:
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/add-group-commentjson:
    post:
      parameters:
      - explode: true
        in: query
        name: author
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: comment
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertInboxSelectionDto'
        required: true
      responses:
        "200":
          description: OK
        "400":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Bad Request
        default:
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/clearalert:
    post:
      operationId: AlertsInboxClearAlert
      requestBody:
        content:
          multipart/form-data:
            encoding:
              LastUpdate:
                style: form
              SelectedGroupIds:
                style: form
              SelectedAlertIds:
                style: form
              FilterSettings.TimeRange.Type:
                style: form
              FilterSettings.TimeRange.RelativeMinutes:
                style: form
              FilterSettings.TimeRange.FromDateTime:
                style: form
              FilterSettings.TimeRange.ToDateTime:
                style: form
              FilterSettings.TimeRange.TimeWindowMode:
                style: form
              FilterSettings.IncludeStatus.SeverityHigh:
                style: form
              FilterSettings.IncludeStatus.SeverityMedium:
                style: form
              FilterSettings.IncludeStatus.SeverityLow:
                style: form
              FilterSettings.IncludeStatus.ReadYes:
                style: form
              FilterSettings.IncludeStatus.ReadNo:
                style: form
              FilterSettings.IncludeStatus.ClearedYes:
                style: form
              FilterSettings.IncludeStatus.ClearedNo:
                style: form
              FilterSettings.IncludeStatus.StatusEvent:
                style: form
              FilterSettings.IncludeStatus.StatusActive:
                style: form
              FilterSettings.IncludeStatus.StatusEnded:
                style: form
              FilterSettings.IncludeStatus.CommentYes:
                style: form
              FilterSettings.IncludeStatus.CommentNo:
                style: form
              FilterSettings.IncludeAlertTypeIds:
                style: form
              FilterSettings.SelectedTags:
                style: form
              ChannelInstanceRefs:
                style: form
            schema:
              $ref: '#/components/schemas/AlertsInboxClearAlert_request'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/unclearalert:
    post:
      operationId: AlertsInboxUnclearAlert
      requestBody:
        content:
          multipart/form-data:
            encoding:
              LastUpdate:
                style: form
              SelectedGroupIds:
                style: form
              SelectedAlertIds:
                style: form
              FilterSettings.TimeRange.Type:
                style: form
              FilterSettings.TimeRange.RelativeMinutes:
                style: form
              FilterSettings.TimeRange.FromDateTime:
                style: form
              FilterSettings.TimeRange.ToDateTime:
                style: form
              FilterSettings.TimeRange.TimeWindowMode:
                style: form
              FilterSettings.IncludeStatus.SeverityHigh:
                style: form
              FilterSettings.IncludeStatus.SeverityMedium:
                style: form
              FilterSettings.IncludeStatus.SeverityLow:
                style: form
              FilterSettings.IncludeStatus.ReadYes:
                style: form
              FilterSettings.IncludeStatus.ReadNo:
                style: form
              FilterSettings.IncludeStatus.ClearedYes:
                style: form
              FilterSettings.IncludeStatus.ClearedNo:
                style: form
              FilterSettings.IncludeStatus.StatusEvent:
                style: form
              FilterSettings.IncludeStatus.StatusActive:
                style: form
              FilterSettings.IncludeStatus.StatusEnded:
                style: form
              FilterSettings.IncludeStatus.CommentYes:
                style: form
              FilterSettings.IncludeStatus.CommentNo:
                style: form
              FilterSettings.IncludeAlertTypeIds:
                style: form
              FilterSettings.SelectedTags:
                style: form
              ChannelInstanceRefs:
                style: form
            schema:
              $ref: '#/components/schemas/AlertsInboxClearAlert_request'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/readalert:
    post:
      operationId: AlertsInboxReadAlert
      requestBody:
        content:
          multipart/form-data:
            encoding:
              LastUpdate:
                style: form
              SelectedGroupIds:
                style: form
              SelectedAlertIds:
                style: form
              FilterSettings.TimeRange.Type:
                style: form
              FilterSettings.TimeRange.RelativeMinutes:
                style: form
              FilterSettings.TimeRange.FromDateTime:
                style: form
              FilterSettings.TimeRange.ToDateTime:
                style: form
              FilterSettings.TimeRange.TimeWindowMode:
                style: form
              FilterSettings.IncludeStatus.SeverityHigh:
                style: form
              FilterSettings.IncludeStatus.SeverityMedium:
                style: form
              FilterSettings.IncludeStatus.SeverityLow:
                style: form
              FilterSettings.IncludeStatus.ReadYes:
                style: form
              FilterSettings.IncludeStatus.ReadNo:
                style: form
              FilterSettings.IncludeStatus.ClearedYes:
                style: form
              FilterSettings.IncludeStatus.ClearedNo:
                style: form
              FilterSettings.IncludeStatus.StatusEvent:
                style: form
              FilterSettings.IncludeStatus.StatusActive:
                style: form
              FilterSettings.IncludeStatus.StatusEnded:
                style: form
              FilterSettings.IncludeStatus.CommentYes:
                style: form
              FilterSettings.IncludeStatus.CommentNo:
                style: form
              FilterSettings.IncludeAlertTypeIds:
                style: form
              FilterSettings.SelectedTags:
                style: form
              ChannelInstanceRefs:
                style: form
            schema:
              $ref: '#/components/schemas/AlertsInboxClearAlert_request'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/unreadalert:
    post:
      operationId: AlertsInboxUnreadAlert
      requestBody:
        content:
          multipart/form-data:
            encoding:
              LastUpdate:
                style: form
              SelectedGroupIds:
                style: form
              SelectedAlertIds:
                style: form
              FilterSettings.TimeRange.Type:
                style: form
              FilterSettings.TimeRange.RelativeMinutes:
                style: form
              FilterSettings.TimeRange.FromDateTime:
                style: form
              FilterSettings.TimeRange.ToDateTime:
                style: form
              FilterSettings.TimeRange.TimeWindowMode:
                style: form
              FilterSettings.IncludeStatus.SeverityHigh:
                style: form
              FilterSettings.IncludeStatus.SeverityMedium:
                style: form
              FilterSettings.IncludeStatus.SeverityLow:
                style: form
              FilterSettings.IncludeStatus.ReadYes:
                style: form
              FilterSettings.IncludeStatus.ReadNo:
                style: form
              FilterSettings.IncludeStatus.ClearedYes:
                style: form
              FilterSettings.IncludeStatus.ClearedNo:
                style: form
              FilterSettings.IncludeStatus.StatusEvent:
                style: form
              FilterSettings.IncludeStatus.StatusActive:
                style: form
              FilterSettings.IncludeStatus.StatusEnded:
                style: form
              FilterSettings.IncludeStatus.CommentYes:
                style: form
              FilterSettings.IncludeStatus.CommentNo:
                style: form
              FilterSettings.IncludeAlertTypeIds:
                style: form
              FilterSettings.SelectedTags:
                style: form
              ChannelInstanceRefs:
                style: form
            schema:
              $ref: '#/components/schemas/AlertsInboxClearAlert_request'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/add-alert-comment:
    post:
      operationId: AlertsInboxAddAlertComment
      parameters:
      - explode: true
        in: query
        name: author
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: comment
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          multipart/form-data:
            encoding:
              LastUpdate:
                style: form
              SelectedGroupIds:
                style: form
              SelectedAlertIds:
                style: form
              FilterSettings.TimeRange.Type:
                style: form
              FilterSettings.TimeRange.RelativeMinutes:
                style: form
              FilterSettings.TimeRange.FromDateTime:
                style: form
              FilterSettings.TimeRange.ToDateTime:
                style: form
              FilterSettings.TimeRange.TimeWindowMode:
                style: form
              FilterSettings.IncludeStatus.SeverityHigh:
                style: form
              FilterSettings.IncludeStatus.SeverityMedium:
                style: form
              FilterSettings.IncludeStatus.SeverityLow:
                style: form
              FilterSettings.IncludeStatus.ReadYes:
                style: form
              FilterSettings.IncludeStatus.ReadNo:
                style: form
              FilterSettings.IncludeStatus.ClearedYes:
                style: form
              FilterSettings.IncludeStatus.ClearedNo:
                style: form
              FilterSettings.IncludeStatus.StatusEvent:
                style: form
              FilterSettings.IncludeStatus.StatusActive:
                style: form
              FilterSettings.IncludeStatus.StatusEnded:
                style: form
              FilterSettings.IncludeStatus.CommentYes:
                style: form
              FilterSettings.IncludeStatus.CommentNo:
                style: form
              FilterSettings.IncludeAlertTypeIds:
                style: form
              FilterSettings.SelectedTags:
                style: form
              ChannelInstanceRefs:
                style: form
            schema:
              $ref: '#/components/schemas/AlertsInboxClearAlert_request'
      responses:
        "200":
          description: OK
        "400":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Bad Request
        default:
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/clear:
    post:
      operationId: AlertsInboxClear
      requestBody:
        content:
          multipart/form-data:
            encoding:
              LastUpdate:
                style: form
              SelectedGroupIds:
                style: form
              SelectedAlertIds:
                style: form
              FilterSettings.TimeRange.Type:
                style: form
              FilterSettings.TimeRange.RelativeMinutes:
                style: form
              FilterSettings.TimeRange.FromDateTime:
                style: form
              FilterSettings.TimeRange.ToDateTime:
                style: form
              FilterSettings.TimeRange.TimeWindowMode:
                style: form
              FilterSettings.IncludeStatus.SeverityHigh:
                style: form
              FilterSettings.IncludeStatus.SeverityMedium:
                style: form
              FilterSettings.IncludeStatus.SeverityLow:
                style: form
              FilterSettings.IncludeStatus.ReadYes:
                style: form
              FilterSettings.IncludeStatus.ReadNo:
                style: form
              FilterSettings.IncludeStatus.ClearedYes:
                style: form
              FilterSettings.IncludeStatus.ClearedNo:
                style: form
              FilterSettings.IncludeStatus.StatusEvent:
                style: form
              FilterSettings.IncludeStatus.StatusActive:
                style: form
              FilterSettings.IncludeStatus.StatusEnded:
                style: form
              FilterSettings.IncludeStatus.CommentYes:
                style: form
              FilterSettings.IncludeStatus.CommentNo:
                style: form
              FilterSettings.IncludeAlertTypeIds:
                style: form
              FilterSettings.SelectedTags:
                style: form
              ChannelInstanceRefs:
                style: form
            schema:
              $ref: '#/components/schemas/AlertsInboxClearAlert_request'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/unclear:
    post:
      operationId: AlertsInboxUnclear
      requestBody:
        content:
          multipart/form-data:
            encoding:
              LastUpdate:
                style: form
              SelectedGroupIds:
                style: form
              SelectedAlertIds:
                style: form
              FilterSettings.TimeRange.Type:
                style: form
              FilterSettings.TimeRange.RelativeMinutes:
                style: form
              FilterSettings.TimeRange.FromDateTime:
                style: form
              FilterSettings.TimeRange.ToDateTime:
                style: form
              FilterSettings.TimeRange.TimeWindowMode:
                style: form
              FilterSettings.IncludeStatus.SeverityHigh:
                style: form
              FilterSettings.IncludeStatus.SeverityMedium:
                style: form
              FilterSettings.IncludeStatus.SeverityLow:
                style: form
              FilterSettings.IncludeStatus.ReadYes:
                style: form
              FilterSettings.IncludeStatus.ReadNo:
                style: form
              FilterSettings.IncludeStatus.ClearedYes:
                style: form
              FilterSettings.IncludeStatus.ClearedNo:
                style: form
              FilterSettings.IncludeStatus.StatusEvent:
                style: form
              FilterSettings.IncludeStatus.StatusActive:
                style: form
              FilterSettings.IncludeStatus.StatusEnded:
                style: form
              FilterSettings.IncludeStatus.CommentYes:
                style: form
              FilterSettings.IncludeStatus.CommentNo:
                style: form
              FilterSettings.IncludeAlertTypeIds:
                style: form
              FilterSettings.SelectedTags:
                style: form
              ChannelInstanceRefs:
                style: form
            schema:
              $ref: '#/components/schemas/AlertsInboxClearAlert_request'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/read:
    post:
      operationId: AlertsInboxRead
      requestBody:
        content:
          multipart/form-data:
            encoding:
              LastUpdate:
                style: form
              SelectedGroupIds:
                style: form
              SelectedAlertIds:
                style: form
              FilterSettings.TimeRange.Type:
                style: form
              FilterSettings.TimeRange.RelativeMinutes:
                style: form
              FilterSettings.TimeRange.FromDateTime:
                style: form
              FilterSettings.TimeRange.ToDateTime:
                style: form
              FilterSettings.TimeRange.TimeWindowMode:
                style: form
              FilterSettings.IncludeStatus.SeverityHigh:
                style: form
              FilterSettings.IncludeStatus.SeverityMedium:
                style: form
              FilterSettings.IncludeStatus.SeverityLow:
                style: form
              FilterSettings.IncludeStatus.ReadYes:
                style: form
              FilterSettings.IncludeStatus.ReadNo:
                style: form
              FilterSettings.IncludeStatus.ClearedYes:
                style: form
              FilterSettings.IncludeStatus.ClearedNo:
                style: form
              FilterSettings.IncludeStatus.StatusEvent:
                style: form
              FilterSettings.IncludeStatus.StatusActive:
                style: form
              FilterSettings.IncludeStatus.StatusEnded:
                style: form
              FilterSettings.IncludeStatus.CommentYes:
                style: form
              FilterSettings.IncludeStatus.CommentNo:
                style: form
              FilterSettings.IncludeAlertTypeIds:
                style: form
              FilterSettings.SelectedTags:
                style: form
              ChannelInstanceRefs:
                style: form
            schema:
              $ref: '#/components/schemas/AlertsInboxClearAlert_request'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/unread:
    post:
      operationId: AlertsInboxUnread
      requestBody:
        content:
          multipart/form-data:
            encoding:
              LastUpdate:
                style: form
              SelectedGroupIds:
                style: form
              SelectedAlertIds:
                style: form
              FilterSettings.TimeRange.Type:
                style: form
              FilterSettings.TimeRange.RelativeMinutes:
                style: form
              FilterSettings.TimeRange.FromDateTime:
                style: form
              FilterSettings.TimeRange.ToDateTime:
                style: form
              FilterSettings.TimeRange.TimeWindowMode:
                style: form
              FilterSettings.IncludeStatus.SeverityHigh:
                style: form
              FilterSettings.IncludeStatus.SeverityMedium:
                style: form
              FilterSettings.IncludeStatus.SeverityLow:
                style: form
              FilterSettings.IncludeStatus.ReadYes:
                style: form
              FilterSettings.IncludeStatus.ReadNo:
                style: form
              FilterSettings.IncludeStatus.ClearedYes:
                style: form
              FilterSettings.IncludeStatus.ClearedNo:
                style: form
              FilterSettings.IncludeStatus.StatusEvent:
                style: form
              FilterSettings.IncludeStatus.StatusActive:
                style: form
              FilterSettings.IncludeStatus.StatusEnded:
                style: form
              FilterSettings.IncludeStatus.CommentYes:
                style: form
              FilterSettings.IncludeStatus.CommentNo:
                style: form
              FilterSettings.IncludeAlertTypeIds:
                style: form
              FilterSettings.SelectedTags:
                style: form
              ChannelInstanceRefs:
                style: form
            schema:
              $ref: '#/components/schemas/AlertsInboxClearAlert_request'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/add-group-comment:
    post:
      operationId: AlertsInboxAddGroupComment
      parameters:
      - explode: true
        in: query
        name: author
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: comment
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          multipart/form-data:
            encoding:
              LastUpdate:
                style: form
              SelectedGroupIds:
                style: form
              SelectedAlertIds:
                style: form
              FilterSettings.TimeRange.Type:
                style: form
              FilterSettings.TimeRange.RelativeMinutes:
                style: form
              FilterSettings.TimeRange.FromDateTime:
                style: form
              FilterSettings.TimeRange.ToDateTime:
                style: form
              FilterSettings.TimeRange.TimeWindowMode:
                style: form
              FilterSettings.IncludeStatus.SeverityHigh:
                style: form
              FilterSettings.IncludeStatus.SeverityMedium:
                style: form
              FilterSettings.IncludeStatus.SeverityLow:
                style: form
              FilterSettings.IncludeStatus.ReadYes:
                style: form
              FilterSettings.IncludeStatus.ReadNo:
                style: form
              FilterSettings.IncludeStatus.ClearedYes:
                style: form
              FilterSettings.IncludeStatus.ClearedNo:
                style: form
              FilterSettings.IncludeStatus.StatusEvent:
                style: form
              FilterSettings.IncludeStatus.StatusActive:
                style: form
              FilterSettings.IncludeStatus.StatusEnded:
                style: form
              FilterSettings.IncludeStatus.CommentYes:
                style: form
              FilterSettings.IncludeStatus.CommentNo:
                style: form
              FilterSettings.IncludeAlertTypeIds:
                style: form
              FilterSettings.SelectedTags:
                style: form
              ChannelInstanceRefs:
                style: form
            schema:
              $ref: '#/components/schemas/AlertsInboxClearAlert_request'
      responses:
        "200":
          description: OK
        "400":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Bad Request
        default:
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AlertInboxApi
  /api/Alerts/alertsgroupinbox/load:
    post:
      operationId: AlertsInboxLoad
      parameters:
      - explode: true
        in: query
        name: startTicks
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: alertId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: channelInstanceRefs
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: isGrouped
        required: false
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AlertInboxPagingApi
  /api/Alerts/alertsgroupinbox/moveOldest:
    post:
      operationId: AlertsInboxMoveOldest
      parameters:
      - explode: true
        in: query
        name: channelInstanceRefs
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: isGrouped
        required: false
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AlertInboxPagingApi
  /api/Alerts/alertsgroupinbox/moveNewest:
    post:
      operationId: AlertsInboxMoveNewest
      parameters:
      - explode: true
        in: query
        name: channelInstanceRefs
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: isGrouped
        required: false
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AlertInboxPagingApi
  /api/Alerts/alertsgroupinbox/alertreport:
    post:
      operationId: AlertReport
      parameters:
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: isGrouped
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: timeRange
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: timeRangeType
        required: false
        schema:
          $ref: '#/components/schemas/AlertReportTimeRangeType'
        style: form
      - explode: true
        in: query
        name: channelInstanceRefs
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          multipart/form-data:
            encoding:
              TimeRange.Type:
                style: form
              TimeRange.RelativeMinutes:
                style: form
              TimeRange.FromDateTime:
                style: form
              TimeRange.ToDateTime:
                style: form
              TimeRange.TimeWindowMode:
                style: form
              IncludeStatus.SeverityHigh:
                style: form
              IncludeStatus.SeverityMedium:
                style: form
              IncludeStatus.SeverityLow:
                style: form
              IncludeStatus.ReadYes:
                style: form
              IncludeStatus.ReadNo:
                style: form
              IncludeStatus.ClearedYes:
                style: form
              IncludeStatus.ClearedNo:
                style: form
              IncludeStatus.StatusEvent:
                style: form
              IncludeStatus.StatusActive:
                style: form
              IncludeStatus.StatusEnded:
                style: form
              IncludeStatus.CommentYes:
                style: form
              IncludeStatus.CommentNo:
                style: form
              IncludeAlertTypeIds:
                style: form
              SelectedTags:
                style: form
            schema:
              $ref: '#/components/schemas/AlertsInboxSaveCustomFilter_request'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupOfAlertsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupOfAlertsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupOfAlertsDto'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AlertInboxPagingApi
  /api/Alerts/alertsgroupinbox/moveOlder:
    post:
      operationId: AlertsInboxMoveOlder
      parameters:
      - explode: true
        in: query
        name: startTicks
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: alertId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: channelInstanceRefs
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: isGrouped
        required: false
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AlertInboxPagingApi
  /api/Alerts/alertsgroupinbox/moveNewer:
    post:
      operationId: AlertsInboxMoveNewer
      parameters:
      - explode: true
        in: query
        name: startTicks
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: alertId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: channelInstanceRefs
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: isGrouped
        required: false
        schema:
          default: true
          type: boolean
        style: form
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AlertInboxPagingApi
  /api/basemonitors/{baseMonitorName}/monitoredentities/alertsettings/{alertTypeId}:
    get:
      parameters:
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: true
        in: query
        name: cir
        required: true
        schema:
          format: entity-id
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlertSettingsDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSettingsDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertSettingsDtoJSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Forbidden
      tags:
      - AlertSettings
  /api/basemonitors/{baseMonitorName}/monitoredentities/alertsettings/{alertTypeId}/status:
    patch:
      parameters:
      - explode: true
        in: query
        name: cir
        required: true
        schema:
          format: entity-id
          type: string
        style: form
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "204":
          description: No Content
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Forbidden
      tags:
      - AlertSettings
  /api/basemonitors/{baseMonitorName}/monitoredentities/alertsettings/{alertTypeId}/comments:
    patch:
      parameters:
      - explode: true
        in: query
        name: cir
        required: true
        schema:
          format: entity-id
          type: string
        style: form
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "204":
          description: No Content
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Forbidden
      tags:
      - AlertSettings
  /api/basemonitors/{baseMonitorName}/monitoredentities/alertsettings/{alertTypeId}/notificationsettings:
    patch:
      parameters:
      - explode: true
        in: query
        name: cir
        required: true
        schema:
          format: entity-id
          type: string
        style: form
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "204":
          description: No Content
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Forbidden
      tags:
      - AlertSettings
  /api/basemonitors/{baseMonitorName}/monitoredentities/alertsettings/{alertTypeId}/specificsettings:
    patch:
      parameters:
      - explode: true
        in: query
        name: cir
        required: true
        schema:
          format: entity-id
          type: string
        style: form
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Forbidden
      tags:
      - AlertSettings
  /api/basemonitors/{baseMonitorName}/alerts/alertsgroupdetails:
    post:
      operationId: GroupedAlertsDetails
      parameters:
      - explode: true
        in: query
        name: groupCir
        required: false
        schema:
          format: entity-id
          type: ChannelInstanceRef
        style: form
      - explode: true
        in: query
        name: asOfTicks
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: skip
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FilterSettingsDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlertGroupDetailsJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AlertGroupDetailsJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertGroupDetailsJSendSuccess'
          description: OK
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AlertsGroupDetailsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Alerts.Controllers.AlertsGroupDetailsApiController.GetAlertGroupDetails
  /api/basemonitors/{baseMonitorName}/alertsuppressionwindows:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlertSuppressionWindowDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSuppressionWindowDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertSuppressionWindowDtoIEnumerableJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AlertSuppressionWindowsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.AlertSuppressionWindows.AlertSuppressionWindowsApiController.Get
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertSuppressionWindowEditDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertSuppressionWindowEditDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertSuppressionWindowEditDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertSuppressionWindowEditDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlertSuppressionWindowDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSuppressionWindowDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertSuppressionWindowDtoJSendSuccess'
          description: OK
        "409":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Conflict
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AlertSuppressionWindowsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.AlertSuppressionWindows.AlertSuppressionWindowsApiController.Create
  /api/basemonitors/{baseMonitorName}/alertsuppressionwindows/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/IntegerIdentifier'
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AlertSuppressionWindowsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.AlertSuppressionWindows.AlertSuppressionWindowsApiController.Delete
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/IntegerIdentifier'
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlertSuppressionWindowDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSuppressionWindowDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertSuppressionWindowDtoJSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AlertSuppressionWindowsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.AlertSuppressionWindows.AlertSuppressionWindowsApiController.Get
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/IntegerIdentifier'
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertSuppressionWindowEditDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertSuppressionWindowEditDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertSuppressionWindowEditDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertSuppressionWindowEditDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlertSuppressionWindowDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSuppressionWindowDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertSuppressionWindowDtoJSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "409":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Conflict
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AlertSuppressionWindowsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.AlertSuppressionWindows.AlertSuppressionWindowsApiController.Update
  /api/basemonitors/{baseMonitorName}/alertsuppressionwindows/ByNames:
    get:
      parameters:
      - explode: true
        in: query
        name: names
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlertSuppressionWindowDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSuppressionWindowDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertSuppressionWindowDtoIEnumerableJSendSuccess'
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AlertSuppressionWindowsApi
  /api/basemonitors/{baseMonitorName}/alertsuppressionwindows/targets:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlertSuppressionTargetDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSuppressionTargetDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertSuppressionTargetDtoIEnumerableJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AlertSuppressionWindowsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.AlertSuppressionWindows.AlertSuppressionWindowsApiController.GetTargets
  /api/basemonitors/{baseMonitorName}/monitoredentities/alias:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SaveAliasRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/SaveAliasRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SaveAliasRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SaveAliasRequest'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "403":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Forbidden
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AliasApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Controllers.AliasApiController.SaveAlias
  /api/basemonitors/{baseMonitorName}/amazonauroraclusters:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AmazonAuroraCluster
  /api/basemonitors/{baseMonitorName}/amazonauroraclusters/{amazonAuroraClusterName}/postgresinstances:
    get:
      parameters:
      - explode: false
        in: path
        name: amazonAuroraClusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AmazonAuroraCluster
  /api/basemonitors/{baseMonitorName}/amazonauroraclusters/{auroraClusterName}:
    put:
      parameters:
      - explode: false
        in: path
        name: auroraClusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AmazonAuroraClusterDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AmazonAuroraClusterDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AmazonAuroraClusterDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AmazonAuroraClusterDto'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AmazonAuroraCluster
  /api/basemonitors/{baseMonitorName}/amazonauroraclusters/nodes:
    get:
      parameters:
      - explode: true
        in: query
        name: cir
        required: false
        schema:
          $ref: '#/components/schemas/PostgresInstanceChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AmazonAuroraClusterNodeDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AmazonAuroraClusterNodeDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AmazonAuroraClusterNodeDtoArrayJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AmazonAuroraClusterNode
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.SharedOverview.AmazonRdsAurora.AmazonAuroraClusterNodeController.GetClusterNodesForPostgresInstance
  /api/basemonitors/{baseMonitorName}/amazonrdssqlservers/{serverName}/databases:
    get:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AmazonRdsDatabases
  /api/basemonitors/{baseMonitorName}/amazonrdssqlservers/{serverName}/databases/{databaseName}:
    get:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AmazonRdsDatabases
  /api/basemonitors/{baseMonitorName}/amazonrdshosts:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AmazonRdsHost
  /api/basemonitors/{baseMonitorName}/amazonrdshosts/{amazonRdsHostName}/postgresinstances:
    get:
      parameters:
      - explode: false
        in: path
        name: amazonRdsHostName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AmazonRdsHost
  /api/amazonrdshosts/regions:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AmazonRdsHostRegionDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AmazonRdsHostRegionDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AmazonRdsHostRegionDtoArrayJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AmazonRdsHost
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.AmazonRds.AmazonRdsHostController.GetRegions
  /api/basemonitors/{baseMonitorName}/amazonrdshosts/{amazonRdsHostName}:
    put:
      parameters:
      - explode: false
        in: path
        name: amazonRdsHostName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AmazonRdsHostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AmazonRdsHostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AmazonRdsHostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AmazonRdsHostDto'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AmazonRdsHost
  /api/basemonitors/{baseMonitorName}/amazonrdssqlservers:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AmazonRdsSqlServers
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddAmazonRdsSqlServerCommandDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AddAmazonRdsSqlServerCommandDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AddAmazonRdsSqlServerCommandDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddAmazonRdsSqlServerCommandDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AmazonRdsSqlServerDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AmazonRdsSqlServerDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AmazonRdsSqlServerDtoJSendSuccess'
          description: OK
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "409":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Conflict
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AmazonRdsSqlServers
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.AmazonRds.AmazonRdsSqlServersController.Create
  /api/basemonitors/{baseMonitorName}/amazonrdssqlservers/credentials:
    patch:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateAmazonRdsSqlServerRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAmazonRdsSqlServerRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateAmazonRdsSqlServerRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateAmazonRdsSqlServerRequest'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/_api_basemonitors__baseMonitorName__amazonrdssqlservers_credentials_patch_500_response'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Internal Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AmazonRdsSqlServers
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.AmazonRds.AmazonRdsSqlServersController.UpdateCredentials
  /api/basemonitors/{baseMonitorName}/amazonrdssqlservers/credentials/amazonapi:
    delete:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteAmazonApiCredentialsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAmazonApiCredentialsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteAmazonApiCredentialsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteAmazonApiCredentialsRequest'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AmazonRdsSqlServers
  /api/basemonitors/{baseMonitorName}/amazonrdssqlservers/validate:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddAmazonRdsSqlServerCommandDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AddAmazonRdsSqlServerCommandDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AddAmazonRdsSqlServerCommandDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddAmazonRdsSqlServerCommandDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AmazonRdsSqlServers
  /api/basemonitors/{baseMonitorName}/amazonrdssqlservers/test:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddAmazonRdsSqlServerCommandDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AddAmazonRdsSqlServerCommandDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AddAmazonRdsSqlServerCommandDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddAmazonRdsSqlServerCommandDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AmazonRdsSqlServers
  /api/basemonitors/{baseMonitorName}/amazonrdssqlservers/{amazonRdsSqlServerName}:
    delete:
      parameters:
      - explode: false
        in: path
        name: amazonRdsSqlServerName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AmazonRdsSqlServers
    get:
      parameters:
      - explode: false
        in: path
        name: amazonRdsSqlServerName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AmazonRdsSqlServers
  /api/basemonitors/{baseMonitorName}/amazonrdssqlservers/{instanceName}:
    put:
      parameters:
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AmazonRdsSqlServerDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AmazonRdsSqlServerDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AmazonRdsSqlServerDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AmazonRdsSqlServerDto'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AmazonRdsSqlServers
  /api/annotations:
    delete:
      parameters:
      - explode: true
        in: query
        name: instanceName
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: utcDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Annotations
    get:
      parameters:
      - explode: true
        in: query
        name: instanceName
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: utcDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Annotations
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          text/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        "200":
          description: OK
        "400":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
          description: Bad Request
        "409":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Conflict
      tags:
      - Annotations
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          text/json:
            schema:
              $ref: '#/components/schemas/Annotation'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Annotation'
      responses:
        "200":
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
      tags:
      - Annotations
  /api/annotations/instancenames:
    get:
      operationId: instances
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  type: string
                type: array
            application/json:
              schema:
                items:
                  type: string
                type: array
            text/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
      tags:
      - Annotations
  /api/diagnostics/auth:
    get:
      responses:
        "200":
          description: OK
      tags:
      - AuthDiagnostics
  /api/basemonitors/{baseMonitorName}/authentication/principals:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AuthPrincipalDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AuthPrincipalDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthPrincipalDtoIEnumerableJSendSuccess'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AuthenticationPrincipalApi
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AuthPrincipalDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthPrincipalDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AuthPrincipalDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AuthPrincipalDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AuthPrincipalDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AuthPrincipalDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthPrincipalDtoJSendSuccess'
          description: OK
        "409":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Conflict
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - AuthenticationPrincipalApi
    put:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AuthPrincipalDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthPrincipalDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AuthPrincipalDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AuthPrincipalDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AuthenticationPrincipalApi
  /api/basemonitors/{baseMonitorName}/authentication/principals/{principalName}:
    delete:
      parameters:
      - explode: false
        in: path
        name: principalName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AuthenticationPrincipalApi
    get:
      parameters:
      - explode: false
        in: path
        name: principalName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AuthPrincipalDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AuthPrincipalDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthPrincipalDtoJSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AuthenticationPrincipalApi
  /api/basemonitors/{baseMonitorName}/authentication/principals/{principalName}/testMonitoredObject:
    post:
      parameters:
      - explode: false
        in: path
        name: principalName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AccessRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AccessRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AccessRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccessRequest'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AccessReportJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReportJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AccessReportJSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AuthenticationTestPrincipalApi
  /api/basemonitors/{baseMonitorName}/authentication/principals/{principalName}/testGroup:
    post:
      parameters:
      - explode: false
        in: path
        name: principalName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              format: uuid
              type: string
          application/json:
            schema:
              format: uuid
              type: string
          text/json:
            schema:
              format: uuid
              type: string
          application/*+json:
            schema:
              format: uuid
              type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AccessReportJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AccessReportJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AccessReportJSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AuthenticationTestPrincipalApi
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/availabilitygroups/{agName}/alertsettings/{alertTypeId}:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: agName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AvailabilityGroupAlertSettings
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/availabilitygroups/{agName}/alertsettings/{alertTypeId}/status:
    patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: agName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AvailabilityGroupAlertSettings
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/availabilitygroups/{agName}/alertsettings/{alertTypeId}/comments:
    patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: agName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AvailabilityGroupAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/availabilitygroups/{agName}/alertsettings/{alertTypeId}/notificationsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: agName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AvailabilityGroupAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/availabilitygroups/{agName}/alertsettings/{alertTypeId}/specificsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: agName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AvailabilityGroupAlertSettings
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/availabilitygroups:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AvailabilityGroups
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/availabilitygroups/{availabilityGroupName}:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: availabilityGroupName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AvailabilityGroups
  /api/basemonitors/{baseMonitorName}/cloud-costs/azure:
    get:
      operationId: GetAzureCloudCosts
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: dbmsCir
        required: false
        schema:
          format: entity-id
          type: string
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Forbidden
      tags:
      - AzureCloudCosts
  /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/elasticpools/{elasticPoolName}/alertsettings/{alertTypeId}:
    get:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: elasticPoolName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureElasticPoolAlertSettings
  ? /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/elasticpools/{elasticPoolName}/alertsettings/{alertTypeId}/status
  : patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: elasticPoolName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureElasticPoolAlertSettings
  ? /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/elasticpools/{elasticPoolName}/alertsettings/{alertTypeId}/comments
  : patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: elasticPoolName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureElasticPoolAlertSettings
  ? /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/elasticpools/{elasticPoolName}/alertsettings/{alertTypeId}/notificationsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: elasticPoolName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureElasticPoolAlertSettings
  ? /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/elasticpools/{elasticPoolName}/alertsettings/{alertTypeId}/specificsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: elasticPoolName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureElasticPoolAlertSettings
  /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/elasticpools:
    get:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureElasticPools
  /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/elasticpools/{elasticPoolName}:
    get:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: elasticPoolName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureElasticPools
  /api/basemonitors/{baseMonitorName}/azureflexhosts:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureFlexHost
  /api/basemonitors/{baseMonitorName}/azureflexhosts/{azureFlexHostName}/postgresinstances:
    get:
      parameters:
      - explode: false
        in: path
        name: azureFlexHostName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureFlexHost
  /api/basemonitors/{baseMonitorName}/azureflexhosts/{azureFlexHostName}:
    put:
      parameters:
      - explode: false
        in: path
        name: azureFlexHostName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AzureFlexHostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AzureFlexHostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AzureFlexHostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AzureFlexHostDto'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureFlexHost
  /api/basemonitors/{baseMonitorName}/azuremanagedinstances/{serverName}/alertsettings/{alertTypeId}:
    get:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureManagedInstanceAlertSettings
  /api/basemonitors/{baseMonitorName}/azuremanagedinstances/{serverName}/alertsettings/{alertTypeId}/status:
    patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureManagedInstanceAlertSettings
  /api/basemonitors/{baseMonitorName}/azuremanagedinstances/{serverName}/alertsettings/{alertTypeId}/specificsettings:
    patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureManagedInstanceAlertSettings
  /api/basemonitors/{baseMonitorName}/azuremanagedinstances/{serverName}/alertsettings/{alertTypeId}/comments:
    patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureManagedInstanceAlertSettings
  /api/basemonitors/{baseMonitorName}/azuremanagedinstances/{serverName}/alertsettings/{alertTypeId}/notificationsettings:
    patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureManagedInstanceAlertSettings
  /api/basemonitors/{baseMonitorName}/azuremanagedinstances/{serverName}/databases/{databaseName}/alertsettings/{alertTypeId}:
    get:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureManagedInstanceDatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/azuremanagedinstances/{serverName}/databases/{databaseName}/alertsettings/{alertTypeId}/status
  : patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureManagedInstanceDatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/azuremanagedinstances/{serverName}/databases/{databaseName}/alertsettings/{alertTypeId}/specificsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureManagedInstanceDatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/azuremanagedinstances/{serverName}/databases/{databaseName}/alertsettings/{alertTypeId}/comments
  : patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureManagedInstanceDatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/azuremanagedinstances/{serverName}/databases/{databaseName}/alertsettings/{alertTypeId}/notificationsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureManagedInstanceDatabaseAlertSettings
  /api/basemonitors/{baseMonitorName}/azuremanagedinstances/{serverName}/databases:
    get:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureManagedInstanceDatabases
  /api/basemonitors/{baseMonitorName}/azuremanagedinstances/{serverName}/databases/{databaseName}:
    get:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureManagedInstanceDatabases
  /api/basemonitors/{baseMonitorName}/azuremanagedinstances:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureManagedInstances
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddAzureManagedInstanceCommandDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AddAzureManagedInstanceCommandDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AddAzureManagedInstanceCommandDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddAzureManagedInstanceCommandDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AzureManagedInstanceDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AzureManagedInstanceDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AzureManagedInstanceDtoJSendSuccess'
          description: OK
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "409":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AzureManagedInstances
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.AzureManagedInstance.AzureManagedInstancesController.Create
  /api/basemonitors/{baseMonitorName}/azuremanagedinstances/validate:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddAzureManagedInstanceCommandDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AddAzureManagedInstanceCommandDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AddAzureManagedInstanceCommandDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddAzureManagedInstanceCommandDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureManagedInstances
  /api/basemonitors/{baseMonitorName}/azuremanagedinstances/{azureManagedInstanceName}:
    delete:
      parameters:
      - explode: false
        in: path
        name: azureManagedInstanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureManagedInstances
    get:
      parameters:
      - explode: false
        in: path
        name: azureManagedInstanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureManagedInstances
  /api/basemonitors/{baseMonitorName}/azuremanagedinstances/{instanceName}:
    put:
      parameters:
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AzureManagedInstanceDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AzureManagedInstanceDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AzureManagedInstanceDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AzureManagedInstanceDto'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureManagedInstances
  /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/databases/{databaseName}/alertsettings/{alertTypeId}:
    get:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureSqlDatabaseAlertSettings
  /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/databases/{databaseName}/alertsettings/{alertTypeId}/status:
    patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureSqlDatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/databases/{databaseName}/alertsettings/{alertTypeId}/specificsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureSqlDatabaseAlertSettings
  /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/databases/{databaseName}/alertsettings/{alertTypeId}/comments:
    patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureSqlDatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/databases/{databaseName}/alertsettings/{alertTypeId}/notificationsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureSqlDatabaseAlertSettings
  /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/databases:
    get:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AzureSqlDatabaseDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AzureSqlDatabaseDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AzureSqlDatabaseDtoArrayJSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AzureSqlDatabases
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.AzureSql.AzureSqlDatabasesController.GetFor
    patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateSelectedDatabasesModel'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSelectedDatabasesModel'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateSelectedDatabasesModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateSelectedDatabasesModel'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AzureSqlServers
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.AzureSql.AzureSqlServersController.UpdateSelectedDatabases
  /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/databases/{databaseName}:
    get:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureSqlDatabases
    put:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AzureSqlDatabaseDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AzureSqlDatabaseDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AzureSqlDatabaseDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AzureSqlDatabaseDto'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureSqlDatabases
  /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/alertsettings/{alertTypeId}:
    get:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureSqlServerAlertSettings
  /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/alertsettings/{alertTypeId}/status:
    patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureSqlServerAlertSettings
  /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/alertsettings/{alertTypeId}/specificsettings:
    patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureSqlServerAlertSettings
  /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/alertsettings/{alertTypeId}/comments:
    patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureSqlServerAlertSettings
  /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/alertsettings/{alertTypeId}/notificationsettings:
    patch:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureSqlServerAlertSettings
  /api/basemonitors/{baseMonitorName}/azuresqlservers:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureSqlServers
  /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}:
    get:
      parameters:
      - explode: true
        in: query
        name: azureSqlServerName
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureSqlServers
    put:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AzureSqlServerDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AzureSqlServerDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AzureSqlServerDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AzureSqlServerDto'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - AzureSqlServers
  /api/basemonitors/{baseMonitorName}/azuresqlservers/databases:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SelectDatabasesAzureSqlServerModel'
          application/json:
            schema:
              $ref: '#/components/schemas/SelectDatabasesAzureSqlServerModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SelectDatabasesAzureSqlServerModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SelectDatabasesAzureSqlServerModel'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DetectedAzureSqlDatabaseDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/DetectedAzureSqlDatabaseDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/DetectedAzureSqlDatabaseDtoArrayJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AzureSqlServers
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.AzureSql.AzureSqlServersController.GetAllDatabasesForAzureSqlServer
  /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/fetchDatabases:
    get:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AzureSqlDatabasesDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AzureSqlDatabasesDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AzureSqlDatabasesDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - AzureSqlServers
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.AzureSql.AzureSqlServersController.GetAllDatabasesForExistingAzureSqlServer
  /api/estate/backups:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DatabaseBackupInfoDto'
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseBackupInfoDto'
            text/json:
              schema:
                $ref: '#/components/schemas/DatabaseBackupInfoDto'
          description: OK
      tags:
      - BackupsApi
  /api/estate/backups/history:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                type: string
              type: array
          application/json:
            schema:
              items:
                type: string
              type: array
          text/json:
            schema:
              items:
                type: string
              type: array
          application/*+json:
            schema:
              items:
                type: string
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BackupHistoriesDto'
            application/json:
              schema:
                $ref: '#/components/schemas/BackupHistoriesDto'
            text/json:
              schema:
                $ref: '#/components/schemas/BackupHistoriesDto'
          description: OK
      tags:
      - BackupsApi
  /api/basemonitors/{baseMonitorName}/alertsettings/{alertTypeId}:
    get:
      parameters:
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - BaseMonitorAlertSettings
  /api/basemonitors/{baseMonitorName}/alertsettings/{alertTypeId}/status:
    patch:
      parameters:
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - BaseMonitorAlertSettings
  /api/basemonitors/{baseMonitorName}/alertsettings/{alertTypeId}/comments:
    patch:
      parameters:
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - BaseMonitorAlertSettings
  /api/basemonitors/{baseMonitorName}/alertsettings/{alertTypeId}/notificationsettings:
    patch:
      parameters:
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - BaseMonitorAlertSettings
  /api/basemonitors/{baseMonitorName}/alertsettings/{alertTypeId}/specificsettings:
    patch:
      parameters:
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - BaseMonitorAlertSettings
  /api/basemonitors:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BaseMonitorDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/BaseMonitorDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/BaseMonitorDtoArrayJSendSuccess'
          description: OK
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
      tags:
      - BaseMonitors
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.Infrastructure.BaseMonitorsController.Get
  /api/basemonitors/{baseMonitorName}:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BaseMonitorDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/BaseMonitorDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/BaseMonitorDtoJSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - BaseMonitors
  /api/basemonitors/testconnection:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - BaseMonitors
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.Infrastructure.BaseMonitorsController.TestPrimaryBaseMonitorConnection
  /api/basemonitors/{baseMonitorName}/status:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BaseMonitorModelJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/BaseMonitorModelJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/BaseMonitorModelJSendSuccess'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/_api_basemonitors__baseMonitorName__amazonrdssqlservers_credentials_patch_500_response'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Internal Server Error
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - BaseMonitors
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.Infrastructure.BaseMonitorsController.BaseMonitorInformation
  /api/basemonitors/setprimary:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BaseMonitorPrimaryRequestDto'
          application/json:
            schema:
              $ref: '#/components/schemas/BaseMonitorPrimaryRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/BaseMonitorPrimaryRequestDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BaseMonitorPrimaryRequestDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unauthorized
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
      tags:
      - BaseMonitors
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.Infrastructure.BaseMonitorsController.SetPrimary
  /api/basemonitors/setconfiguration:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BaseMonitorConfigurationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/BaseMonitorConfigurationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/BaseMonitorConfigurationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BaseMonitorConfigurationRequest'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "401":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unauthorized
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
      tags:
      - BaseMonitors
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.Infrastructure.BaseMonitorsController.SetConfiguration
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/alertsettings/{alertTypeId}:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - ClusterAlertSettings
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/alertsettings/{alertTypeId}/status:
    patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - ClusterAlertSettings
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/alertsettings/{alertTypeId}/specificsettings:
    patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - ClusterAlertSettings
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/alertsettings/{alertTypeId}/comments:
    patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - ClusterAlertSettings
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/alertsettings/{alertTypeId}/notificationsettings:
    patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - ClusterAlertSettings
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/alertsettings/{alertTypeId}:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - ClusterMachineAlertSettings
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/alertsettings/{alertTypeId}/status:
    patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - ClusterMachineAlertSettings
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/alertsettings/{alertTypeId}/comments:
    patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - ClusterMachineAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/alertsettings/{alertTypeId}/notificationsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - ClusterMachineAlertSettings
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/alertsettings/{alertTypeId}/specificsettings:
    patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - ClusterMachineAlertSettings
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/disks/{diskName}/alertsettings/{alertTypeId}:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: diskName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - ClusterMachineDiskAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/disks/{diskName}/alertsettings/{alertTypeId}/status
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: diskName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - ClusterMachineDiskAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/disks/{diskName}/alertsettings/{alertTypeId}/comments
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: diskName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - ClusterMachineDiskAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/disks/{diskName}/alertsettings/{alertTypeId}/notificationsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: diskName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - ClusterMachineDiskAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/disks/{diskName}/alertsettings/{alertTypeId}/specificsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: diskName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - ClusterMachineDiskAlertSettings
  /api/basemonitors/{baseMonitorName}/clusters:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Clusters
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Clusters
    put:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ClusterDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ClusterDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClusterDto'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Clusters
  /api/basemonitors/{baseMonitorName}/configurationcompliance/serverconfigurationoptions/{collectionDate}:
    get:
      parameters:
      - explode: false
        in: path
        name: collectionDate
        required: true
        schema:
          format: date-time
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ConfigurationComplianceDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationComplianceDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/ConfigurationComplianceDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigurationComplianceApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Security.Controllers.ConfigurationComplianceApiController.GetServerConfigurationOptions
  /api/basemonitors/{baseMonitorName}/configurationcompliance/databaseconfigurationoptions/{collectionDate}:
    get:
      parameters:
      - explode: false
        in: path
        name: collectionDate
        required: true
        schema:
          format: date-time
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DatabaseConfigurationDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseConfigurationDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/DatabaseConfigurationDtoIEnumerableJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigurationComplianceApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Security.Controllers.ConfigurationComplianceApiController.GetDatabaseConfigurationOptions
  /api/basemonitors/{baseMonitorName}/configurationcompliance/templates:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ConfigurationComplianceTemplateDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationComplianceTemplateDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/ConfigurationComplianceTemplateDtoIEnumerableJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigurationComplianceApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Security.Controllers.ConfigurationComplianceApiController.GetAllConfigurationComplianceTemplates
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ConfigurationComplianceTemplateCreateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationComplianceTemplateCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ConfigurationComplianceTemplateCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ConfigurationComplianceTemplateCreateDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ConfigurationComplianceTemplateDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationComplianceTemplateDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/ConfigurationComplianceTemplateDtoJSendSuccess'
          description: OK
        "409":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Conflict
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigurationComplianceApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Security.Controllers.ConfigurationComplianceApiController.CreateConfigurationComplianceTemplate
  /api/basemonitors/{baseMonitorName}/configurationcompliance/templates/{id}:
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ConfigurationComplianceTemplateCreateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationComplianceTemplateCreateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ConfigurationComplianceTemplateCreateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ConfigurationComplianceTemplateCreateDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ConfigurationComplianceTemplateDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationComplianceTemplateDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/ConfigurationComplianceTemplateDtoJSendSuccess'
          description: OK
        "409":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Conflict
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigurationComplianceApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Security.Controllers.ConfigurationComplianceApiController.CreateOrUpdateConfigurationComplianceTemplate
  /api/basemonitors/{baseMonitorName}/configurationcompliance/templates/{templateId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: templateId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigurationComplianceApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Security.Controllers.ConfigurationComplianceApiController.DeleteConfigurationComplianceTemplate
  /api/configuration/auth/ad:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AuthenticationViewModelJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationViewModelJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthenticationViewModelJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigureAuthenticationApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ConfigureAuthenticationApiController.GetAuthenticationModel
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SwitchToActiveDirectoryNewSettingsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/SwitchToActiveDirectoryNewSettingsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SwitchToActiveDirectoryNewSettingsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SwitchToActiveDirectoryNewSettingsRequest'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigureAuthenticationApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ConfigureAuthenticationApiController.SwitchToActiveDirectoryNewSettings
  /api/configuration/auth/oidc:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OpenIdConnectSettingsDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/OpenIdConnectSettingsDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/OpenIdConnectSettingsDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigureAuthenticationApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ConfigureAuthenticationApiController.GetOpenIdConnectSettings
    put:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/OpenIdConnectSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/OpenIdConnectSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/OpenIdConnectSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OpenIdConnectSettingsDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigureAuthenticationApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ConfigureAuthenticationApiController.SwitchToOpenIdConnect
  /api/configuration/auth:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SwitchAuthenticationTypeDto'
          application/json:
            schema:
              $ref: '#/components/schemas/SwitchAuthenticationTypeDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SwitchAuthenticationTypeDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SwitchAuthenticationTypeDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigureAuthenticationApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ConfigureAuthenticationApiController.SwitchAuthenticationType
  /api/configuration/auth/ad/domain:
    delete:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteDomainConnectionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDomainConnectionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteDomainConnectionRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteDomainConnectionRequest'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigureAuthenticationApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ConfigureAuthenticationApiController.DeleteDomainConnection
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ActiveDirectoryDomainViewModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveDirectoryDomainViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ActiveDirectoryDomainViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ActiveDirectoryDomainViewModel'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigureAuthenticationApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ConfigureAuthenticationApiController.UpsertDomainConnection
  /api/configuration/auth/ad/domain/test:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ActiveDirectoryDomainViewModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ActiveDirectoryDomainViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ActiveDirectoryDomainViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ActiveDirectoryDomainViewModel'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigureAuthenticationApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ConfigureAuthenticationApiController.TestDomainConnection
  /api/configuration/display:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DisplayViewModelJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/DisplayViewModelJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/DisplayViewModelJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigureDisplayApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ConfigureDisplayApiController.GetDisplayModel
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DisplayViewModel'
          application/json:
            schema:
              $ref: '#/components/schemas/DisplayViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/DisplayViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DisplayViewModel'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigureDisplayApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ConfigureDisplayApiController.SaveDisplayModel
  /api/configuration/logging/performance:
    post:
      parameters:
      - explode: true
        in: query
        name: enabledSeconds
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigureLoggingApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ConfigureLoggingApiController.EnablePerformanceLogging
  /api/basemonitors/{baseMonitorName}/configuration/logging:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LogLevelSwitchParamsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/LogLevelSwitchParamsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/LogLevelSwitchParamsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LogLevelSwitchParamsDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigureLoggingApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ConfigureLoggingApiController.EnableLogging
  /api/configuration/logging:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LogLevelSwitchParamsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/LogLevelSwitchParamsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/LogLevelSwitchParamsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LogLevelSwitchParamsDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigureLoggingApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ConfigureLoggingApiController.EnableLoggingAcrossAllBaseMonitors
  /api/basemonitors/{baseMonitorName}/configuration/notification/sendtestemail:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NotificationSettingsDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigureNotificationsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ConfigureNotificationsApiController.SendTestEmail
  /api/basemonitors/{baseMonitorName}/configuration/notification/sendbasemonitorerrortestemail:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/NotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/NotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/NotificationSettingsDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigureNotificationsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ConfigureNotificationsApiController.SendBaseMonitorErrorTestEmail
  /api/basemonitors/{baseMonitorName}/vmwarehosts/{serverName}:
    delete:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigureVirtualizationApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ConfigureVirtualizationApiController.DeleteHost
    post:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/VMwareCredentials'
          application/json:
            schema:
              $ref: '#/components/schemas/VMwareCredentials'
          text/json:
            schema:
              $ref: '#/components/schemas/VMwareCredentials'
          application/*+json:
            schema:
              $ref: '#/components/schemas/VMwareCredentials'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigureVirtualizationApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ConfigureVirtualizationApiController.SaveHost
  /api/basemonitors/{baseMonitorName}/vmwarehosts:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VMServerStatusArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/VMServerStatusArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/VMServerStatusArrayJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ConfigureVirtualizationApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ConfigureVirtualizationApiController.GetHostStatus
  /api/basemonitors/{baseMonitorName}/instances/{cir}/current-activity:
    get:
      parameters:
      - explode: false
        in: path
        name: cir
        required: true
        schema:
          format: entity-id
          type: ChannelInstanceRef
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CurrentActivityDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentActivityDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/CurrentActivityDtoJSendSuccess'
          description: OK
        "504":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendError'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Gateway Timeout
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - CurrentActivity
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.CurrentActivity.CurrentActivityController.GetCurrentActivity
  /api/basemonitors/{baseMonitorName}/configuration/custom-metrics:
    delete:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/IntegerIdentifier'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IntegerIdentifier'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/IntegerIdentifier'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/IntegerIdentifier'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/StringJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/StringJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - CustomMetricsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.CustomMetricsApiController.DeleteMetrics
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomMetricsGridDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomMetricsGridDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomMetricsGridDtoIEnumerableJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - CustomMetricsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.CustomMetricsApiController.Get
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CustomMetricDto'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomMetricDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CustomMetricDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustomMetricDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IntegerIdentifierJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/IntegerIdentifierJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/IntegerIdentifierJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - CustomMetricsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.CustomMetricsApiController.CreateMetric
  /api/basemonitors/{baseMonitorName}/configuration/custom-metrics/alerts:
    delete:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/StringJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/StringJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - CustomMetricsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.CustomMetricsApiController.DeleteAlerts
  /api/basemonitors/{baseMonitorName}/configuration/custom-metrics/enable:
    put:
      parameters:
      - explode: true
        in: query
        name: enable
        required: false
        schema:
          type: boolean
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/IntegerIdentifier'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IntegerIdentifier'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/IntegerIdentifier'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/IntegerIdentifier'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/StringJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/StringJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - CustomMetricsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.CustomMetricsApiController.EnableMetrics
  /api/basemonitors/{baseMonitorName}/configuration/custom-metrics/alerts/enable:
    put:
      parameters:
      - explode: true
        in: query
        name: enable
        required: false
        schema:
          type: boolean
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/IntegerIdentifier'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/IntegerIdentifier'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/IntegerIdentifier'
              type: array
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/IntegerIdentifier'
              type: array
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/StringJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/StringJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - CustomMetricsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.CustomMetricsApiController.EnableAlerts
  /api/basemonitors/{baseMonitorName}/configuration/custom-metrics/monitored-entity-tree:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MonitoredEntityTreeDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoredEntityTreeDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/MonitoredEntityTreeDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - CustomMetricsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.CustomMetricsApiController.GetMonitoredEntities
  /api/basemonitors/{baseMonitorName}/configuration/custom-metrics/databases:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DatabaseDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/DatabaseDtoIEnumerableJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - CustomMetricsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.CustomMetricsApiController.GetDatabases
  /api/basemonitors/{baseMonitorName}/configuration/custom-metrics/test-collection:
    delete:
      parameters:
      - explode: true
        in: query
        name: handle
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - CustomMetricTestCollectionApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.CustomMetricTestCollectionApiController.CancelTestCollection
    get:
      parameters:
      - explode: true
        in: query
        name: handle
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TestCollectionStatusJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/TestCollectionStatusJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/TestCollectionStatusJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - CustomMetricTestCollectionApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.CustomMetricTestCollectionApiController.GetTestCollectionResults
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TestCollectionRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/TestCollectionRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/TestCollectionRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TestCollectionRequest'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GuidJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/GuidJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/GuidJSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - CustomMetricTestCollectionApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.CustomMetricTestCollectionApiController.BeginTestCollection
  /api/basemonitors/{baseMonitorName}/security/dashboard/failedlogins:
    get:
      parameters:
      - explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FailedLoginDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/FailedLoginDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/FailedLoginDtoIEnumerableJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - DashboardApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Security.Controllers.DashboardApiController.GetFailedLogins
  ? /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/databases/{databaseName}/alertsettings/{alertTypeId}
  : get:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - DatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/databases/{databaseName}/alertsettings/{alertTypeId}/status
  : patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - DatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/databases/{databaseName}/alertsettings/{alertTypeId}/specificsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - DatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/databases/{databaseName}/alertsettings/{alertTypeId}/comments
  : patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - DatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/databases/{databaseName}/alertsettings/{alertTypeId}/notificationsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - DatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}/databases/{databaseName}/alertsettings/{alertTypeId}
  : get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - DatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}/databases/{databaseName}/alertsettings/{alertTypeId}/status
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - DatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}/databases/{databaseName}/alertsettings/{alertTypeId}/specificsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - DatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}/databases/{databaseName}/alertsettings/{alertTypeId}/comments
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - DatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}/databases/{databaseName}/alertsettings/{alertTypeId}/notificationsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - DatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/databases/{databaseName}/alertsettings/{alertTypeId}
  : get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - DatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/databases/{databaseName}/alertsettings/{alertTypeId}/status
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - DatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/databases/{databaseName}/alertsettings/{alertTypeId}/specificsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - DatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/databases/{databaseName}/alertsettings/{alertTypeId}/comments
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - DatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/databases/{databaseName}/alertsettings/{alertTypeId}/notificationsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - DatabaseAlertSettings
  /api/estate/configuration-options/GetDatabaseRefsForComparison:
    get:
      operationId: GetDatabaseRefsForComparison
      parameters:
      - explode: true
        in: query
        name: cir
        required: false
        schema:
          format: entity-id
          type: string
        style: form
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Forbidden
      tags:
      - DatabaseConfigurationOptionsApi
  /api/estate/configuration-options/GetServerInstanceRefsForComparison:
    get:
      operationId: GetServerInstanceRefsForComparison
      responses:
        "200":
          description: OK
      tags:
      - DatabaseConfigurationOptionsApi
  /api/basemonitors/{baseMonitorName}/estate/configuration-options/GetDatabaseConfigurationOptions:
    get:
      operationId: GetDatabaseConfigurationOptions
      parameters:
      - explode: true
        in: query
        name: databaseCir
        required: false
        schema:
          format: entity-id
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Forbidden
      tags:
      - DatabaseConfigurationOptionsApi
  /api/estate/configuration-options/GetDatabaseConfigurationOptionsMetadata:
    get:
      operationId: GetDatabaseConfigurationOptionsMetadata
      responses:
        "200":
          description: OK
      tags:
      - DatabaseConfigurationOptionsApi
  /api/estate/configuration-options/GetAllDatabaseConfigurationOptions:
    get:
      operationId: GetAllDatabaseConfigurationOptions
      responses:
        "200":
          description: OK
      tags:
      - DatabaseConfigurationOptionsApi
  /api/diagnostics/getDatabaseTimings:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DatabaseDiagnosticsDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseDiagnosticsDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/DatabaseDiagnosticsDtoArrayJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - DatabaseDiagnosticsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Diagnostics.Controllers.DatabaseDiagnosticsApiController.GetDatabaseTimings
  /api/basemonitors/{baseMonitorName}/diagnostics/getDataTableSizes:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DataTableSizeDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/DataTableSizeDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/DataTableSizeDtoArrayJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - DatabaseDiagnosticsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Diagnostics.Controllers.DatabaseDiagnosticsApiController.GetDataTableSizes
  /api/basemonitors/{baseMonitorName}/database-permissions-summary/v2/{runDate}:
    get:
      parameters:
      - explode: false
        in: path
        name: runDate
        required: true
        schema:
          format: date-time
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OldDatabasePermissionsDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/OldDatabasePermissionsDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/OldDatabasePermissionsDtoIEnumerableJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - DatabasePermissions
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Security.Controllers.DatabasePermissionsController.GetDatabasePermissionSummaryAsync
  /api/basemonitors/{baseMonitorName}/database-permissions/v2/{cir}/{databaseName}/{runDate}:
    get:
      parameters:
      - explode: false
        in: path
        name: cir
        required: true
        schema:
          $ref: '#/components/schemas/_SqlInstanceChannelInstanceRef'
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: runDate
        required: true
        schema:
          format: date-time
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OldDatabasePermissionsDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/OldDatabasePermissionsDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/OldDatabasePermissionsDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - DatabasePermissions
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Security.Controllers.DatabasePermissionsController.GetDatabasePermissionsAsync
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/databases:
    get:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Databases
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/databases/{databaseName}:
    get:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Databases
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/databases:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Databases
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/databases/{databaseName}:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Databases
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}/databases:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Databases
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}/databases/{databaseName}
  : get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Databases
  /api/basemonitors/{baseMonitorName}/dbmsoverview/status:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: dbmsCir
        required: true
        schema:
          format: entity-id
          type: ChannelInstanceRef
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServerOverviewStatusModelDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerOverviewStatusModelDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/ServerOverviewStatusModelDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - DbmsOverviewApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.SharedOverview.DbmsOverviewApiController.GetStatus
  /api/diagnostics/threadPool:
    get:
      responses:
        "200":
          description: OK
      tags:
      - DiagnosticsApi
  /api/basemonitors/{baseMonitorName}/diagnostics/tasks:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TaskQueueStatsJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/TaskQueueStatsJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/TaskQueueStatsJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - DiagnosticsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Diagnostics.Controllers.DiagnosticsApiController.GetTaskDiagnostics
  /api/diagnostics/user:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AuthenticatedUserDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatedUserDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthenticatedUserDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - DiagnosticsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Diagnostics.Controllers.DiagnosticsApiController.GetUser
  /api/basemonitors/{baseMonitorName}/diagnostics/threadPool:
    get:
      parameters:
      - explode: true
        in: query
        name: minThreads
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - DiagnosticsApi
  /api/basemonitors/{baseMonitorName}/discovery:
    get:
      operationId: GetDiscoveryResult
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DiscoveryResultDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/DiscoveryResultDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/DiscoveryResultDtoJSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Unit'
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
            text/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - DiscoveryApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.Discovery.DiscoveryApiController.GetDiscoveryResult
  /api/basemonitors/{baseMonitorName}/discovery/getrds:
    post:
      operationId: GetRdsDetectionResult
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RdsDetectionOptionsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/RdsDetectionOptionsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/RdsDetectionOptionsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RdsDetectionOptionsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - DiscoveryApi
  /api/basemonitors/{baseMonitorName}/discovery/getazure:
    post:
      operationId: GetAzureDetectionResult
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AzureDetectionOptionsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AzureDetectionOptionsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AzureDetectionOptionsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AzureDetectionOptionsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - DiscoveryApi
  /api/basemonitors/{baseMonitorName}/discovery/start:
    post:
      operationId: StartDiscovery
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DiscoveryOptionsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoveryOptionsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/DiscoveryOptionsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DiscoveryOptionsDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Unit'
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
            text/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - DiscoveryApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.Discovery.DiscoveryApiController.StartDiscovery
  /api/basemonitors/{baseMonitorName}/discovery/cancel:
    post:
      operationId: CancelDiscovery
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Unit'
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
            text/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - DiscoveryApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.Discovery.DiscoveryApiController.CancelDiscovery
  /api/basemonitors/{baseMonitorName}/discovery/download:
    get:
      operationId: DownloadDiscovery
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - DiscoveryApi
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/disks:
    get:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Disks
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/disks/{diskName}:
    get:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: diskName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Disks
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/disks:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Disks
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/disks/{diskName}:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: diskName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Disks
  /api/estate/disk-usage-details:
    get:
      parameters:
      - explode: true
        in: query
        name: diskCir
        required: false
        schema:
          format: entity-id
          type: ChannelInstanceRef
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DatabaseFileUsageViewModelJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseFileUsageViewModelJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/DatabaseFileUsageViewModelJSendSuccess'
          description: OK
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - DiskUsageDetailsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Estate.Controllers.DiskUsageDetailsApiController.GetDatabaseFileUsage
  /api/monitoredservers/duplicates:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DuplicateMonitoredEntityWarningDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/DuplicateMonitoredEntityWarningDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/DuplicateMonitoredEntityWarningDtoArrayJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - DuplicateMonitoredEntitiesWarning
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.DuplicateMonitoredEntitiesWarningController.GetDuplicatesWarning
  /api/basemonitors/{baseMonitorName}/dbms/{dbmsCir}/errorlog:
    get:
      parameters:
      - explode: false
        in: path
        name: dbmsCir
        required: true
        schema:
          $ref: '#/components/schemas/_SqlInstanceChannelInstanceRef'
        style: simple
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServerOverviewErrorLogModelJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerOverviewErrorLogModelJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/ServerOverviewErrorLogModelJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ErrorLog
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Controllers.ErrorLogController.Index
  /api/diagnostics/errorReporting/test:
    get:
      responses:
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Unit'
            application/json:
              schema:
                $ref: '#/components/schemas/_api_diagnostics_errorReporting_test_get_500_response'
            text/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ErrorReporting
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Diagnostics.Controllers.ErrorReportingController.TestErrorReporting
  /api/diagnostics/errorReporting/test/jsenderror:
    get:
      responses:
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/_api_basemonitors__baseMonitorName__amazonrdssqlservers_credentials_patch_500_response'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ErrorReporting
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Diagnostics.Controllers.ErrorReportingController.TestJSendError
  /api/diagnostics/errorReporting/enable:
    post:
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - ErrorReporting
  /api/diagnostics/errorReporting/status:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ErrorReportingStatusDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorReportingStatusDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/ErrorReportingStatusDtoJSendSuccess'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - ErrorReporting
  /api/diagnostics/errorReporting/disable:
    post:
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - ErrorReporting
  /api/estate/hide-jobs-page:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - EstatesSettings
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Estate.Controllers.EstatesSettingsController.GetHideJobsPage
  /api/featureflags:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FeatureFlagBooleanDictionaryJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagBooleanDictionaryJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagBooleanDictionaryJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - FeatureFlags
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.FeatureFlags.FeatureFlagsController.GetFlags
  /api/basemonitors/{baseMonitorName}/featureflags:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FeatureFlagBooleanDictionaryJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagBooleanDictionaryJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/FeatureFlagBooleanDictionaryJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - FeatureFlags
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.FeatureFlags.FeatureFlagsController.GetBaseMonitorFlags
  /api/basemonitors/{baseMonitorName}/sqlinstances/{cir}/cpu-alert-forecast:
    get:
      parameters:
      - explode: false
        in: path
        name: cir
        required: true
        schema:
          format: group-or-entity-id
          type: GroupOrCir
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DoubleArrayIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleArrayIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/DoubleArrayIEnumerableJSendSuccess'
          description: OK
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - Forecast
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MachineLearning.ForecastController.GetCpuAlertForecast
  /api/feature-usage/{eventName}:
    post:
      parameters:
      - explode: false
        in: path
        name: eventName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema: {}
          application/json:
            schema: {}
          text/json:
            schema: {}
          application/*+json:
            schema: {}
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
          description: OK
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - Fur
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.Infrastructure.FurController.ReportFeatureUsage
  /api/feedback/{subject}/{feedback}:
    post:
      parameters:
      - explode: false
        in: path
        name: subject
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: feedback
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Fur
  /api/basemonitors/{baseMonitorName}/globaldashboard:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GlobalDashboardViewModelJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalDashboardViewModelJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/GlobalDashboardViewModelJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - GlobalDashboardApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Controllers.GlobalDashboardApiController.GetDashboardModel
  /api/globaldashboard/alerts/stagnant/clear:
    post:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - GlobalDashboardApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Controllers.GlobalDashboardApiController.ClearStagnantAlerts
  /api/globaldashboard/alerts/stagnant:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Int32JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/Int32JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/Int32JSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - GlobalDashboardApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Controllers.GlobalDashboardApiController.GetStagnantAlertCount
  /api/globaldashboard:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GlobalDashboardViewModelJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalDashboardViewModelJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/GlobalDashboardViewModelJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - GlobalDashboardApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Controllers.GlobalDashboardApiController.GetDashboardModelForAllBaseMonitors
  /api/globaldashboard/alerts:
    get:
      parameters:
      - explode: true
        in: query
        name: timeWindowMinutes
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: group
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlertSummaryViewModelJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSummaryViewModelJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertSummaryViewModelJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - GlobalDashboardApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Controllers.GlobalDashboardApiController.GetAlertsModel
  /api/basemonitors/{baseMonitorName}/globaldashboard/monitoredentitymetricdata:
    get:
      parameters:
      - explode: true
        in: query
        name: cir
        required: true
        schema:
          format: entity-id
          type: ChannelInstanceRef
        style: form
      - explode: true
        in: query
        name: type
        required: true
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DoubleNullableArrayIEnumerableArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleNullableArrayIEnumerableArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/DoubleNullableArrayIEnumerableArrayJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - GlobalDashboardMetricsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Controllers.GlobalDashboardMetricsApiController.MonitoredEntityMetricData
  /api/basemonitors/{baseMonitorName}/groups/{groupId}/alertsettings/{alertTypeId}:
    get:
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - GroupAlertSettings
  /api/basemonitors/{baseMonitorName}/groups/{groupId}/alertsettings/{alertTypeId}/status:
    patch:
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - GroupAlertSettings
  /api/basemonitors/{baseMonitorName}/groups/{groupId}/alertsettings/{alertTypeId}/specificsettings:
    patch:
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - GroupAlertSettings
  /api/basemonitors/{baseMonitorName}/groups/{groupId}/alertsettings/{alertTypeId}/comments:
    patch:
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - GroupAlertSettings
  /api/basemonitors/{baseMonitorName}/groups/{groupId}/alertsettings/{alertTypeId}/notificationsettings:
    patch:
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - GroupAlertSettings
  /api/basemonitors/{baseMonitorName}/mainGroups:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Groups
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Groups
  /api/basemonitors/{baseMonitorName}/groups:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Groups
  /api/basemonitors/{baseMonitorName}/groups/{groupName}:
    get:
      parameters:
      - explode: false
        in: path
        name: groupName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Groups
  /api/basemonitors/{baseMonitorName}/groups/{groupId}/groups:
    get:
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Groups
  /api/basemonitors/{baseMonitorName}/groups/{parentGroupId}/groups:
    post:
      parameters:
      - explode: false
        in: path
        name: parentGroupId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Groups
  /api/basemonitors/{baseMonitorName}/groups/{groupId}:
    delete:
      parameters:
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Groups
  /api/basemonitors/{baseMonitorName}/indexes:
    get:
      parameters:
      - explode: true
        in: query
        name: cir
        required: false
        schema:
          $ref: '#/components/schemas/_SqlInstanceChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IndexTableDataDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/IndexTableDataDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/IndexTableDataDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - Indexes
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.Indexes.IndexesController.Get
  /api/basemonitors/{baseMonitorName}/indexes/details:
    get:
      parameters:
      - explode: true
        in: query
        name: cir
        required: false
        schema:
          $ref: '#/components/schemas/_SqlInstance_IndexesChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IndexDetailsDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/IndexDetailsDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/IndexDetailsDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - Indexes
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.Indexes.IndexesController.Get
  /api/basemonitors/{baseMonitorName}/indexes/columns:
    get:
      parameters:
      - explode: true
        in: query
        name: cir
        required: false
        schema:
          $ref: '#/components/schemas/_SqlInstance_IndexesChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IndexColumnDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/IndexColumnDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/IndexColumnDtoIEnumerableJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - Indexes
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.Indexes.IndexesController.GetColumns
  /api/basemonitors/{baseMonitorName}/indexes/usage:
    get:
      parameters:
      - explode: true
        in: query
        name: cir
        required: false
        schema:
          $ref: '#/components/schemas/_SqlInstance_IndexesChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IndexUsageDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/IndexUsageDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/IndexUsageDtoIEnumerableJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - Indexes
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.Indexes.IndexesController.GetUsage
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/alertsettings/{alertTypeId}:
    get:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - InstanceAlertSettings
  ? /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/alertsettings/{alertTypeId}/status
  : patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - InstanceAlertSettings
  ? /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/alertsettings/{alertTypeId}/specificsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - InstanceAlertSettings
  ? /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/alertsettings/{alertTypeId}/comments
  : patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - InstanceAlertSettings
  ? /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/alertsettings/{alertTypeId}/notificationsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - InstanceAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}/alertsettings/{alertTypeId}
  : get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - InstanceAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}/alertsettings/{alertTypeId}/status
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - InstanceAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}/alertsettings/{alertTypeId}/specificsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - InstanceAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}/alertsettings/{alertTypeId}/comments
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - InstanceAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}/alertsettings/{alertTypeId}/notificationsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - InstanceAlertSettings
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/alertsettings/{alertTypeId}:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - InstanceAlertSettings
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/alertsettings/{alertTypeId}/status:
    patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - InstanceAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/alertsettings/{alertTypeId}/specificsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - InstanceAlertSettings
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/alertsettings/{alertTypeId}/comments:
    patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - InstanceAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/alertsettings/{alertTypeId}/notificationsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - InstanceAlertSettings
  /api/basemonitors/{baseMonitorName}/instances:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Instances
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances:
    get:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Instances
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}:
    get:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Instances
    put:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/MachineInstanceDto'
          application/json:
            schema:
              $ref: '#/components/schemas/MachineInstanceDto'
          text/json:
            schema:
              $ref: '#/components/schemas/MachineInstanceDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MachineInstanceDto'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Instances
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Instances
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Instances
    put:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ClusterInstanceDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterInstanceDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ClusterInstanceDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClusterInstanceDto'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Instances
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Instances
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Instances
    put:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/MachineInstanceDto'
          application/json:
            schema:
              $ref: '#/components/schemas/MachineInstanceDto'
          text/json:
            schema:
              $ref: '#/components/schemas/MachineInstanceDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MachineInstanceDto'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Instances
  ? /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/jobs/{jobName}/alertsettings/{alertTypeId}
  : get:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - JobAlertSettings
  ? /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/jobs/{jobName}/alertsettings/{alertTypeId}/status
  : patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - JobAlertSettings
  ? /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/jobs/{jobName}/alertsettings/{alertTypeId}/comments
  : patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - JobAlertSettings
  ? /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/jobs/{jobName}/alertsettings/{alertTypeId}/notificationsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - JobAlertSettings
  ? /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/jobs/{jobName}/alertsettings/{alertTypeId}/specificsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - JobAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}/jobs/{jobName}/alertsettings/{alertTypeId}
  : get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - JobAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}/jobs/{jobName}/alertsettings/{alertTypeId}/status
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - JobAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}/jobs/{jobName}/alertsettings/{alertTypeId}/comments
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - JobAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}/jobs/{jobName}/alertsettings/{alertTypeId}/notificationsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - JobAlertSettings
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/jobs/{jobName}/alertsettings/{alertTypeId}:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - JobAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/jobs/{jobName}/alertsettings/{alertTypeId}/status
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - JobAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/jobs/{jobName}/alertsettings/{alertTypeId}/comments
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - JobAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/jobs/{jobName}/alertsettings/{alertTypeId}/notificationsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - JobAlertSettings
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/jobs/{jobName}/alertsettings/{alertTypeId}/specificsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - JobAlertSettings
  ? /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{instanceName}/jobs/{jobName}/alertsettings/{alertTypeId}/specificsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - JobAlertSettings
  ? /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{instanceName}/jobs/{jobName}/alertsettings/{alertTypeId}/comments
  : patch:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - JobAlertSettings
  ? /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{instanceName}/jobs/{jobName}/alertsettings/{alertTypeId}
  : get:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - JobAlertSettings
  ? /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{instanceName}/jobs/{jobName}/alertsettings/{alertTypeId}/status
  : patch:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - JobAlertSettings
  ? /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{instanceName}/jobs/{jobName}/alertsettings/{alertTypeId}/notificationsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - JobAlertSettings
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/jobs:
    get:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Jobs
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/jobs/{jobName}:
    get:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Jobs
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/jobs:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Jobs
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/jobs/{jobName}:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Jobs
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}/jobs:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Jobs
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}/jobs/{jobName}:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Jobs
  /api/estate/jobs:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JobFilterInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/JobFilterInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/JobFilterInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JobFilterInfo'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JobsViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/JobsViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/JobsViewModel'
          description: OK
      tags:
      - JobsApi
  /api/estate/jobs/history:
    get:
      parameters:
      - explode: true
        in: query
        name: daysHistory
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: baseMonitorName
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: jobCir
        required: false
        schema:
          $ref: '#/components/schemas/_SqlInstance_Agent_JobChannelInstanceRef'
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                items:
                  $ref: '#/components/schemas/JobHistoryViewModel'
                type: array
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/JobHistoryViewModel'
                type: array
            text/json:
              schema:
                items:
                  $ref: '#/components/schemas/JobHistoryViewModel'
                type: array
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - JobsApi
  /api/licencedfeatureflags:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LicencedFeatureFlagJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/LicencedFeatureFlagJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/LicencedFeatureFlagJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - LicencedFeatureFlags
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.Licencing.LicencedFeatureFlagsController.GetFlags
  /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/alertsettings/{alertTypeId}:
    get:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - LinuxMachineAlertSettings
  /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/alertsettings/{alertTypeId}/status:
    patch:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - LinuxMachineAlertSettings
  /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/alertsettings/{alertTypeId}/comments:
    patch:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - LinuxMachineAlertSettings
  /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/alertsettings/{alertTypeId}/notificationsettings:
    patch:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - LinuxMachineAlertSettings
  /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/alertsettings/{alertTypeId}/specificsettings:
    patch:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - LinuxMachineAlertSettings
  /api/basemonitors/{baseMonitorName}/linuxmachines/{machineName}/disks/{diskName}/alertsettings/{alertTypeId}:
    get:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: diskName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - LinuxMachineDiskAlertSettings
  /api/basemonitors/{baseMonitorName}/linuxmachines/{machineName}/disks/{diskName}/alertsettings/{alertTypeId}/status:
    patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: diskName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - LinuxMachineDiskAlertSettings
  /api/basemonitors/{baseMonitorName}/linuxmachines/{machineName}/disks/{diskName}/alertsettings/{alertTypeId}/comments:
    patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: diskName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - LinuxMachineDiskAlertSettings
  ? /api/basemonitors/{baseMonitorName}/linuxmachines/{machineName}/disks/{diskName}/alertsettings/{alertTypeId}/notificationsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: diskName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - LinuxMachineDiskAlertSettings
  /api/basemonitors/{baseMonitorName}/linuxmachines/{machineName}/disks/{diskName}/alertsettings/{alertTypeId}/specificsettings:
    patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: diskName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - LinuxMachineDiskAlertSettings
  /api/basemonitors/{baseMonitorName}/linuxmachines:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - LinuxMachines
  /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}:
    delete:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - LinuxMachines
    get:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - LinuxMachines
    put:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/LinuxMachineDto'
          application/json:
            schema:
              $ref: '#/components/schemas/LinuxMachineDto'
          text/json:
            schema:
              $ref: '#/components/schemas/LinuxMachineDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LinuxMachineDto'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - LinuxMachines
  /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances:
    get:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - LinuxMachines
  /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/postgresinstances:
    get:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - LinuxMachines
  /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{instanceName}:
    put:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/HostedSqlServerInstanceDto'
          application/json:
            schema:
              $ref: '#/components/schemas/HostedSqlServerInstanceDto'
          text/json:
            schema:
              $ref: '#/components/schemas/HostedSqlServerInstanceDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/HostedSqlServerInstanceDto'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - LinuxMachines
  /api/basemonitors/{baseMonitorName}/linuxmachines/{machineName}/disks:
    get:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - LinuxMachinesDisks
  /api/basemonitors/{baseMonitorName}/linuxmachines/{machineName}/disks/{diskName}:
    get:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: diskName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - LinuxMachinesDisks
  /api/basemonitors/{baseMonitorName}/standalonemachines:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Machines
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}:
    get:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Machines
    put:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/StandaloneMachineDto'
          application/json:
            schema:
              $ref: '#/components/schemas/StandaloneMachineDto'
          text/json:
            schema:
              $ref: '#/components/schemas/StandaloneMachineDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/StandaloneMachineDto'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Machines
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Machines
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Machines
  /api/basemonitors/{baseMonitorName}/azuretenants:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AzureTenantDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AzureTenantDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AzureTenantDtoArrayJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ManageAzureTenantApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ManageAzureTenantApiController.GetAll
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateAzureTenantDto'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAzureTenantDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateAzureTenantDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateAzureTenantDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/_api_basemonitors__baseMonitorName__amazonrdssqlservers_credentials_patch_500_response'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Internal Server Error
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "409":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Conflict
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ManageAzureTenantApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ManageAzureTenantApiController.Add
  /api/basemonitors/{baseMonitorName}/azuretenants/test:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateAzureTenantDto'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAzureTenantDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateAzureTenantDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateAzureTenantDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CloudServiceTestConnectionResultDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/CloudServiceTestConnectionResultDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/CloudServiceTestConnectionResultDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ManageAzureTenantApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ManageAzureTenantApiController.Test
  /api/basemonitors/{baseMonitorName}/azuretenants/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/_api_basemonitors__baseMonitorName__amazonrdssqlservers_credentials_patch_500_response'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ManageAzureTenantApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ManageAzureTenantApiController.Delete
  /api/basemonitors/{baseMonitorName}/monitoredservers/retry:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RetryEntityRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/RetryEntityRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/RetryEntityRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RetryEntityRequest'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/_api_basemonitors__baseMonitorName__amazonrdssqlservers_credentials_patch_500_response'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ManageMonitoredEntitiesApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ManageMonitoredEntitiesApiController.RetryEntity
  /api/basemonitors/{baseMonitorName}/monitoredservers/suspend:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SuspendEntityRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/SuspendEntityRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SuspendEntityRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SuspendEntityRequest'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/_api_basemonitors__baseMonitorName__amazonrdssqlservers_credentials_patch_500_response'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ManageMonitoredEntitiesApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ManageMonitoredEntitiesApiController.SuspendEntity
  /api/basemonitors/{baseMonitorName}/monitoredservers/remove:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RemoveEntityRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveEntityRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/RemoveEntityRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RemoveEntityRequest'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/_api_basemonitors__baseMonitorName__amazonrdssqlservers_credentials_patch_500_response'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ManageMonitoredEntitiesApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ManageMonitoredEntitiesApiController.RemoveEntity
  /api/basemonitors/{baseMonitorName}/monitoredservers/removeinstance:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/RemoveUninstalledInstanceRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveUninstalledInstanceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/RemoveUninstalledInstanceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RemoveUninstalledInstanceRequest'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/_api_basemonitors__baseMonitorName__amazonrdssqlservers_credentials_patch_500_response'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ManageMonitoredEntitiesApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ManageMonitoredEntitiesApiController.RemoveUninstalledInstance
  /api/basemonitors/{baseMonitorName}/monitoredservers/sqlservers:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddSqlServerRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AddSqlServerRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AddSqlServerRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddSqlServerRequest'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/_api_basemonitors__baseMonitorName__amazonrdssqlservers_credentials_patch_500_response'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Internal Server Error
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "409":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Conflict
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ManageMonitoredEntitiesApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ManageMonitoredEntitiesApiController.AddSqlServer
  /api/basemonitors/{baseMonitorName}/monitoredservers:
    delete:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteSqlServerModel'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSqlServerModel'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteSqlServerModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteSqlServerModel'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ManageEntityViewModelArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/ManageEntityViewModelArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/ManageEntityViewModelArrayJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ManageMonitoredEntitiesApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ManageMonitoredEntitiesApiController.EntitiesData
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddSqlServerByTypeModel'
          application/json:
            schema:
              $ref: '#/components/schemas/AddSqlServerByTypeModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AddSqlServerByTypeModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddSqlServerByTypeModel'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/monitoredservers/editcredentials:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SentEditCredentialsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/SentEditCredentialsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SentEditCredentialsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SentEditCredentialsRequest'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/_api_basemonitors__baseMonitorName__amazonrdssqlservers_credentials_patch_500_response'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ManageMonitoredEntitiesApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ManageMonitoredEntitiesApiController.EditCredentials
  /api/basemonitors/{baseMonitorName}/sshkeys:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SshPrivateKeyDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/SshPrivateKeyDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/SshPrivateKeyDtoArrayJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ManageSshKeysApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ManageSshKeysApiController.GetAll
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreateSshPrivateKeyCommandDto'
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSshPrivateKeyCommandDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateSshPrivateKeyCommandDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateSshPrivateKeyCommandDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/_api_basemonitors__baseMonitorName__amazonrdssqlservers_credentials_patch_500_response'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ManageSshKeysApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ManageSshKeysApiController.Add
  /api/basemonitors/{baseMonitorName}/sshkeys/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/_api_basemonitors__baseMonitorName__amazonrdssqlservers_credentials_patch_500_response'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ManageSshKeysApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ManageSshKeysApiController.Delete
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SshPrivateKeyDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/SshPrivateKeyDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/SshPrivateKeyDtoJSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ManageSshKeysApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ManageSshKeysApiController.GetById
  /api/users/principals:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PrincipalDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/PrincipalDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/PrincipalDtoArrayJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ManageUsersApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ManageUsersApiController.GetPrincipals
  /api/users/principals/{principalName}:
    delete:
      parameters:
      - explode: false
        in: path
        name: principalName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ManageUsersApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ManageUsersApiController.DeletePrincipal
  /api/users/addEditPrincipal:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PrincipalEditorDto'
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalEditorDto'
          text/json:
            schema:
              $ref: '#/components/schemas/PrincipalEditorDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PrincipalEditorDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendSuccess'
          description: OK
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ManageUsersApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ManageUsersApiController.AddEditPrincipal
  /api/users/principaleditor:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PrincipalDto'
          application/json:
            schema:
              $ref: '#/components/schemas/PrincipalDto'
          text/json:
            schema:
              $ref: '#/components/schemas/PrincipalDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PrincipalDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PrincipalEditorDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/PrincipalEditorDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/PrincipalEditorDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ManageUsersApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.ManageUsersApiController.GetPrincipalEditorViewModel
  /api/basemonitors/{baseMonitorName}/microsoftentraids:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MicrosoftEntraId
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddMicrosoftEntraIdRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AddMicrosoftEntraIdRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AddMicrosoftEntraIdRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddMicrosoftEntraIdRequest'
      responses:
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "409":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Conflict
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AddMicrosoftEntraIdResultJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AddMicrosoftEntraIdResultJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AddMicrosoftEntraIdResultJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - MicrosoftEntraId
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.MicrosoftEntra.MicrosoftEntraIdController.Post
  /api/basemonitors/{baseMonitorName}/microsoftentraids/{id}:
    delete:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MicrosoftEntraId
    get:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MicrosoftEntraId
    put:
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/MicrosoftEntraIdDto'
          application/json:
            schema:
              $ref: '#/components/schemas/MicrosoftEntraIdDto'
          text/json:
            schema:
              $ref: '#/components/schemas/MicrosoftEntraIdDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MicrosoftEntraIdDto'
      responses:
        "409":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Conflict
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "204":
          description: No Content
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MicrosoftEntraId
  /api/basemonitors/{baseMonitorName}/microsoftentraids/test:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddMicrosoftEntraIdRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AddMicrosoftEntraIdRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AddMicrosoftEntraIdRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddMicrosoftEntraIdRequest'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MicrosoftEntraId
  /api/basemonitors/{baseMonitorName}/missing-prerequisites:
    get:
      parameters:
      - explode: true
        in: query
        name: instanceCir
        required: false
        schema:
          format: entity-id
          type: string
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Forbidden
      tags:
      - MissingPrerequisites
  /api/basemonitors/{baseMonitorName}/MongoDbErrorLog/GetErrorLogs:
    get:
      parameters:
      - explode: true
        in: query
        name: dbmsCir
        required: false
        schema:
          $ref: '#/components/schemas/MongoDbInstanceChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServerOverviewMongoDbErrorLogDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerOverviewMongoDbErrorLogDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/ServerOverviewMongoDbErrorLogDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - MongoDbErrorLog
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.MongoDb.MongoDbErrorLogController.GetErrorLogs
  /api/basemonitors/{baseMonitorName}/monitoredentities/{cir}/log:
    get:
      parameters:
      - explode: false
        in: path
        name: cir
        required: true
        schema:
          format: entity-id
          type: ChannelInstanceRef
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MonitoredEntityDetailsModelDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoredEntityDetailsModelDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/MonitoredEntityDetailsModelDtoJSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - MonitoredEntityDetailsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Configuration.Controllers.MonitoredEntityDetailsApiController.GetMonitoredEntitiesLog
  /api/basemonitors/{baseMonitorName}/monitored-entity-info:
    get:
      parameters:
      - explode: true
        in: query
        name: runDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MonitoredEntityInfoDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoredEntityInfoDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/MonitoredEntityInfoDtoIEnumerableJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - MonitoredEntityInfo
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.MonitoredEntityInfoController.GetMonitoredEntityInfo
  /api/basemonitors/{baseMonitorName}/mongodbinstances:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddMongoDbInstanceRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AddMongoDbInstanceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AddMongoDbInstanceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddMongoDbInstanceRequest'
      responses:
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "409":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Conflict
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AddInstanceResultJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AddInstanceResultJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AddInstanceResultJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - MonitoredMongoDbInstances
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.MongoDb.MonitoredMongoDbInstancesController.Post
  /api/basemonitors/{baseMonitorName}/mysqlinstances:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddMySqlInstanceRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AddMySqlInstanceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AddMySqlInstanceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddMySqlInstanceRequest'
      responses:
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "409":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Conflict
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AddInstanceResultJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AddInstanceResultJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AddInstanceResultJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - MonitoredMySqlInstances
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.MySql.MonitoredMySqlInstancesController.Post
  /api/basemonitors/{baseMonitorName}/oracleinstances:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddOracleInstanceRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AddOracleInstanceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AddOracleInstanceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddOracleInstanceRequest'
      responses:
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "409":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Conflict
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AddInstanceResultJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AddInstanceResultJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AddInstanceResultJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - MonitoredOracleInstances
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.Oracle.MonitoredOracleInstancesController.Post
  /api/basemonitors/{baseMonitorName}/postgresinstances:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AddPostgresInstanceRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AddPostgresInstanceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AddPostgresInstanceRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddPostgresInstanceRequest'
      responses:
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "409":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Conflict
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AddPostgresInstanceResultJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AddPostgresInstanceResultJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AddPostgresInstanceResultJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - MonitoredPostgresInstances
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.Postgres.MonitoredPostgresInstancesController.Post
  /api/basemonitors/{baseMonitorName}/postgresinstances/{instanceName}:
    put:
      parameters:
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PostgresServerAliasUpdateDto'
          application/json:
            schema:
              $ref: '#/components/schemas/PostgresServerAliasUpdateDto'
          text/json:
            schema:
              $ref: '#/components/schemas/PostgresServerAliasUpdateDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PostgresServerAliasUpdateDto'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredPostgresInstances
  /api/basemonitors/{baseMonitorName}/monitoredserverscluster/credentials:
    put:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ClusterCredentialsModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterCredentialsModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ClusterCredentialsModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ClusterCredentialsModel'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/monitoredservers/sqlserver/credentials:
    put:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SqlServerInstanceCredentialsModel'
          application/json:
            schema:
              $ref: '#/components/schemas/SqlServerInstanceCredentialsModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SqlServerInstanceCredentialsModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SqlServerInstanceCredentialsModel'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/monitoredservers/status:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/monitoredservers/status:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/monitoredservers/status:
    get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}/monitoredservers/status
  : get:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/monitoredservers/status:
    get:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/monitoredservers/status:
    get:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/monitoredservers/status:
    get:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/databases/{databaseName}/monitoredservers/status:
    get:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/azuremanagedinstances/{instanceName}/monitoredservers/status:
    get:
      parameters:
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/amazonrdssqlservers/{serverName}/monitoredservers/status:
    get:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/linuxmachines/{machineName}/monitoredservers/status:
    get:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/linuxmachines/{machineName}/instances/{sqlInstanceName}/monitoredservers/status:
    get:
      parameters:
      - explode: false
        in: path
        name: sqlInstanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/amazonrdshosts/{amazonRdsHostName}/monitoredservers/status:
    get:
      parameters:
      - explode: false
        in: path
        name: amazonRdsHostName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/azureflexhosts/{azureFlexHostName}/monitoredservers/status:
    get:
      parameters:
      - explode: false
        in: path
        name: azureFlexHostName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/amazonauroraclusters/{amazonAuroraClusterName}/monitoredservers/status:
    get:
      parameters:
      - explode: false
        in: path
        name: amazonAuroraClusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/postgresinstances/{postgresInstanceName}/monitoredservers/status:
    get:
      parameters:
      - explode: false
        in: path
        name: postgresInstanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/monitoredservers/status/suspendedstatus:
    put:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          application/json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/monitoredservers/status/suspendedstatus:
    put:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          application/json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  ? /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{sqlServerInstanceName}/monitoredservers/status/suspendedstatus
  : put:
      parameters:
      - explode: false
        in: path
        name: sqlServerInstanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          application/json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/instances/{instanceName}/monitoredservers/status/suspendedstatus:
    put:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          application/json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  ? /api/basemonitors/{baseMonitorName}/clusters/{clusterName}/machines/{machineName}/instances/{instanceName}/monitoredservers/status/suspendedstatus
  : put:
      parameters:
      - explode: false
        in: path
        name: clusterName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          application/json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/monitoredservers/status/suspendedstatus:
    put:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          application/json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  ? /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/instances/{instanceName}/monitoredservers/status/suspendedstatus
  : put:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          application/json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/azuresqlservers/{serverName}/monitoredservers/status/suspendedstatus:
    put:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          application/json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/azuremanagedinstances/{instanceName}/monitoredservers/status/suspendedstatus:
    put:
      parameters:
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          application/json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/amazonrdssqlservers/{serverName}/monitoredservers/status/suspendedstatus:
    put:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          application/json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          text/json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SuspendedStatus'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/monitoredservers/instances:
    delete:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DeleteSqlServerInstanceModel'
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSqlServerInstanceModel'
          text/json:
            schema:
              $ref: '#/components/schemas/DeleteSqlServerInstanceModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DeleteSqlServerInstanceModel'
      responses:
        "204":
          description: No Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - MonitoredServers
  /api/basemonitors/{baseMonitorName}/MySqlErrorLog/GetErrorLogs:
    get:
      parameters:
      - explode: true
        in: query
        name: dbmsCir
        required: false
        schema:
          $ref: '#/components/schemas/MySqlInstanceChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServerOverviewMySqlErrorLogDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerOverviewMySqlErrorLogDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/ServerOverviewMySqlErrorLogDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - MySqlErrorLog
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.MySql.MySqlErrorLogController.GetErrorLogs
  /api/basemonitors/{baseMonitorName}/mySqlInstances/{cir}/topqueries:
    get:
      parameters:
      - explode: false
        in: path
        name: cir
        required: true
        schema:
          $ref: '#/components/schemas/MySqlInstanceChannelInstanceRef'
        style: simple
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: queryText
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MySqlTopQueriesDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/MySqlTopQueriesDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/MySqlTopQueriesDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - MySqlTopQueries
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.MySql.MySqlTopQueriesController.GetTopQueries
  /api/basemonitors/{baseMonitorName}/mySqlInstances/topqueries/history:
    get:
      parameters:
      - explode: true
        in: query
        name: cir
        required: true
        schema:
          $ref: '#/components/schemas/MySqlInstance_TopQueriesChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MySqlTopQueryPropertyQueryHistoryWithoutPlanKeyDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/MySqlTopQueryPropertyQueryHistoryWithoutPlanKeyDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/MySqlTopQueryPropertyQueryHistoryWithoutPlanKeyDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - MySqlTopQueries
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.MySql.MySqlTopQueriesController.GetQueryHistory
  /api/basemonitors/{baseMonitorName}/oracleInstances/{dbmsCir}/errorlogs:
    get:
      parameters:
      - explode: false
        in: path
        name: dbmsCir
        required: true
        schema:
          $ref: '#/components/schemas/OracleInstanceChannelInstanceRef'
        style: simple
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServerOverviewOracleErrorLogDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerOverviewOracleErrorLogDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/ServerOverviewOracleErrorLogDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - OracleErrorLog
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.Oracle.OracleErrorLogController.GetErrorLogs
  /api/basemonitors/{baseMonitorName}/oracleInstances/{cir}/longrunningqueries:
    get:
      parameters:
      - explode: false
        in: path
        name: cir
        required: true
        schema:
          $ref: '#/components/schemas/OracleInstanceChannelInstanceRef'
        style: simple
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OracleLongRunningQueriesDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/OracleLongRunningQueriesDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/OracleLongRunningQueriesDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - OracleLongRunningQueries
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.Oracle.OracleLongRunningQueriesController.GetSessions
  /api/basemonitors/{baseMonitorName}/oracleInstances/{cir}/topqueries:
    get:
      parameters:
      - explode: false
        in: path
        name: cir
        required: true
        schema:
          $ref: '#/components/schemas/OracleInstanceChannelInstanceRef'
        style: simple
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: queryText
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OracleTopQueriesDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/OracleTopQueriesDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/OracleTopQueriesDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - OracleTopQueries
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.Oracle.OracleTopQueriesController.GetTopQueries
  /api/basemonitors/{baseMonitorName}/oracleInstances/topqueries/history:
    get:
      parameters:
      - explode: true
        in: query
        name: cir
        required: true
        schema:
          $ref: '#/components/schemas/OracleInstance_TopQueriesChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OracleTopQueryPropertyQueryHistoryWithoutPlanKeyDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/OracleTopQueryPropertyQueryHistoryWithoutPlanKeyDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/OracleTopQueryPropertyQueryHistoryWithoutPlanKeyDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - OracleTopQueries
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.Oracle.OracleTopQueriesController.GetQueryHistory
  /api/basemonitors/{baseMonitorName}/permission-changes:
    get:
      parameters:
      - explode: true
        in: query
        name: startDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endDate
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PermissionChangeDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionChangeDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/PermissionChangeDtoIEnumerableJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - PermissionChanges
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Security.Controllers.PermissionChangesController.GetPermissionChanges
  /api/basemonitors/{baseMonitorName}/server-permissions/{runDate}:
    get:
      parameters:
      - explode: false
        in: path
        name: runDate
        required: true
        schema:
          format: date-time
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OldSummarizedServerPermissionsDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/OldSummarizedServerPermissionsDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/OldSummarizedServerPermissionsDtoIEnumerableJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - Permissions
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Security.Controllers.PermissionsController.GetServerPermissions
  /api/basemonitors/{baseMonitorName}/server-permissions/{cir}/{runDate}:
    get:
      parameters:
      - explode: false
        in: path
        name: cir
        required: true
        schema:
          $ref: '#/components/schemas/_SqlInstanceChannelInstanceRef'
        style: simple
      - explode: false
        in: path
        name: runDate
        required: true
        schema:
          format: date-time
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OldServerPermissionsDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/OldServerPermissionsDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/OldServerPermissionsDtoJSendSuccess'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - Permissions
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Security.Controllers.PermissionsController.GetServerPermissions
  /api/basemonitors/{baseMonitorName}/database-permissions/{cir}/{runDate}:
    get:
      parameters:
      - explode: false
        in: path
        name: cir
        required: true
        schema:
          $ref: '#/components/schemas/_SqlInstanceChannelInstanceRef'
        style: simple
      - explode: false
        in: path
        name: runDate
        required: true
        schema:
          format: date-time
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OldDatabasePermissionsDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/OldDatabasePermissionsDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/OldDatabasePermissionsDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - Permissions
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Security.Controllers.PermissionsController.GetDatabasePermissions
  /api/basemonitors/{baseMonitorName}/database-permissions-summary/{runDate}:
    get:
      parameters:
      - explode: false
        in: path
        name: runDate
        required: true
        schema:
          format: date-time
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OldDatabasePermissionsDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/OldDatabasePermissionsDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/OldDatabasePermissionsDtoIEnumerableJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - Permissions
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Security.Controllers.PermissionsController.GetSummarizedDatabasePermissions
  /api/basemonitors/{baseMonitorName}/user-permissions/{runDate}:
    get:
      parameters:
      - explode: false
        in: path
        name: runDate
        required: true
        schema:
          format: date-time
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OldUserPermissionAndMonitoredEntityDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/OldUserPermissionAndMonitoredEntityDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/OldUserPermissionAndMonitoredEntityDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - Permissions
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Security.Controllers.PermissionsController.GetUserPermissions
  /api/basemonitors/{baseMonitorName}/postgresservers/{serverName}/databases:
    get:
      parameters:
      - explode: false
        in: path
        name: serverName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - PostgresDatabases
  /api/basemonitors/{baseMonitorName}/postgresdatabaseoverview:
    get:
      parameters:
      - explode: true
        in: query
        name: databaseCir
        required: false
        schema:
          $ref: '#/components/schemas/PostgresInstance_DatabaseChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - PostgresDatabases
  /api/basemonitors/{baseMonitorName}/PostgresErrorLog/GetErrorLogs:
    get:
      parameters:
      - explode: true
        in: query
        name: dbmsCir
        required: false
        schema:
          $ref: '#/components/schemas/PostgresInstanceChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          default: 10
          format: int32
          type: integer
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServerOverviewPostgresErrorLogDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerOverviewPostgresErrorLogDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/ServerOverviewPostgresErrorLogDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - PostgresErrorLog
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.Postgres.PostgresErrorLogController.GetErrorLogs
  /api/basemonitors/{baseMonitorName}/postgresreplication:
    get:
      parameters:
      - explode: true
        in: query
        name: dbmsCir
        required: false
        schema:
          $ref: '#/components/schemas/PostgresInstanceChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PostgresReplicationDataDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresReplicationDataDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/PostgresReplicationDataDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - PostgresReplication
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.Postgres.PostgresReplicationController.GetReplicationData
  /api/postgresreplication/secondary:
    get:
      parameters:
      - explode: true
        in: query
        name: dbmsCir
        required: false
        schema:
          $ref: '#/components/schemas/PostgresInstanceChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: senderHost
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: clusterName
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PostgresSecondaryReplicationDataDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresSecondaryReplicationDataDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/PostgresSecondaryReplicationDataDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - PostgresReplication
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.Postgres.PostgresReplicationController.GetSecondaryReplicationData
  /api/basemonitors/{baseMonitorName}/postgresreplication/settings:
    get:
      parameters:
      - explode: true
        in: query
        name: dbmsCir
        required: false
        schema:
          $ref: '#/components/schemas/PostgresInstanceChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GroupedPostgresConfigurationOptionsDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/GroupedPostgresConfigurationOptionsDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupedPostgresConfigurationOptionsDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - PostgresReplication
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.Postgres.PostgresReplicationController.GetReplicationSettings
  /api/basemonitors/{baseMonitorName}/postgresreplication/slots:
    get:
      parameters:
      - explode: true
        in: query
        name: dbmsCir
        required: false
        schema:
          $ref: '#/components/schemas/PostgresInstanceChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PostgresReplicationSlotsDataDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresReplicationSlotsDataDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/PostgresReplicationSlotsDataDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - PostgresReplication
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.Postgres.PostgresReplicationController.GetReplicationSlots
  /api/basemonitors/{baseMonitorName}/postgresInstances/{cir}/topqueries:
    get:
      parameters:
      - explode: false
        in: path
        name: cir
        required: true
        schema:
          format: entity-id
          type: ChannelInstanceRef
        style: simple
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: maxResults
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: queryText
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PostgresTopQueriesDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresTopQueriesDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/PostgresTopQueriesDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - PostgresTopQueries
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.Postgres.PostgresTopQueriesController.GetTopQueries
  /api/basemonitors/{baseMonitorName}/postgresInstances/topqueries/history:
    get:
      parameters:
      - explode: true
        in: query
        name: cir
        required: true
        schema:
          $ref: '#/components/schemas/PostgresInstance_TopQueriesChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PostgresTopQueryPropertyPostgresQueryHistoryPlanKeyDtoQueryHistoryDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresTopQueryPropertyPostgresQueryHistoryPlanKeyDtoQueryHistoryDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/PostgresTopQueryPropertyPostgresQueryHistoryPlanKeyDtoQueryHistoryDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - PostgresTopQueries
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.Postgres.PostgresTopQueriesController.GetQueryHistory
  /api/status:
    get:
      responses:
        "200":
          description: OK
      tags:
      - PowerShellModuleApi
  /api/v1/monitored-entities:
    get:
      parameters:
      - explode: true
        in: query
        name: entityType
        required: false
        schema:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          default: ""
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MonitoredEntityDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/MonitoredEntityDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/MonitoredEntityDtoArrayJSendSuccess'
          description: OK
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Public API
  /api/v1/monitored-entities/types:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EntityTypeArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/EntityTypeArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/EntityTypeArrayJSendSuccess'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - Public API
  /api/v1/metrics:
    get:
      parameters:
      - explode: true
        in: query
        name: metricTypeId
        required: true
        schema:
          format: metric-type-id
          type: string
        style: form
      - explode: true
        in: query
        name: monitoredEntityId
        required: false
        schema:
          format: entity-id
          type: string
        style: form
      - explode: true
        in: query
        name: start
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: maxSampleCount
        required: false
        schema:
          format: int32
          maximum: 500
          minimum: 50
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MetricDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/MetricDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/MetricDtoArrayJSendSuccess'
          description: OK
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "416":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendError'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Range Not Satisfiable
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Forbidden
      tags:
      - Public API
  /api/v1/metrics/types:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MetricTypeDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/MetricTypeDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/MetricTypeDtoArrayJSendSuccess'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - Public API
  /api/v1/disk-usage:
    get:
      parameters:
      - explode: true
        in: query
        name: monitoredEntityId
        required: false
        schema:
          format: entity-id
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DiskUsageDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/DiskUsageDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/DiskUsageDtoArrayJSendSuccess'
          description: OK
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Forbidden
      tags:
      - Public API
  /api/v1/backups:
    get:
      parameters:
      - explode: true
        in: query
        name: monitoredEntityId
        required: false
        schema:
          format: entity-id
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DatabaseBackupDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseBackupDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/DatabaseBackupDtoArrayJSendSuccess'
          description: OK
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Forbidden
      tags:
      - Public API
  /api/v1/alerts:
    get:
      parameters:
      - explode: true
        in: query
        name: alertTypeId
        required: true
        schema:
          format: alert-type-id
          type: string
        style: form
      - explode: true
        in: query
        name: monitoredEntityId
        required: false
        schema:
          format: entity-id
          type: string
        style: form
      - explode: true
        in: query
        name: start
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maximum: 2147483647
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlertDetailDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AlertDetailDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertDetailDtoArrayJSendSuccess'
          description: OK
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Request
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Not Found
        "416":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendError'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Range Not Satisfiable
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Forbidden
      tags:
      - Public API
  /api/v1/alerts/types:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlertTypeDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/AlertTypeDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertTypeDtoArrayJSendSuccess'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
      tags:
      - Public API
  /api/basemonitors/{baseMonitorName}/queryinstances:
    get:
      parameters:
      - explode: true
        in: query
        name: instanceCir
        required: false
        schema:
          format: entity-id
          type: ChannelInstanceRef
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/QueryInstanceDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/QueryInstanceDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/QueryInstanceDtoIEnumerableJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - QueryInstanceApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.QueryInstances.QueryInstanceApiController.GetQueryInstances
  /api/basemonitors/{baseMonitorName}/queryinstances/durationfilter:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TimeSpanJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/TimeSpanJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/TimeSpanJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - QueryInstanceApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.QueryInstances.QueryInstanceApiController.GetDurationFilter
  /api/basemonitors/{baseMonitorName}/queryplans:
    get:
      parameters:
      - explode: true
        in: query
        name: queryCir
        required: false
        schema:
          format: entity-id
          type: string
        style: form
      - explode: true
        in: query
        name: planHash
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Forbidden
      tags:
      - QueryPlanApi
  /api/basemonitors/{baseMonitorName}/queryplans/sqlinstances/{cir}/actualplan/compatibility:
    get:
      parameters:
      - explode: false
        in: path
        name: cir
        required: true
        schema:
          $ref: '#/components/schemas/_SqlInstanceChannelInstanceRef'
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ActualPlanCompatibilityDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/ActualPlanCompatibilityDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/ActualPlanCompatibilityDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - QueryPlanApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.QueryPlan.QueryPlanApiController.GetActualPlanCompatibility
  /api/basemonitors/{baseMonitorName}/queryplans/actualplan/runtimemetrics:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ActualPlanRuntimeMetricsPostDto'
          application/json:
            schema:
              $ref: '#/components/schemas/ActualPlanRuntimeMetricsPostDto'
          text/json:
            schema:
              $ref: '#/components/schemas/ActualPlanRuntimeMetricsPostDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ActualPlanRuntimeMetricsPostDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ActualPlanRuntimeMetricsDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/ActualPlanRuntimeMetricsDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/ActualPlanRuntimeMetricsDtoIEnumerableJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - QueryPlanApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.QueryPlan.QueryPlanApiController.GetActualPlanRuntimeMetrics
  ? /api/basemonitors/{baseMonitorName}/recommendations/instance/{sqlInstanceCir}/queryplan/{planHandle}/{createDate}/{databaseName}
  : get:
      parameters:
      - explode: false
        in: path
        name: sqlInstanceCir
        required: true
        schema:
          $ref: '#/components/schemas/_SqlInstanceChannelInstanceRef'
        style: simple
      - explode: false
        in: path
        name: planHandle
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: createDate
        required: true
        schema:
          format: date-time
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: startDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/QueryRecommendationDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/QueryRecommendationDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/QueryRecommendationDtoArrayJSendSuccess'
          description: OK
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendError'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Not Found
        "503":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendError'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Service Unavailable
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - QueryRecommendationsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.QueryRecommendations.QueryRecommendationsApiController.GetForSinglePlan
  /api/basemonitors/{baseMonitorName}/recommendations:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/QueryRecommendationsRequestDto'
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRecommendationsRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/QueryRecommendationsRequestDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/QueryRecommendationsRequestDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/QueryRecommendationDtoQueryRecommendationCollectionDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/QueryRecommendationDtoQueryRecommendationCollectionDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/QueryRecommendationDtoQueryRecommendationCollectionDtoArrayJSendSuccess'
          description: OK
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "503":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendError'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Service Unavailable
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - QueryRecommendationsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.QueryRecommendations.QueryRecommendationsApiController.Get
  /api/basemonitors/{baseMonitorName}/recommendations/postgresinstances/queryplan:
    get:
      parameters:
      - explode: true
        in: query
        name: postgresInstanceCir
        required: true
        schema:
          $ref: '#/components/schemas/PostgresInstanceChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: queryHash
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: databaseName
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: queryId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: userId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: databaseId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: topLevel
        required: true
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: planHash
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: startDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endDate
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PostgresQueryRecommendationDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresQueryRecommendationDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/PostgresQueryRecommendationDtoArrayJSendSuccess'
          description: OK
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "503":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendError'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Service Unavailable
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - QueryRecommendationsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.QueryRecommendations.QueryRecommendationsApiController.GetForSinglePlan
  /api/basemonitors/{baseMonitorName}/recommendations/postgresinstances:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PostgresQueryRecommendationsRequestDto'
          application/json:
            schema:
              $ref: '#/components/schemas/PostgresQueryRecommendationsRequestDto'
          text/json:
            schema:
              $ref: '#/components/schemas/PostgresQueryRecommendationsRequestDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PostgresQueryRecommendationsRequestDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PostgresQueryRecommendationDtoPostgresQueryRecommendationCollectionDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/PostgresQueryRecommendationDtoPostgresQueryRecommendationCollectionDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/PostgresQueryRecommendationDtoPostgresQueryRecommendationCollectionDtoArrayJSendSuccess'
          description: OK
        "422":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: Unprocessable Content
        "503":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/JSendError'
            application/json:
              schema:
                $ref: '#/components/schemas/JSendError'
            text/json:
              schema:
                $ref: '#/components/schemas/JSendError'
          description: Service Unavailable
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - QueryRecommendationsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.QueryRecommendations.QueryRecommendationsApiController.Get
  /api/basemonitors/{baseMonitorName}/report/serverconfiguration/{channelInstanceRef}:
    get:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: channelInstanceRef
        required: true
        schema:
          format: entity-id
          type: ChannelInstanceRef
        style: simple
      - explode: true
        in: query
        name: start
        required: true
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: end
        required: true
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServerConfigResultJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerConfigResultJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/ServerConfigResultJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ReportsApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Controllers.ReportsApiController.GetServerConfiguration
  /api/diagnostics/rpc:
    get:
      parameters:
      - explode: true
        in: query
        name: format
        required: false
        schema:
          default: json
          type: string
        style: form
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - RpcDiagnostics
  /api/diagnostics/rpc/status:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RpcStatusDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/RpcStatusDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/RpcStatusDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - RpcDiagnostics
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Diagnostics.Controllers.RpcDiagnosticsController.StatusOfRpcStatistics
  /api/diagnostics/rpc/enable:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - RpcDiagnostics
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Diagnostics.Controllers.RpcDiagnosticsController.EnableGatheringOfRpcStatistics
  /api/diagnostics/rpc/disable:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - RpcDiagnostics
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Diagnostics.Controllers.RpcDiagnosticsController.DisableGatheringOfRpcStatistics
  /api/diagnostics/rpc/statusRequest:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RpcStatusDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/RpcStatusDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/RpcStatusDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - RpcDiagnostics
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Diagnostics.Controllers.RpcDiagnosticsController.StatusOfRpcPerRequestStatistics
  /api/diagnostics/rpc/enableRequest:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - RpcDiagnostics
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Diagnostics.Controllers.RpcDiagnosticsController.EnableGatheringOfRpcPerRequestStatistics
  /api/diagnostics/rpc/disableRequest:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - RpcDiagnostics
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Diagnostics.Controllers.RpcDiagnosticsController.DisableGatheringOfRpcPerRequestStatistics
  /api/diagnostics/rpc/reset:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/UnitJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - RpcDiagnostics
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Diagnostics.Controllers.RpcDiagnosticsController.ResetRpcStatistics
  /api/security/admin-access:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BooleanJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/BooleanJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - SecurityPagesAccessApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Security.Controllers.SecurityPagesAccessApiController.GetSecurityPageAccess
  /api/estate/configuration-options/changes:
    get:
      parameters:
      - explode: true
        in: query
        name: dateRange
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - ServerConfigurationOptionsApi
  /api/estate/configuration-options/new:
    get:
      responses:
        "200":
          description: OK
      tags:
      - ServerConfigurationOptionsApi
  /api/estate/configuration-options/GetInstanceRefsForComparison:
    get:
      operationId: GetInstanceRefsForComparison
      responses:
        "200":
          description: OK
      tags:
      - ServerConfigurationOptionsApi
  /api/estate/configuration-options/GetServerConfigurationOptions:
    get:
      operationId: GetServerConfigurationOptions
      parameters:
      - explode: true
        in: query
        name: cir
        required: false
        schema:
          format: entity-id
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Forbidden
      tags:
      - ServerConfigurationOptionsApi
  /api/estate/configuration-options/download:
    get:
      responses:
        "200":
          description: OK
      tags:
      - ServerConfigurationOptionsApi
  /api/basemonitors/{baseMonitorName}/server-permissions/v2/{runDate}:
    get:
      parameters:
      - explode: false
        in: path
        name: runDate
        required: true
        schema:
          format: date-time
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OldSummarizedServerPermissionsDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/OldSummarizedServerPermissionsDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/OldSummarizedServerPermissionsDtoIEnumerableJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ServerPermissions
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Security.Controllers.ServerPermissionsController.GetServerPermissions
  /api/basemonitors/{baseMonitorName}/server-permissions/v2/{cir}/{runDate}:
    get:
      parameters:
      - explode: false
        in: path
        name: cir
        required: true
        schema:
          $ref: '#/components/schemas/_SqlInstanceChannelInstanceRef'
        style: simple
      - explode: false
        in: path
        name: runDate
        required: true
        schema:
          format: date-time
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OldServerPermissionsDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/OldServerPermissionsDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/OldServerPermissionsDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ServerPermissions
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Security.Controllers.ServerPermissionsController.GetServerRoleLogins
  /api/basemonitors/{baseMonitorName}/sqlinstances/{cir}/permissions:
    get:
      parameters:
      - explode: false
        in: path
        name: cir
        required: true
        schema:
          $ref: '#/components/schemas/_SqlInstanceChannelInstanceRef'
        style: simple
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServerRoleViewModelDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/ServerRoleViewModelDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/ServerRoleViewModelDtoArrayJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - ServerPermissions
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.MonitoredEntities.SqlServer.ServerPermissionsController.GetPermissions
  /api/server-overview/server-permissions/report:
    get:
      parameters:
      - explode: true
        in: query
        name: cir
        required: false
        schema:
          $ref: '#/components/schemas/_SqlInstanceChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - ServerPermissions
  /api/alerts/servertree:
    get:
      operationId: AlertsServerTree
      responses:
        "200":
          description: OK
      tags:
      - ServerTreeApi
  /api/reports/deadlocks:
    get:
      operationId: GetDeadlocks
      parameters:
      - explode: true
        in: query
        name: start
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: end
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: reportPickledCir
        required: false
        schema:
          format: entity-id
          type: string
        style: form
      - explode: true
        in: query
        name: sqlServerDisplayName
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: overrideServer
        required: false
        schema:
          format: entity-id
          type: string
        style: form
      - explode: true
        in: query
        name: maxResult
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Forbidden
      tags:
      - SqlDeadlockReport
  /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{instanceName}/alertsettings/{alertTypeId}:
    get:
      parameters:
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - SqlServerInstanceAlertSettings
  ? /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{instanceName}/alertsettings/{alertTypeId}/status
  : patch:
      parameters:
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - SqlServerInstanceAlertSettings
  ? /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{instanceName}/alertsettings/{alertTypeId}/specificsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - SqlServerInstanceAlertSettings
  ? /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{instanceName}/alertsettings/{alertTypeId}/comments
  : patch:
      parameters:
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - SqlServerInstanceAlertSettings
  ? /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{instanceName}/alertsettings/{alertTypeId}/notificationsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - SqlServerInstanceAlertSettings
  ? /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{instanceName}/databases/{databaseName}/alertsettings/{alertTypeId}
  : get:
      parameters:
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - SqlServerInstanceDatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{instanceName}/databases/{databaseName}/alertsettings/{alertTypeId}/status
  : patch:
      parameters:
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - SqlServerInstanceDatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{instanceName}/databases/{databaseName}/alertsettings/{alertTypeId}/specificsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - SqlServerInstanceDatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{instanceName}/databases/{databaseName}/alertsettings/{alertTypeId}/comments
  : patch:
      parameters:
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - SqlServerInstanceDatabaseAlertSettings
  ? /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{instanceName}/databases/{databaseName}/alertsettings/{alertTypeId}/notificationsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - SqlServerInstanceDatabaseAlertSettings
  /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{instanceName}/databases:
    get:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - SqlServerInstanceDatabases
  /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{instanceName}/databases/{databaseName}:
    get:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: databaseName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - SqlServerInstanceDatabases
  /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{instanceName}/jobs:
    get:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - SqlServerInstanceJobs
  /api/basemonitors/{baseMonitorName}/linuxmachines/{linuxMachineName}/instances/{instanceName}/jobs/{jobName}:
    get:
      parameters:
      - explode: false
        in: path
        name: linuxMachineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: instanceName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: jobName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - SqlServerInstanceJobs
  /api/estate/sql-server-licensing:
    get:
      responses:
        "200":
          description: OK
      tags:
      - SqlServerLicensingApi
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/alertsettings/{alertTypeId}:
    get:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
            application/json:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
            text/json:
              schema:
                $ref: '#/components/schemas/AlertSettingsDto'
          description: OK
        "404":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - StandaloneMachineAlertSettings
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/alertsettings/{alertTypeId}/specificsettings:
    patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - StandaloneMachineAlertSettings
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/alertsettings/{alertTypeId}/status:
    patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - StandaloneMachineAlertSettings
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/alertsettings/{alertTypeId}/comments:
    patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - StandaloneMachineAlertSettings
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/alertsettings/{alertTypeId}/notificationsettings:
    patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - StandaloneMachineAlertSettings
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/disks/{diskName}/alertsettings/{alertTypeId}:
    get:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: diskName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - StandaloneMachineDiskAlertSettings
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/disks/{diskName}/alertsettings/{alertTypeId}/status:
    patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: diskName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertStatusDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - StandaloneMachineDiskAlertSettings
  /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/disks/{diskName}/alertsettings/{alertTypeId}/comments:
    patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: diskName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - StandaloneMachineDiskAlertSettings
  ? /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/disks/{diskName}/alertsettings/{alertTypeId}/notificationsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: diskName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AlertNotificationSettingsDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - StandaloneMachineDiskAlertSettings
  ? /api/basemonitors/{baseMonitorName}/standalonemachines/{machineName}/disks/{diskName}/alertsettings/{alertTypeId}/specificsettings
  : patch:
      parameters:
      - explode: false
        in: path
        name: machineName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: diskName
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alertTypeId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          text/json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
          application/*+json:
            schema:
              additionalProperties:
                $ref: '#/components/schemas/JToken'
              type: object
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - StandaloneMachineDiskAlertSettings
  /api/basemonitors/{baseMonitorName}/alerts/systemProcesses:
    post:
      operationId: GetSystemProcesses
      parameters:
      - explode: true
        in: query
        name: clusterCir
        required: false
        schema:
          $ref: '#/components/schemas/ClusterChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: hostMachineCir
        required: false
        schema:
          format: entity-id
          type: ChannelInstanceRef
        style: form
      - explode: true
        in: query
        name: sqlInstanceCir
        required: false
        schema:
          $ref: '#/components/schemas/_SqlInstanceChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: rootMonitoredEntityType
        required: true
        schema:
          $ref: '#/components/schemas/RootMonitoredEntityType'
        style: form
      - explode: true
        in: query
        name: dateRaised
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SystemProcessDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/SystemProcessDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/SystemProcessDtoIEnumerableJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - SystemProcessesApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Alerts.Controllers.SystemProcessesApiController.GetSystemProcesses
  /api/tags:
    get:
      operationId: GetTags
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/TagDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/TagDtoArrayJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - Tags
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.Tags.TagsController.GetAllTags
  /api/basemonitors/{baseMonitorName}/tags:
    post:
      operationId: UpdateTags
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UpdateTagOperationDto'
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTagOperationDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateTagOperationDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateTagOperationDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ValidationErrorArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorArrayJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - Tags
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.Tags.TagsController.UpdateTags
  /api/basemonitors/{baseMonitorName}/topqueries/analysequery:
    get:
      parameters:
      - explode: true
        in: query
        name: cir
        required: false
        schema:
          $ref: '#/components/schemas/_SqlInstance_TopQueriesChannelInstanceRef'
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FragmentAnalysisIssueWithIdDtoArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/FragmentAnalysisIssueWithIdDtoArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/FragmentAnalysisIssueWithIdDtoArrayJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - TopQueries
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.TopQueries.TopQueriesController.AnalyzeQuery
  /api/basemonitors/{baseMonitorName}/topqueries/queryhistory:
    get:
      parameters:
      - explode: true
        in: query
        name: cir
        required: false
        schema:
          $ref: '#/components/schemas/_SqlInstance_TopQueriesChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TopQueryPropertySqlServerQueryHistoryPlanKeyDtoQueryHistoryDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/TopQueryPropertySqlServerQueryHistoryPlanKeyDtoQueryHistoryDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/TopQueryPropertySqlServerQueryHistoryPlanKeyDtoQueryHistoryDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - TopQueries
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.TopQueries.TopQueriesController.GetQueryHistory
  /api/basemonitors/{baseMonitorName}/topqueries/trackedqueryrecords:
    get:
      parameters:
      - explode: true
        in: query
        name: cir
        required: false
        schema:
          $ref: '#/components/schemas/_SqlInstanceChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TopQueryDtoTopQueryOutOfRangeDtoOneOfArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/TopQueryDtoTopQueryOutOfRangeDtoOneOfArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/TopQueryDtoTopQueryOutOfRangeDtoOneOfArrayJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - TopQueries
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.TopQueries.TopQueriesController.GetTrackedQueryRecords
  /api/basemonitors/{baseMonitorName}/topqueries/get:
    get:
      parameters:
      - explode: true
        in: query
        name: cir
        required: false
        schema:
          format: entity-id
          type: ChannelInstanceRef
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: selectedWait
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: alertId
        required: false
        schema:
          $ref: '#/components/schemas/IntegerIdentifier'
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: sqlQueryTextFragment
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: groupResults
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TopQueryDtoGroupedTopQueryDtoOneOfArrayJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/TopQueryDtoGroupedTopQueryDtoOneOfArrayJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/TopQueryDtoGroupedTopQueryDtoOneOfArrayJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - TopQueries
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.TopQueries.TopQueriesController.GetTopQueries
  /api/monitoringstatus:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TopStatusBarDtoJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/TopStatusBarDtoJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/TopStatusBarDtoJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - TopStatusBar
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Controllers.TopStatusBarController.GetMonitoringStatus
  /api/basemonitors/{baseMonitorName}/sprocstats:
    get:
      parameters:
      - explode: true
        in: query
        name: cir
        required: false
        schema:
          $ref: '#/components/schemas/_SqlInstanceChannelInstanceRef'
        style: form
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - TopStoredProcedures
  /api/basemonitors/{baseMonitorName}/trackedqueries/track:
    post:
      operationId: Track
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/TrackQueryDto'
          application/json:
            schema:
              $ref: '#/components/schemas/TrackQueryDto'
          text/json:
            schema:
              $ref: '#/components/schemas/TrackQueryDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/TrackQueryDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - TrackedQueriesApi
  /api/basemonitors/{baseMonitorName}/trackedqueries/untrack:
    delete:
      operationId: Untrack
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/_SqlInstance_TopQueriesChannelInstanceRef'
          application/json:
            schema:
              $ref: '#/components/schemas/_SqlInstance_TopQueriesChannelInstanceRef'
          text/json:
            schema:
              $ref: '#/components/schemas/_SqlInstance_TopQueriesChannelInstanceRef'
          application/*+json:
            schema:
              $ref: '#/components/schemas/_SqlInstance_TopQueriesChannelInstanceRef'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - TrackedQueriesApi
  /api/basemonitors/{baseMonitorName}/trackedqueries:
    get:
      parameters:
      - explode: true
        in: query
        name: cir
        required: false
        schema:
          $ref: '#/components/schemas/_SqlInstanceChannelInstanceRef'
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - TrackedQueriesApi
  /api/basemonitors/{baseMonitorName}/user-permissions/v2/{runDate}:
    get:
      parameters:
      - explode: false
        in: path
        name: runDate
        required: true
        schema:
          format: date-time
          type: string
        style: simple
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OldUserPermissionAndMonitoredEntityDtoIEnumerableJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/OldUserPermissionAndMonitoredEntityDtoIEnumerableJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/OldUserPermissionAndMonitoredEntityDtoIEnumerableJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - UserPermissions
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Security.Controllers.UserPermissionsController.GetUserPermissions
  /api/basemonitors/{baseMonitorName}/postgresservers/{dbmsCir}/GetVacuumData:
    get:
      parameters:
      - explode: false
        in: path
        name: dbmsCir
        required: true
        schema:
          $ref: '#/components/schemas/PostgresInstanceChannelInstanceRef'
        style: simple
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Vacuum
  /api/basemonitors/{baseMonitorName}/postgresservers/{dbmsCir}/GetDetailedVacuumData:
    get:
      parameters:
      - explode: false
        in: path
        name: dbmsCir
        required: true
        schema:
          $ref: '#/components/schemas/PostgresInstance_Database_TableChannelInstanceRef'
        style: simple
      - explode: true
        in: query
        name: startTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: endTime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - Vacuum
  /api/estate/installed-versions:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VersionViewModel'
            application/json:
              schema:
                $ref: '#/components/schemas/VersionViewModel'
            text/json:
              schema:
                $ref: '#/components/schemas/VersionViewModel'
          description: OK
      tags:
      - VersionsApi
  /api/estate/disk-usage/disks:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DiskFilterInfoDto'
          application/json:
            schema:
              $ref: '#/components/schemas/DiskFilterInfoDto'
          text/json:
            schema:
              $ref: '#/components/schemas/DiskFilterInfoDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DiskFilterInfoDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VolumesViewModelJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/VolumesViewModelJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/VolumesViewModelJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - VolumeUsageApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Estate.Controllers.VolumeUsageApiController.GetVolumes
  /api/estate/disk-usage/historic-usage:
    post:
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DiskFilterInfoDto'
          application/json:
            schema:
              $ref: '#/components/schemas/DiskFilterInfoDto'
          text/json:
            schema:
              $ref: '#/components/schemas/DiskFilterInfoDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DiskFilterInfoDto'
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/HistoricVolumeUsageViewModelJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricVolumeUsageViewModelJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/HistoricVolumeUsageViewModelJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - VolumeUsageApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Areas.Estate.Controllers.VolumeUsageApiController.GetHistoricUsage
  /api/basemonitors/{baseMonitorName}/webhooknotifications/test:
    post:
      parameters:
      - explode: false
        in: path
        name: baseMonitorName
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/WebhookTestRequestCommandDto'
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookTestRequestCommandDto'
          text/json:
            schema:
              $ref: '#/components/schemas/WebhookTestRequestCommandDto'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WebhookTestRequestCommandDto'
      responses:
        "200":
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendCodeError'
          description: Unauthorized
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSendFailure'
          description: UnprocessableEntity
      tags:
      - WebhookNotificationsApi
  /api/whatsnew/releases:
    get:
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReleaseTimelineViewModelJSendSuccess'
            application/json:
              schema:
                $ref: '#/components/schemas/ReleaseTimelineViewModelJSendSuccess'
            text/json:
              schema:
                $ref: '#/components/schemas/ReleaseTimelineViewModelJSendSuccess'
          description: OK
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorJSendDataError'
          description: Internal Server Error
        "401":
          content:
            application/json: {}
          description: Unauthorized
      tags:
      - WhatsNewApi
      x-client-visible: true
      x-full-method-name: RedGate.Monitor.UI.Website.Api.Controllers.WhatsNew.WhatsNewApiController.GetReleaseTimeline
components:
  schemas:
    AccessReport:
      additionalProperties: false
      example:
        accessGranted: true
        baseMonitor:
          port: 0
          displayName: displayName
          name: name
          type: type
          isDisconnected: true
        accessReason: accessReason
      properties:
        accessGranted:
          type: boolean
        accessReason:
          nullable: true
          type: string
        baseMonitor:
          $ref: '#/components/schemas/BaseMonitorDto'
      type: object
    AccessReportJSendSuccess:
      additionalProperties: false
      example:
        data:
          accessGranted: true
          baseMonitor:
            port: 0
            displayName: displayName
            name: name
            type: type
            isDisconnected: true
          accessReason: accessReason
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/AccessReport'
      type: object
    AccessRequest:
      additionalProperties: false
      example:
        topLevelRequest: null
        entityType: ""
        name: name
      properties:
        entityType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
        name:
          nullable: true
          type: string
        topLevelRequest:
          $ref: '#/components/schemas/AccessRequest'
      type: object
    ActiveDirectoryDomainViewModel:
      additionalProperties: false
      example:
        password: password
        domainName: domainName
        baseDN: baseDN
        useBaseMonitorServiceAccount: true
        username: username
      properties:
        domainName:
          type: string
        baseDN:
          type: string
        useBaseMonitorServiceAccount:
          type: boolean
        username:
          type: string
        password:
          type: string
      required:
      - baseDN
      - domainName
      - password
      - username
      type: object
    ActualPlanCompatibilityDto:
      additionalProperties: false
      example:
        serverSupport: 0
        compatibleDatabases:
        - compatibleDatabases
        - compatibleDatabases
      properties:
        serverSupport:
          $ref: '#/components/schemas/ActualPlanServerCompatibilityDto'
        compatibleDatabases:
          items:
            type: string
          nullable: true
          type: array
      type: object
    ActualPlanCompatibilityDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          serverSupport: 0
          compatibleDatabases:
          - compatibleDatabases
          - compatibleDatabases
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/ActualPlanCompatibilityDto'
      type: object
    ActualPlanRuntimeMetricsDto:
      additionalProperties: false
      example:
        planHandle: planHandle
        mostExpensiveOperation:
          cost: 5.962133916683182
          name: name
          difference: 1.4658129805029452
          id:
            value: 0
          actualRows: 6.027456183070403
          estimatedRows: 0.8008281904610115
        collectionDate: 2000-01-23T04:56:07.000+00:00
        createDate: 2000-01-23T04:56:07.000+00:00
      properties:
        collectionDate:
          format: date-time
          type: string
        createDate:
          format: date-time
          type: string
        planHandle:
          nullable: true
          type: string
        mostExpensiveOperation:
          $ref: '#/components/schemas/ParsedRelOpDto'
      type: object
    ActualPlanRuntimeMetricsDtoIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - planHandle: planHandle
          mostExpensiveOperation:
            cost: 5.962133916683182
            name: name
            difference: 1.4658129805029452
            id:
              value: 0
            actualRows: 6.027456183070403
            estimatedRows: 0.8008281904610115
          collectionDate: 2000-01-23T04:56:07.000+00:00
          createDate: 2000-01-23T04:56:07.000+00:00
        - planHandle: planHandle
          mostExpensiveOperation:
            cost: 5.962133916683182
            name: name
            difference: 1.4658129805029452
            id:
              value: 0
            actualRows: 6.027456183070403
            estimatedRows: 0.8008281904610115
          collectionDate: 2000-01-23T04:56:07.000+00:00
          createDate: 2000-01-23T04:56:07.000+00:00
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/ActualPlanRuntimeMetricsDto'
          type: array
      type: object
    ActualPlanRuntimeMetricsPostDto:
      additionalProperties: false
      example:
        snippet: snippet
        queryHash: queryHash
        channelInstanceRef: ""
        databaseName: databaseName
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
      properties:
        channelInstanceRef:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        startTime:
          format: date-time
          nullable: true
          type: string
        endTime:
          format: date-time
          nullable: true
          type: string
        snippet:
          nullable: true
          type: string
        queryHash:
          nullable: true
          type: string
        databaseName:
          nullable: true
          type: string
      type: object
    ActualPlanServerCompatibilityDto:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    AdAccountDto:
      additionalProperties: false
      example:
        members:
        - null
        - null
        name: name
        isGroup: true
      properties:
        name:
          nullable: true
          type: string
        isGroup:
          type: boolean
        members:
          items:
            $ref: '#/components/schemas/AdAccountDto'
          nullable: true
          readOnly: true
          type: array
      type: object
    AdPrincipalMembershipDto:
      additionalProperties: false
      example:
        displayName: displayName
        name: name
        type: null
        adMemberships:
        - null
        - null
        sid: sid
      properties:
        sid:
          type: string
        name:
          type: string
        displayName:
          type: string
        type:
          $ref: '#/components/schemas/LoginTypeDto'
        adMemberships:
          items:
            $ref: '#/components/schemas/AdPrincipalMembershipDto'
          type: array
      type: object
    AddAmazonRdsSqlServerCommandDto:
      additionalProperties: false
      example:
        endpoint: endpoint
        password: password
        sqlServerConnectionProperties:
          executionTimeout: 2
          networkPacketSize: 5
          trustServerCertificate: true
          connectionTimeout: 5
          networkProtocol: 6
          portNumber: 1
          encryptConnection: true
        groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        amazonApiCredentials:
          secretKey: secretKey
          accessKey: accessKey
          roleArn: roleArn
          decryptionFailed: true
          region: region
          dbIdentifier: dbIdentifier
          authenticationMode: 7
        useBaseMonitorAccount: true
        agentName: agentName
        authenticationMode: 0
        username: username
      properties:
        endpoint:
          minLength: 1
          type: string
        username:
          type: string
        password:
          type: string
        authenticationMode:
          $ref: '#/components/schemas/SqlServerAuthenticationMode'
        sqlServerConnectionProperties:
          $ref: '#/components/schemas/SqlServerConnectionPropertiesModel'
        groupId:
          format: uuid
          nullable: true
          type: string
        amazonApiCredentials:
          $ref: '#/components/schemas/AmazonApiCredentialsDto'
        useBaseMonitorAccount:
          type: boolean
        agentName:
          nullable: true
          type: string
      required:
      - endpoint
      - sqlServerConnectionProperties
      type: object
    AddAzureManagedInstanceCommandDto:
      additionalProperties: false
      example:
        endpoint: endpoint
        password: password
        sqlServerConnectionProperties:
          executionTimeout: 2
          networkPacketSize: 5
          trustServerCertificate: true
          connectionTimeout: 5
          networkProtocol: 6
          portNumber: 1
          encryptConnection: true
        groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        agentName: agentName
        authenticationMode: 0
        username: username
      properties:
        endpoint:
          minLength: 1
          type: string
        username:
          type: string
        password:
          type: string
        sqlServerConnectionProperties:
          $ref: '#/components/schemas/SqlServerConnectionPropertiesModel'
        authenticationMode:
          $ref: '#/components/schemas/AzureAuthenticationMode'
        groupId:
          format: uuid
          nullable: true
          type: string
        agentName:
          nullable: true
          type: string
      required:
      - authenticationMode
      - endpoint
      - sqlServerConnectionProperties
      type: object
    AddInstanceResult:
      additionalProperties: false
      example:
        success: true
        message: message
      properties:
        success:
          type: boolean
        message:
          nullable: true
          type: string
      type: object
    AddInstanceResultJSendSuccess:
      additionalProperties: false
      example:
        data:
          success: true
          message: message
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/AddInstanceResult'
      type: object
    AddMicrosoftEntraIdRequest:
      additionalProperties: false
      example:
        name: name
        azureApiCredentials:
          servicePrincipalCredentialId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          authenticationMode: 0
      properties:
        name:
          minLength: 1
          type: string
        azureApiCredentials:
          $ref: '#/components/schemas/AzureApiCredentialsDto'
      required:
      - name
      type: object
    AddMicrosoftEntraIdResult:
      additionalProperties: false
      example:
        success: true
        message: message
      properties:
        success:
          type: boolean
        message:
          nullable: true
          type: string
      type: object
    AddMicrosoftEntraIdResultJSendSuccess:
      additionalProperties: false
      example:
        data:
          success: true
          message: message
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/AddMicrosoftEntraIdResult'
      type: object
    AddMongoDbInstanceRequest:
      additionalProperties: false
      example:
        address: address
        port: 5249
        addToExistingLinuxMachine: true
        groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        alias: alias
        agentName: agentName
        instanceCredentials:
          password: password
          username: username
        machineConfiguration:
          credentials:
            password: password
            sshAuthenticationType: 0
            decryptionFailed: true
            userName: userName
            sshPrivateKeyId: sshPrivateKeyId
        failIfExists: true
      properties:
        address:
          minLength: 1
          type: string
        alias:
          nullable: true
          type: string
        port:
          format: int32
          maximum: 65535
          minimum: 1
          type: integer
        groupId:
          format: uuid
          nullable: true
          type: string
        agentName:
          nullable: true
          type: string
        machineConfiguration:
          $ref: '#/components/schemas/LinuxMachineConfiguration'
        instanceCredentials:
          $ref: '#/components/schemas/MongoDbInstanceCredentialsDto'
        failIfExists:
          type: boolean
        addToExistingLinuxMachine:
          type: boolean
      required:
      - address
      - instanceCredentials
      - port
      type: object
    AddMySqlInstanceRequest:
      additionalProperties: false
      example:
        address: address
        port: 5249
        addToExistingLinuxMachine: true
        groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        alias: alias
        agentName: agentName
        instanceCredentials:
          password: password
          username: username
        machineConfiguration:
          credentials:
            password: password
            sshAuthenticationType: 0
            decryptionFailed: true
            userName: userName
            sshPrivateKeyId: sshPrivateKeyId
        failIfExists: true
      properties:
        address:
          minLength: 1
          type: string
        alias:
          nullable: true
          type: string
        port:
          format: int32
          maximum: 65535
          minimum: 1
          type: integer
        groupId:
          format: uuid
          nullable: true
          type: string
        agentName:
          nullable: true
          type: string
        machineConfiguration:
          $ref: '#/components/schemas/LinuxMachineConfiguration'
        instanceCredentials:
          $ref: '#/components/schemas/MySqlInstanceCredentialsDto'
        failIfExists:
          type: boolean
        addToExistingLinuxMachine:
          type: boolean
      required:
      - address
      - instanceCredentials
      - port
      type: object
    AddOracleInstanceRequest:
      additionalProperties: false
      example:
        address: address
        useTcps: true
        port: 5249
        addToExistingLinuxMachine: true
        groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        alias: alias
        agentName: agentName
        instanceCredentials:
          password: password
          username: username
        serviceName: serviceName
        machineConfiguration:
          credentials:
            password: password
            sshAuthenticationType: 0
            decryptionFailed: true
            userName: userName
            sshPrivateKeyId: sshPrivateKeyId
        failIfExists: true
      properties:
        address:
          minLength: 1
          type: string
        alias:
          nullable: true
          type: string
        port:
          format: int32
          maximum: 65535
          minimum: 1
          type: integer
        serviceName:
          minLength: 1
          type: string
        groupId:
          format: uuid
          nullable: true
          type: string
        agentName:
          nullable: true
          type: string
        machineConfiguration:
          $ref: '#/components/schemas/LinuxMachineConfiguration'
        instanceCredentials:
          $ref: '#/components/schemas/OracleInstanceCredentialsDto'
        failIfExists:
          type: boolean
        addToExistingLinuxMachine:
          type: boolean
        useTcps:
          type: boolean
      required:
      - address
      - instanceCredentials
      - port
      - serviceName
      type: object
    AddPostgresInstanceRequest:
      additionalProperties: false
      example:
        address: address
        environmentType: 1
        groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        amazonApiCredentials:
          secretKey: secretKey
          accessKey: accessKey
          roleArn: roleArn
          decryptionFailed: true
          region: region
          dbIdentifier: dbIdentifier
          authenticationMode: 7
        agentName: agentName
        instanceCredentials:
          password: password
          entraServicePrincipalCredentialId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          iamRoleArn: iamRoleArn
          iamAccessKey: iamAccessKey
          iamSecretKey: iamSecretKey
          authenticationMode: 6
          iamRegion: iamRegion
          username: username
        azureApiCredentials:
          servicePrincipalCredentialId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          authenticationMode: 0
        database: database
        port: 5249
        addToExistingLinuxMachine: true
        alias: alias
        machineConfiguration:
          credentials:
            password: password
            sshAuthenticationType: 0
            decryptionFailed: true
            userName: userName
            sshPrivateKeyId: sshPrivateKeyId
        failIfExists: true
      properties:
        address:
          minLength: 1
          type: string
        alias:
          nullable: true
          type: string
        port:
          format: int32
          maximum: 65535
          minimum: 1
          type: integer
        groupId:
          format: uuid
          nullable: true
          type: string
        machineConfiguration:
          $ref: '#/components/schemas/LinuxMachineConfiguration'
        instanceCredentials:
          $ref: '#/components/schemas/PostgresInstanceCredentialsDto'
        amazonApiCredentials:
          $ref: '#/components/schemas/AmazonApiCredentialsDto'
        azureApiCredentials:
          $ref: '#/components/schemas/AzureApiCredentialsDto'
        database:
          nullable: true
          type: string
        failIfExists:
          type: boolean
        environmentType:
          $ref: '#/components/schemas/EnvironmentTypeDto'
        addToExistingLinuxMachine:
          type: boolean
        agentName:
          nullable: true
          type: string
      required:
      - address
      - environmentType
      - instanceCredentials
      - port
      type: object
    AddPostgresInstanceResult:
      additionalProperties: false
      example:
        success: true
        message: message
      properties:
        success:
          type: boolean
        message:
          nullable: true
          type: string
      type: object
    AddPostgresInstanceResultJSendSuccess:
      additionalProperties: false
      example:
        data:
          success: true
          message: message
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/AddPostgresInstanceResult'
      type: object
    AddSqlServerByTypeModel:
      additionalProperties: false
      example:
        databases:
        - databases
        - databases
        postgresCredentials:
          entraServicePrincipalCredentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          password: password
          database: database
          iamRoleArn: iamRoleArn
          decryptionFailed: true
          userName: userName
          iamAccessKey: iamAccessKey
          iamSecretKey: iamSecretKey
          authenticationMode: 1
          iamRegion: iamRegion
        sqlServerConnectionProperties:
          executionTimeout: 2
          networkPacketSize: 5
          trustServerCertificate: true
          connectionTimeout: 5
          networkProtocol: 6
          portNumber: 1
          encryptConnection: true
        amazonApiCredentials:
          secretKey: secretKey
          accessKey: accessKey
          roleArn: roleArn
          decryptionFailed: true
          region: region
          dbIdentifier: dbIdentifier
          authenticationMode: 6
        groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        azureCredentials:
          password: password
          decryptionFailed: true
          userName: userName
          authenticationMode: 0
        agentName: agentName
        sqlServers: sqlServers
        type: 0
        azureApiCredentials:
          servicePrincipalCredentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          authenticationMode: 7
        windowsConnectionProperties:
          wmiConnectionMethod: 6
          autoDetectClusterName: true
          encodePortInServicePrincipalNameForWinRM: true
        linuxMachineCredentials:
          password: password
          sshAuthenticationType: 0
          decryptionFailed: true
          userName: userName
          sshPrivateKeyId: sshPrivateKeyId
        autoDiscoveryEnabled: true
        sqlServerCredentials:
          password: password
          isBaseMonitorAccount: true
          isSameAsWindowsCredentials: true
          decryptionFailed: true
          userName: userName
          authenticationMode: 6
        mySqlCredentials:
          password: password
          decryptionFailed: true
          userName: userName
          authenticationMode: 2
        alias: alias
        windowsMachineCredentials:
          password: password
          isBaseMonitorAccount: true
          decryptionFailed: true
          userName: userName
        oracleCredentials:
          password: password
          decryptionFailed: true
          userName: userName
          authenticationMode: 5
        mongoDbCredentials:
          password: password
          decryptionFailed: true
          userName: userName
          authenticationMode: 5
        group: group
      properties:
        windowsMachineCredentials:
          $ref: '#/components/schemas/WindowsMachineCredentialsModel'
        linuxMachineCredentials:
          $ref: '#/components/schemas/LinuxMachineCredentialsModel'
        sqlServerCredentials:
          $ref: '#/components/schemas/SqlServerCredentialsModel'
        sqlServerConnectionProperties:
          $ref: '#/components/schemas/SqlServerConnectionPropertiesModel'
        windowsConnectionProperties:
          $ref: '#/components/schemas/WindowsConnectionPropertiesModel'
        amazonApiCredentials:
          $ref: '#/components/schemas/AmazonApiCredentialsUpdateDto'
        postgresCredentials:
          $ref: '#/components/schemas/PostgresCredentialsModel'
        azureCredentials:
          $ref: '#/components/schemas/AzureCredentialsModel'
        oracleCredentials:
          $ref: '#/components/schemas/OracleCredentialsModel'
        mongoDbCredentials:
          $ref: '#/components/schemas/MongoDbCredentialsModel'
        mySqlCredentials:
          $ref: '#/components/schemas/MySqlCredentialsModel'
        azureApiCredentials:
          $ref: '#/components/schemas/AzureApiCredentialsModel'
        group:
          nullable: true
          type: string
        groupId:
          format: uuid
          nullable: true
          type: string
        agentName:
          nullable: true
          type: string
        sqlServers:
          nullable: true
          type: string
        alias:
          nullable: true
          type: string
        databases:
          items:
            type: string
          nullable: true
          type: array
        autoDiscoveryEnabled:
          type: boolean
        type:
          $ref: '#/components/schemas/MonitoredEntityType'
      type: object
    AddSqlServerRequest:
      additionalProperties: false
      example:
        machineConfig:
          windowsConnectionProperties:
            wmiConnectionMethod: 6
            autoDetectClusterName: true
            encodePortInServicePrincipalNameForWinRM: true
          sshAuthenticationType: 1
          credentials:
            password: password
            username: username
          sshPrivateKeyId: sshPrivateKeyId
          useBaseMonitorServiceAccount: true
        environmentType: 0
        groupId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        sqlServerInstanceConfig:
          credentials:
            password: password
            username: username
          sqlServerConnectionProperties:
            executionTimeout: 2
            networkPacketSize: 5
            trustServerCertificate: true
            connectionTimeout: 5
            networkProtocol: 6
            portNumber: 1
            encryptConnection: true
          useSameCredentialsAsHost: true
          authenticationMode: 5
          useBaseMonitorServiceAccount: true
        serverName: serverName
        agentName: agentName
      properties:
        serverName:
          minLength: 1
          type: string
        groupId:
          format: uuid
          nullable: true
          type: string
        agentName:
          nullable: true
          type: string
        environmentType:
          $ref: '#/components/schemas/EnvironmentTypeDto'
        machineConfig:
          $ref: '#/components/schemas/MachineConfiguration'
        sqlServerInstanceConfig:
          $ref: '#/components/schemas/SqlServerInstanceConfiguration'
      required:
      - machineConfig
      - serverName
      - sqlServerInstanceConfig
      type: object
    AdditionalMonitoringConfigItem:
      additionalProperties: false
      example:
        isQueryInstanceSamplingEnabled: true
        displayName: displayName
        name: name
        cir: ""
        isIndexSamplingEnabled: true
        group: group
        tags:
        - name: name
        - name: name
      properties:
        cir:
          format: entity-id
          type: ChannelInstanceRef
        displayName:
          type: string
        name:
          type: string
        group:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          type: array
        isIndexSamplingEnabled:
          nullable: true
          type: boolean
        isQueryInstanceSamplingEnabled:
          nullable: true
          type: boolean
      type: object
    AdditionalMonitoringConfigItemIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - isQueryInstanceSamplingEnabled: true
          displayName: displayName
          name: name
          cir: ""
          isIndexSamplingEnabled: true
          group: group
          tags:
          - name: name
          - name: name
        - isQueryInstanceSamplingEnabled: true
          displayName: displayName
          name: name
          cir: ""
          isIndexSamplingEnabled: true
          group: group
          tags:
          - name: name
          - name: name
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/AdditionalMonitoringConfigItem'
          type: array
      type: object
    AdditionalMonitoringConfigurationEntry:
      additionalProperties: false
      example:
        channelInstanceRef: ""
        indexUsageSamplingEnabled: true
        queryInstanceSamplingEnabled: true
      properties:
        channelInstanceRef:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        indexUsageSamplingEnabled:
          nullable: true
          type: boolean
        queryInstanceSamplingEnabled:
          nullable: true
          type: boolean
      type: object
    AgentStatusDto:
      additionalProperties: false
      example:
        lastMessageReceived: 2000-01-23T04:56:07.000+00:00
        userRunningAs: userRunningAs
        domain: domain
        name: name
        isOnline: true
        version: version
        platform: 0
      properties:
        name:
          nullable: true
          type: string
        lastMessageReceived:
          format: date-time
          type: string
        isOnline:
          type: boolean
        version:
          nullable: true
          type: string
        userRunningAs:
          nullable: true
          type: string
        domain:
          nullable: true
          type: string
        platform:
          $ref: '#/components/schemas/PlatformDto'
      required:
      - domain
      - isOnline
      - lastMessageReceived
      - name
      - platform
      - userRunningAs
      - version
      type: object
    AgentStatusDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - lastMessageReceived: 2000-01-23T04:56:07.000+00:00
          userRunningAs: userRunningAs
          domain: domain
          name: name
          isOnline: true
          version: version
          platform: 0
        - lastMessageReceived: 2000-01-23T04:56:07.000+00:00
          userRunningAs: userRunningAs
          domain: domain
          name: name
          isOnline: true
          version: version
          platform: 0
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/AgentStatusDto'
          type: array
      type: object
    AggregatedLagDto:
      additionalProperties: false
      example:
        writeLag: 1
        pendingLag: 6
        flushLag: 5
        collectionDate: 0
        replayLag: 5
      properties:
        collectionDate:
          format: int64
          type: integer
        pendingLag:
          format: int64
          type: integer
        writeLag:
          format: int64
          type: integer
        flushLag:
          format: int64
          type: integer
        replayLag:
          format: int64
          type: integer
      type: object
    AlertDetailDto:
      additionalProperties: false
      example:
        severity: 6
        alertType:
          name: name
          id: id
        endedAt: 2000-01-23T04:56:07.000+00:00
        monitoredEntity:
          name: name
          id: id
        raisedAt: 2000-01-23T04:56:07.000+00:00
        id: id
        sourceName: sourceName
        status: 0
      properties:
        monitoredEntity:
          $ref: '#/components/schemas/EntityDto'
        id:
          nullable: true
          type: string
        sourceName:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/AlertStatus'
        severity:
          $ref: '#/components/schemas/Severity'
        raisedAt:
          format: date-time
          type: string
        endedAt:
          format: date-time
          nullable: true
          type: string
        alertType:
          $ref: '#/components/schemas/AlertDetailTypeDto'
      type: object
    AlertDetailDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - severity: 6
          alertType:
            name: name
            id: id
          endedAt: 2000-01-23T04:56:07.000+00:00
          monitoredEntity:
            name: name
            id: id
          raisedAt: 2000-01-23T04:56:07.000+00:00
          id: id
          sourceName: sourceName
          status: 0
        - severity: 6
          alertType:
            name: name
            id: id
          endedAt: 2000-01-23T04:56:07.000+00:00
          monitoredEntity:
            name: name
            id: id
          raisedAt: 2000-01-23T04:56:07.000+00:00
          id: id
          sourceName: sourceName
          status: 0
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/AlertDetailDto'
          type: array
      type: object
    AlertDetailTypeDto:
      additionalProperties: false
      example:
        name: name
        id: id
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    AlertGroupDetails:
      additionalProperties: false
      example:
        alerts:
        - severity: 6
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          read: true
          entityType: ""
          objectName: objectName
          lastComment: lastComment
          alertId:
            value: 0
          status: status
        - severity: 6
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          read: true
          entityType: ""
          objectName: objectName
          lastComment: lastComment
          alertId:
            value: 0
          status: status
        alertType: alertType
        groupCir: ""
        totalCount: 0
      properties:
        alertType:
          nullable: true
          type: string
        groupCir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        totalCount:
          format: int32
          type: integer
        alerts:
          items:
            $ref: '#/components/schemas/AlertModel'
          nullable: true
          type: array
      type: object
    AlertGroupDetailsJSendSuccess:
      additionalProperties: false
      example:
        data:
          alerts:
          - severity: 6
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            read: true
            entityType: ""
            objectName: objectName
            lastComment: lastComment
            alertId:
              value: 0
            status: status
          - severity: 6
            lastUpdated: 2000-01-23T04:56:07.000+00:00
            read: true
            entityType: ""
            objectName: objectName
            lastComment: lastComment
            alertId:
              value: 0
            status: status
          alertType: alertType
          groupCir: ""
          totalCount: 0
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/AlertGroupDetails'
      type: object
    AlertHistoryCommentsDto:
      additionalProperties: false
      example:
        comments:
        - author: author
          commentId:
            value: 0
          alertId:
            value: 0
          datePosted: 6
          commentText: commentText
        - author: author
          commentId:
            value: 0
          alertId:
            value: 0
          datePosted: 6
          commentText: commentText
        alertId:
          value: 0
        severities:
        - severity: 0
          time: 2000-01-23T04:56:07.000+00:00
        - severity: 0
          time: 2000-01-23T04:56:07.000+00:00
      properties:
        alertId:
          $ref: '#/components/schemas/IntegerIdentifier'
        comments:
          items:
            $ref: '#/components/schemas/RecentAlertCommentDto'
          nullable: true
          type: array
        severities:
          items:
            $ref: '#/components/schemas/SeverityTimeDto'
          nullable: true
          type: array
      type: object
    AlertHistoryCommentsDtoIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - comments:
          - author: author
            commentId:
              value: 0
            alertId:
              value: 0
            datePosted: 6
            commentText: commentText
          - author: author
            commentId:
              value: 0
            alertId:
              value: 0
            datePosted: 6
            commentText: commentText
          alertId:
            value: 0
          severities:
          - severity: 0
            time: 2000-01-23T04:56:07.000+00:00
          - severity: 0
            time: 2000-01-23T04:56:07.000+00:00
        - comments:
          - author: author
            commentId:
              value: 0
            alertId:
              value: 0
            datePosted: 6
            commentText: commentText
          - author: author
            commentId:
              value: 0
            alertId:
              value: 0
            datePosted: 6
            commentText: commentText
          alertId:
            value: 0
          severities:
          - severity: 0
            time: 2000-01-23T04:56:07.000+00:00
          - severity: 0
            time: 2000-01-23T04:56:07.000+00:00
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/AlertHistoryCommentsDto'
          type: array
      type: object
    AlertInboxSelectionDto:
      additionalProperties: false
      example:
        selectedAlertIds:
        - baseMonitorName: baseMonitorName
          alertId:
            value: 0
        - baseMonitorName: baseMonitorName
          alertId:
            value: 0
        filterSettings:
          includeAlertTypeIds:
          - includeAlertTypeIds
          - includeAlertTypeIds
          selectedTags:
          - name: name
          - name: name
          includeStatus:
            severityMedium: true
            severityLow: true
            readNo: true
            commentNo: true
            readYes: true
            clearedYes: true
            statusActive: true
            statusEnded: true
            clearedNo: true
            statusEvent: true
            severityHigh: true
            commentYes: true
          timeRange:
            relativeMinutes: 6
            fromDateTime: 1
            type: 0
            timeWindowMode: 5
            toDateTime: 5
        lastUpdate: lastUpdate
        channelInstanceRefs:
        - channelInstanceRefs
        - channelInstanceRefs
        selectedGroupIds:
        - groupCir: ""
          alertType: 0
          lastUpdate: lastUpdate
          subType: 6
          firstUpdate: firstUpdate
        - groupCir: ""
          alertType: 0
          lastUpdate: lastUpdate
          subType: 6
          firstUpdate: firstUpdate
      properties:
        lastUpdate:
          nullable: true
          type: string
        selectedGroupIds:
          items:
            $ref: '#/components/schemas/GroupIdDto'
          nullable: true
          type: array
        selectedAlertIds:
          items:
            $ref: '#/components/schemas/QualifiedAlertIdDto'
          nullable: true
          type: array
        filterSettings:
          $ref: '#/components/schemas/FilterSettingsDto'
        channelInstanceRefs:
          items:
            type: string
          nullable: true
          type: array
      type: object
    AlertModel:
      additionalProperties: false
      example:
        severity: 6
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        read: true
        entityType: ""
        objectName: objectName
        lastComment: lastComment
        alertId:
          value: 0
        status: status
      properties:
        lastUpdated:
          format: date-time
          type: string
        status:
          nullable: true
          type: string
        objectName:
          nullable: true
          type: string
        alertId:
          $ref: '#/components/schemas/IntegerIdentifier'
        read:
          type: boolean
        lastComment:
          nullable: true
          type: string
        severity:
          $ref: '#/components/schemas/Severity'
        entityType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
      type: object
    AlertNotificationSettingsDto:
      additionalProperties: false
      example:
        scriptEnabled: true
        emailAddresses:
        - emailAddresses
        - emailAddresses
        webhookEnabled: true
        emailNotificationOption: 6
        slackEnabled: true
        snmpEnabled: true
      properties:
        emailNotificationOption:
          $ref: '#/components/schemas/EmailNotificationOptionDto'
        emailAddresses:
          items:
            type: string
          nullable: true
          type: array
        slackEnabled:
          nullable: true
          type: boolean
        snmpEnabled:
          nullable: true
          type: boolean
        webhookEnabled:
          nullable: true
          type: boolean
        scriptEnabled:
          nullable: true
          type: boolean
      type: object
    AlertReportTimeRangeType:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    AlertSettingsDto:
      additionalProperties: false
      example:
        comments: comments
        specificSettings: "{}"
        status: 0
        notificationSettings:
          scriptEnabled: true
          emailAddresses:
          - emailAddresses
          - emailAddresses
          webhookEnabled: true
          emailNotificationOption: 6
          slackEnabled: true
          snmpEnabled: true
      properties:
        status:
          $ref: '#/components/schemas/AlertStatusDto'
        comments:
          nullable: true
          readOnly: true
          type: string
        notificationSettings:
          $ref: '#/components/schemas/AlertNotificationSettingsDto'
        specificSettings:
          additionalProperties: false
          type: object
      type: object
    AlertSettingsDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          comments: comments
          specificSettings: "{}"
          status: 0
          notificationSettings:
            scriptEnabled: true
            emailAddresses:
            - emailAddresses
            - emailAddresses
            webhookEnabled: true
            emailNotificationOption: 6
            slackEnabled: true
            snmpEnabled: true
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/AlertSettingsDto'
      type: object
    AlertSeverityDto:
      enum:
      - 0
      - 1
      - 2
      - 3
      - -1
      format: int32
      type: integer
    AlertStatus:
      enum:
      - 0
      - 1
      - 2
      - 3
      format: int32
      type: integer
    AlertStatusDto:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    AlertSummaryDto:
      additionalProperties: false
      example:
        activeCount: 9
        alertType: 0
        mediumCount: 5
        subType: 6
        text: text
        highCount: 5
        priority: 1
        lowCount: 2
        highestSeverity: 7
        alertInboxUrl: alertInboxUrl
      properties:
        text:
          nullable: true
          type: string
        alertType:
          format: int64
          type: integer
        subType:
          format: int64
          type: integer
        priority:
          format: int32
          type: integer
        highCount:
          format: int32
          type: integer
        mediumCount:
          format: int32
          type: integer
        lowCount:
          format: int32
          type: integer
        highestSeverity:
          $ref: '#/components/schemas/AlertSeverityDto'
        activeCount:
          format: int32
          type: integer
        alertInboxUrl:
          nullable: true
          type: string
      type: object
    AlertSummaryViewModel:
      additionalProperties: false
      example:
        alertSummaries:
        - activeCount: 9
          alertType: 0
          mediumCount: 5
          subType: 6
          text: text
          highCount: 5
          priority: 1
          lowCount: 2
          highestSeverity: 7
          alertInboxUrl: alertInboxUrl
        - activeCount: 9
          alertType: 0
          mediumCount: 5
          subType: 6
          text: text
          highCount: 5
          priority: 1
          lowCount: 2
          highestSeverity: 7
          alertInboxUrl: alertInboxUrl
        allAlertsUrl: allAlertsUrl
      properties:
        alertSummaries:
          items:
            $ref: '#/components/schemas/AlertSummaryDto'
          nullable: true
          type: array
        allAlertsUrl:
          nullable: true
          type: string
      type: object
    AlertSummaryViewModelJSendSuccess:
      additionalProperties: false
      example:
        data:
          alertSummaries:
          - activeCount: 9
            alertType: 0
            mediumCount: 5
            subType: 6
            text: text
            highCount: 5
            priority: 1
            lowCount: 2
            highestSeverity: 7
            alertInboxUrl: alertInboxUrl
          - activeCount: 9
            alertType: 0
            mediumCount: 5
            subType: 6
            text: text
            highCount: 5
            priority: 1
            lowCount: 2
            highestSeverity: 7
            alertInboxUrl: alertInboxUrl
          allAlertsUrl: allAlertsUrl
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/AlertSummaryViewModel'
      type: object
    AlertSuppressionLevelDto:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    AlertSuppressionTargetDto:
      additionalProperties: false
      example:
        displayType: ""
        name: name
        fullName: fullName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        cir: ""
      properties:
        id:
          format: uuid
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        fullName:
          nullable: true
          type: string
        displayType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
        name:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
      type: object
    AlertSuppressionTargetDtoIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - displayType: ""
          name: name
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
        - displayType: ""
          name: name
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/AlertSuppressionTargetDto'
          type: array
      type: object
    AlertSuppressionTargetEditDto:
      additionalProperties: false
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
      properties:
        id:
          format: uuid
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
      type: object
    AlertSuppressionWindowDto:
      additionalProperties: false
      example:
        saturday: true
        alertTypeGroupToSuppress: 5
        start: start
        alertSuppressionLevel: 5
        thursday: true
        type: type
        targets:
        - displayType: ""
          name: name
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
        - displayType: ""
          name: name
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
        scheduleFrequency: 0
        duration: 3615
        sunday: true
        tuesday: true
        scheduleSetPosition: 2
        name: name
        wednesday: true
        friday: true
        id:
          value: 0
        monthlyScheduleDayOfWeek: 7
        startDate: 2000-01-23T04:56:07.000+00:00
        status: 1
        monday: true
      properties:
        type:
          nullable: true
          readOnly: true
          type: string
        scheduleFrequency:
          $ref: '#/components/schemas/ScheduleFrequencyDto'
        id:
          $ref: '#/components/schemas/IntegerIdentifier'
        name:
          nullable: true
          type: string
        start:
          format: date-span
          nullable: true
          type: string
        duration:
          format: int32
          maximum: 5999
          minimum: 0
          nullable: true
          type: integer
        status:
          $ref: '#/components/schemas/AlertSuppressionWindowStatusDto'
        alertSuppressionLevel:
          $ref: '#/components/schemas/AlertSuppressionLevelDto'
        alertTypeGroupToSuppress:
          $ref: '#/components/schemas/AlertTypeGroupToSuppressDto'
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
        sunday:
          type: boolean
        scheduleSetPosition:
          $ref: '#/components/schemas/ScheduleSetPositionDto'
        startDate:
          format: date-time
          nullable: true
          type: string
        monthlyScheduleDayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        targets:
          items:
            $ref: '#/components/schemas/MonitoredObjectWithIdDto'
          nullable: true
          type: array
      type: object
    AlertSuppressionWindowDtoIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - saturday: true
          alertTypeGroupToSuppress: 5
          start: start
          alertSuppressionLevel: 5
          thursday: true
          type: type
          targets:
          - displayType: ""
            name: name
            fullName: fullName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
            cir: ""
          - displayType: ""
            name: name
            fullName: fullName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
            cir: ""
          scheduleFrequency: 0
          duration: 3615
          sunday: true
          tuesday: true
          scheduleSetPosition: 2
          name: name
          wednesday: true
          friday: true
          id:
            value: 0
          monthlyScheduleDayOfWeek: 7
          startDate: 2000-01-23T04:56:07.000+00:00
          status: 1
          monday: true
        - saturday: true
          alertTypeGroupToSuppress: 5
          start: start
          alertSuppressionLevel: 5
          thursday: true
          type: type
          targets:
          - displayType: ""
            name: name
            fullName: fullName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
            cir: ""
          - displayType: ""
            name: name
            fullName: fullName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
            cir: ""
          scheduleFrequency: 0
          duration: 3615
          sunday: true
          tuesday: true
          scheduleSetPosition: 2
          name: name
          wednesday: true
          friday: true
          id:
            value: 0
          monthlyScheduleDayOfWeek: 7
          startDate: 2000-01-23T04:56:07.000+00:00
          status: 1
          monday: true
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/AlertSuppressionWindowDto'
          type: array
      type: object
    AlertSuppressionWindowDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          saturday: true
          alertTypeGroupToSuppress: 5
          start: start
          alertSuppressionLevel: 5
          thursday: true
          type: type
          targets:
          - displayType: ""
            name: name
            fullName: fullName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
            cir: ""
          - displayType: ""
            name: name
            fullName: fullName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
            cir: ""
          scheduleFrequency: 0
          duration: 3615
          sunday: true
          tuesday: true
          scheduleSetPosition: 2
          name: name
          wednesday: true
          friday: true
          id:
            value: 0
          monthlyScheduleDayOfWeek: 7
          startDate: 2000-01-23T04:56:07.000+00:00
          status: 1
          monday: true
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/AlertSuppressionWindowDto'
      type: object
    AlertSuppressionWindowEditDto:
      additionalProperties: false
      example:
        saturday: true
        alertTypeGroupToSuppress: 5
        start: start
        alertSuppressionLevel: 5
        thursday: true
        type: type
        targets:
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        - name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        scheduleFrequency: 0
        duration: 3615
        sunday: true
        tuesday: true
        scheduleSetPosition: 2
        name: name
        wednesday: true
        friday: true
        id:
          value: 0
        monthlyScheduleDayOfWeek: 7
        startDate: 2000-01-23T04:56:07.000+00:00
        status: 1
        monday: true
      properties:
        type:
          nullable: true
          readOnly: true
          type: string
        scheduleFrequency:
          $ref: '#/components/schemas/ScheduleFrequencyDto'
        id:
          $ref: '#/components/schemas/IntegerIdentifier'
        name:
          nullable: true
          type: string
        start:
          format: date-span
          nullable: true
          type: string
        duration:
          format: int32
          maximum: 5999
          minimum: 0
          nullable: true
          type: integer
        status:
          $ref: '#/components/schemas/AlertSuppressionWindowStatusDto'
        alertSuppressionLevel:
          $ref: '#/components/schemas/AlertSuppressionLevelDto'
        alertTypeGroupToSuppress:
          $ref: '#/components/schemas/AlertTypeGroupToSuppressDto'
        monday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
        sunday:
          type: boolean
        scheduleSetPosition:
          $ref: '#/components/schemas/ScheduleSetPositionDto'
        startDate:
          format: date-time
          nullable: true
          type: string
        monthlyScheduleDayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        targets:
          items:
            $ref: '#/components/schemas/AlertSuppressionTargetEditDto'
          nullable: true
          type: array
      type: object
    AlertSuppressionWindowStatusDto:
      enum:
      - 0
      - 1
      - 2
      - 3
      format: int32
      type: integer
    AlertTypeDto:
      additionalProperties: false
      example:
        name: name
        description: description
        id: id
        shortName: shortName
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        shortName:
          nullable: true
          type: string
      type: object
    AlertTypeDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - name: name
          description: description
          id: id
          shortName: shortName
        - name: name
          description: description
          id: id
          shortName: shortName
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/AlertTypeDto'
          type: array
      type: object
    AlertTypeGroupToSuppressDto:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    AlertsFilterTimeRangeTypeDto:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    AlertsFilterTimeWindowModesDto:
      enum:
      - 0
      - 1
      - 2
      - 3
      format: int32
      type: integer
    AllCredentialsModel:
      additionalProperties: false
      example:
        windowsConnectionProperties:
          wmiConnectionMethod: 6
          autoDetectClusterName: true
          encodePortInServicePrincipalNameForWinRM: true
        postgresCredentials:
          entraServicePrincipalCredentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          password: password
          database: database
          iamRoleArn: iamRoleArn
          decryptionFailed: true
          userName: userName
          iamAccessKey: iamAccessKey
          iamSecretKey: iamSecretKey
          authenticationMode: 1
          iamRegion: iamRegion
        linuxMachineCredentials:
          password: password
          sshAuthenticationType: 0
          decryptionFailed: true
          userName: userName
          sshPrivateKeyId: sshPrivateKeyId
        sqlServerConnectionProperties:
          executionTimeout: 2
          networkPacketSize: 5
          trustServerCertificate: true
          connectionTimeout: 5
          networkProtocol: 6
          portNumber: 1
          encryptConnection: true
        amazonApiCredentials:
          secretKey: secretKey
          accessKey: accessKey
          roleArn: roleArn
          decryptionFailed: true
          region: region
          dbIdentifier: dbIdentifier
          authenticationMode: 6
        sqlServerCredentials:
          password: password
          isBaseMonitorAccount: true
          isSameAsWindowsCredentials: true
          decryptionFailed: true
          userName: userName
          authenticationMode: 6
        azureCredentials:
          password: password
          decryptionFailed: true
          userName: userName
          authenticationMode: 0
        mySqlCredentials:
          password: password
          decryptionFailed: true
          userName: userName
          authenticationMode: 2
        windowsMachineCredentials:
          password: password
          isBaseMonitorAccount: true
          decryptionFailed: true
          userName: userName
        oracleCredentials:
          password: password
          decryptionFailed: true
          userName: userName
          authenticationMode: 5
        azureApiCredentials:
          servicePrincipalCredentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          authenticationMode: 7
        mongoDbCredentials:
          password: password
          decryptionFailed: true
          userName: userName
          authenticationMode: 5
      properties:
        windowsMachineCredentials:
          $ref: '#/components/schemas/WindowsMachineCredentialsModel'
        linuxMachineCredentials:
          $ref: '#/components/schemas/LinuxMachineCredentialsModel'
        sqlServerCredentials:
          $ref: '#/components/schemas/SqlServerCredentialsModel'
        sqlServerConnectionProperties:
          $ref: '#/components/schemas/SqlServerConnectionPropertiesModel'
        windowsConnectionProperties:
          $ref: '#/components/schemas/WindowsConnectionPropertiesModel'
        amazonApiCredentials:
          $ref: '#/components/schemas/AmazonApiCredentialsUpdateDto'
        postgresCredentials:
          $ref: '#/components/schemas/PostgresCredentialsModel'
        azureCredentials:
          $ref: '#/components/schemas/AzureCredentialsModel'
        oracleCredentials:
          $ref: '#/components/schemas/OracleCredentialsModel'
        mongoDbCredentials:
          $ref: '#/components/schemas/MongoDbCredentialsModel'
        mySqlCredentials:
          $ref: '#/components/schemas/MySqlCredentialsModel'
        azureApiCredentials:
          $ref: '#/components/schemas/AzureApiCredentialsModel'
      type: object
    AmazonApiCredentialsDto:
      additionalProperties: false
      example:
        secretKey: secretKey
        accessKey: accessKey
        roleArn: roleArn
        decryptionFailed: true
        region: region
        dbIdentifier: dbIdentifier
        authenticationMode: 7
      properties:
        authenticationMode:
          $ref: '#/components/schemas/AmazonAwsCredentialOptions'
        region:
          minLength: 1
          type: string
        dbIdentifier:
          minLength: 1
          type: string
        roleArn:
          nullable: true
          type: string
        accessKey:
          nullable: true
          type: string
        secretKey:
          nullable: true
          type: string
        decryptionFailed:
          type: boolean
      required:
      - authenticationMode
      - dbIdentifier
      - region
      type: object
    AmazonApiCredentialsUpdateDto:
      additionalProperties: false
      example:
        secretKey: secretKey
        accessKey: accessKey
        roleArn: roleArn
        decryptionFailed: true
        region: region
        dbIdentifier: dbIdentifier
        authenticationMode: 6
      properties:
        accessKey:
          nullable: true
          type: string
        secretKey:
          nullable: true
          type: string
        region:
          nullable: true
          type: string
        dbIdentifier:
          nullable: true
          type: string
        decryptionFailed:
          type: boolean
        authenticationMode:
          $ref: '#/components/schemas/AmazonAwsCredentialOptions'
        roleArn:
          nullable: true
          type: string
      type: object
    AmazonAuroraClusterDto:
      additionalProperties: false
      example:
        monitoredObjectState:
          isMonitored: true
          configurationState: configurationState
          status: status
        displayType: ""
        entityReference: ""
        baseMonitor:
          port: 0
          displayName: displayName
          name: name
          type: type
          isDisconnected: true
        name: name
        fullName: fullName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        cir: ""
        group:
          displayType: ""
          baseMonitor:
            port: 0
            displayName: displayName
            name: name
            type: type
            isDisconnected: true
          name: name
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
          parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tags:
        - name: name
        - name: name
      properties:
        name:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        group:
          $ref: '#/components/schemas/GroupDto'
        monitoredObjectState:
          $ref: '#/components/schemas/MonitoredObjectStateDto'
        baseMonitor:
          $ref: '#/components/schemas/BaseMonitorDto'
        type:
          nullable: true
          readOnly: true
          type: string
        displayType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          readOnly: true
          type: EntityType
        fullName:
          nullable: true
          readOnly: true
          type: string
        entityReference:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        tags:
          items:
            $ref: '#/components/schemas/TagDto'
          nullable: true
          type: array
      type: object
    AmazonAuroraClusterNodeDto:
      additionalProperties: false
      example:
        serverlessMaxCapacity: 6.027456183070403
        writeIops:
          minDate: 5
          maxValue: 5.962133916683182
          values:
          - ""
          - ""
          lastValueOrDefault: 1.4658129805029452
          name: name
          formattedLastValue: formattedLastValue
          maxDate: 2
          analysisLinkData:
            serializedTime: serializedTime
            metrics:
            - dataStream: dataStream
              cir: cir
            - dataStream: dataStream
              cir: cir
        identifier: identifier
        serverlessMinCapacity: 0.8008281904610115
        size: size
        instanceName: instanceName
        isWriter: true
        acuUtilization:
          minDate: 5
          maxValue: 5.962133916683182
          values:
          - ""
          - ""
          lastValueOrDefault: 1.4658129805029452
          name: name
          formattedLastValue: formattedLastValue
          maxDate: 2
          analysisLinkData:
            serializedTime: serializedTime
            metrics:
            - dataStream: dataStream
              cir: cir
            - dataStream: dataStream
              cir: cir
        location: location
        readIops:
          minDate: 5
          maxValue: 5.962133916683182
          values:
          - ""
          - ""
          lastValueOrDefault: 1.4658129805029452
          name: name
          formattedLastValue: formattedLastValue
          maxDate: 2
          analysisLinkData:
            serializedTime: serializedTime
            metrics:
            - dataStream: dataStream
              cir: cir
            - dataStream: dataStream
              cir: cir
        status: status
      properties:
        identifier:
          nullable: true
          type: string
        instanceName:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        isWriter:
          type: boolean
        location:
          nullable: true
          type: string
        size:
          nullable: true
          type: string
        serverlessMinCapacity:
          format: double
          type: number
        serverlessMaxCapacity:
          format: double
          type: number
        acuUtilization:
          $ref: '#/components/schemas/DoubleSparklineJsModel'
        writeIops:
          $ref: '#/components/schemas/DoubleSparklineJsModel'
        readIops:
          $ref: '#/components/schemas/DoubleSparklineJsModel'
      type: object
    AmazonAuroraClusterNodeDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - serverlessMaxCapacity: 6.027456183070403
          writeIops:
            minDate: 5
            maxValue: 5.962133916683182
            values:
            - ""
            - ""
            lastValueOrDefault: 1.4658129805029452
            name: name
            formattedLastValue: formattedLastValue
            maxDate: 2
            analysisLinkData:
              serializedTime: serializedTime
              metrics:
              - dataStream: dataStream
                cir: cir
              - dataStream: dataStream
                cir: cir
          identifier: identifier
          serverlessMinCapacity: 0.8008281904610115
          size: size
          instanceName: instanceName
          isWriter: true
          acuUtilization:
            minDate: 5
            maxValue: 5.962133916683182
            values:
            - ""
            - ""
            lastValueOrDefault: 1.4658129805029452
            name: name
            formattedLastValue: formattedLastValue
            maxDate: 2
            analysisLinkData:
              serializedTime: serializedTime
              metrics:
              - dataStream: dataStream
                cir: cir
              - dataStream: dataStream
                cir: cir
          location: location
          readIops:
            minDate: 5
            maxValue: 5.962133916683182
            values:
            - ""
            - ""
            lastValueOrDefault: 1.4658129805029452
            name: name
            formattedLastValue: formattedLastValue
            maxDate: 2
            analysisLinkData:
              serializedTime: serializedTime
              metrics:
              - dataStream: dataStream
                cir: cir
              - dataStream: dataStream
                cir: cir
          status: status
        - serverlessMaxCapacity: 6.027456183070403
          writeIops:
            minDate: 5
            maxValue: 5.962133916683182
            values:
            - ""
            - ""
            lastValueOrDefault: 1.4658129805029452
            name: name
            formattedLastValue: formattedLastValue
            maxDate: 2
            analysisLinkData:
              serializedTime: serializedTime
              metrics:
              - dataStream: dataStream
                cir: cir
              - dataStream: dataStream
                cir: cir
          identifier: identifier
          serverlessMinCapacity: 0.8008281904610115
          size: size
          instanceName: instanceName
          isWriter: true
          acuUtilization:
            minDate: 5
            maxValue: 5.962133916683182
            values:
            - ""
            - ""
            lastValueOrDefault: 1.4658129805029452
            name: name
            formattedLastValue: formattedLastValue
            maxDate: 2
            analysisLinkData:
              serializedTime: serializedTime
              metrics:
              - dataStream: dataStream
                cir: cir
              - dataStream: dataStream
                cir: cir
          location: location
          readIops:
            minDate: 5
            maxValue: 5.962133916683182
            values:
            - ""
            - ""
            lastValueOrDefault: 1.4658129805029452
            name: name
            formattedLastValue: formattedLastValue
            maxDate: 2
            analysisLinkData:
              serializedTime: serializedTime
              metrics:
              - dataStream: dataStream
                cir: cir
              - dataStream: dataStream
                cir: cir
          status: status
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/AmazonAuroraClusterNodeDto'
          type: array
      type: object
    AmazonAwsCredentialOptions:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    AmazonRdsHostDto:
      additionalProperties: false
      example:
        monitoredObjectState:
          isMonitored: true
          configurationState: configurationState
          status: status
        displayType: ""
        entityReference: ""
        baseMonitor:
          port: 0
          displayName: displayName
          name: name
          type: type
          isDisconnected: true
        name: name
        fullName: fullName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        cir: ""
        group:
          displayType: ""
          baseMonitor:
            port: 0
            displayName: displayName
            name: name
            type: type
            isDisconnected: true
          name: name
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
          parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tags:
        - name: name
        - name: name
      properties:
        name:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        group:
          $ref: '#/components/schemas/GroupDto'
        monitoredObjectState:
          $ref: '#/components/schemas/MonitoredObjectStateDto'
        baseMonitor:
          $ref: '#/components/schemas/BaseMonitorDto'
        type:
          nullable: true
          readOnly: true
          type: string
        displayType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          readOnly: true
          type: EntityType
        fullName:
          nullable: true
          readOnly: true
          type: string
        entityReference:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        tags:
          items:
            $ref: '#/components/schemas/TagDto'
          nullable: true
          type: array
      type: object
    AmazonRdsHostRegionDto:
      additionalProperties: false
      example:
        systemName: systemName
        displayName: displayName
      properties:
        displayName:
          nullable: true
          type: string
        systemName:
          nullable: true
          type: string
      type: object
    AmazonRdsHostRegionDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - systemName: systemName
          displayName: displayName
        - systemName: systemName
          displayName: displayName
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/AmazonRdsHostRegionDto'
          type: array
      type: object
    AmazonRdsSqlServerDto:
      additionalProperties: false
      example:
        monitoredObjectState:
          isMonitored: true
          configurationState: configurationState
          status: status
        displayType: ""
        entityReference: ""
        baseMonitor:
          port: 0
          displayName: displayName
          name: name
          type: type
          isDisconnected: true
        name: name
        alias: alias
        fullName: fullName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        cir: ""
        group:
          displayType: ""
          baseMonitor:
            port: 0
            displayName: displayName
            name: name
            type: type
            isDisconnected: true
          name: name
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
          parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tags:
        - name: name
        - name: name
      properties:
        name:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        group:
          $ref: '#/components/schemas/GroupDto'
        monitoredObjectState:
          $ref: '#/components/schemas/MonitoredObjectStateDto'
        baseMonitor:
          $ref: '#/components/schemas/BaseMonitorDto'
        alias:
          nullable: true
          type: string
        type:
          nullable: true
          readOnly: true
          type: string
        displayType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          readOnly: true
          type: EntityType
        fullName:
          nullable: true
          readOnly: true
          type: string
        entityReference:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        tags:
          items:
            $ref: '#/components/schemas/TagDto'
          nullable: true
          type: array
      type: object
    AmazonRdsSqlServerDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          monitoredObjectState:
            isMonitored: true
            configurationState: configurationState
            status: status
          displayType: ""
          entityReference: ""
          baseMonitor:
            port: 0
            displayName: displayName
            name: name
            type: type
            isDisconnected: true
          name: name
          alias: alias
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
          group:
            displayType: ""
            baseMonitor:
              port: 0
              displayName: displayName
              name: name
              type: type
              isDisconnected: true
            name: name
            fullName: fullName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
            cir: ""
            parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tags:
          - name: name
          - name: name
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/AmazonRdsSqlServerDto'
      type: object
    AnalysisLinkData:
      additionalProperties: false
      example:
        serializedTime: serializedTime
        metrics:
        - dataStream: dataStream
          cir: cir
        - dataStream: dataStream
          cir: cir
      properties:
        serializedTime:
          nullable: true
          type: string
        metrics:
          items:
            $ref: '#/components/schemas/AnalysisLinkDataMetric'
          nullable: true
          type: array
      type: object
    AnalysisLinkDataMetric:
      additionalProperties: false
      example:
        dataStream: dataStream
        cir: cir
      properties:
        cir:
          nullable: true
          type: string
        dataStream:
          nullable: true
          type: string
      type: object
    Annotation:
      additionalProperties: false
      example:
        databaseName: databaseName
        instanceName: instanceName
        specificInfo: specificInfo
        description: description
        source: source
        utcDate: 2000-01-23T04:56:07.000+00:00
        url: url
      properties:
        instanceName:
          minLength: 1
          type: string
        utcDate:
          format: date-time
          type: string
        description:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
        source:
          nullable: true
          type: string
        databaseName:
          nullable: true
          type: string
        specificInfo:
          nullable: true
          type: string
      required:
      - instanceName
      - utcDate
      type: object
    AuthPrincipalDto:
      additionalProperties: false
      example:
        all: true
        principalRole: 0
        baseMonitor:
          port: 0
          displayName: displayName
          name: name
          type: type
          isDisconnected: true
        name: name
        groups:
        - displayType: ""
          baseMonitor:
            port: 0
            displayName: displayName
            name: name
            type: type
            isDisconnected: true
          name: name
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
          parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - displayType: ""
          baseMonitor:
            port: 0
            displayName: displayName
            name: name
            type: type
            isDisconnected: true
          name: name
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
          parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        authenticationType: 1
        monitoredObjects:
        - name: name
          type: type
        - name: name
          type: type
        principalType: 6
      properties:
        name:
          nullable: true
          type: string
        baseMonitor:
          $ref: '#/components/schemas/BaseMonitorDto'
        principalRole:
          $ref: '#/components/schemas/PrincipalRole'
        principalType:
          $ref: '#/components/schemas/PrincipalType'
        groups:
          items:
            $ref: '#/components/schemas/GroupDto'
          nullable: true
          type: array
        monitoredObjects:
          items:
            $ref: '#/components/schemas/MonitoredObjectDto'
          nullable: true
          type: array
        all:
          type: boolean
        authenticationType:
          $ref: '#/components/schemas/AuthenticationType'
      type: object
    AuthPrincipalDtoIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - all: true
          principalRole: 0
          baseMonitor:
            port: 0
            displayName: displayName
            name: name
            type: type
            isDisconnected: true
          name: name
          groups:
          - displayType: ""
            baseMonitor:
              port: 0
              displayName: displayName
              name: name
              type: type
              isDisconnected: true
            name: name
            fullName: fullName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
            cir: ""
            parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - displayType: ""
            baseMonitor:
              port: 0
              displayName: displayName
              name: name
              type: type
              isDisconnected: true
            name: name
            fullName: fullName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
            cir: ""
            parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          authenticationType: 1
          monitoredObjects:
          - name: name
            type: type
          - name: name
            type: type
          principalType: 6
        - all: true
          principalRole: 0
          baseMonitor:
            port: 0
            displayName: displayName
            name: name
            type: type
            isDisconnected: true
          name: name
          groups:
          - displayType: ""
            baseMonitor:
              port: 0
              displayName: displayName
              name: name
              type: type
              isDisconnected: true
            name: name
            fullName: fullName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
            cir: ""
            parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - displayType: ""
            baseMonitor:
              port: 0
              displayName: displayName
              name: name
              type: type
              isDisconnected: true
            name: name
            fullName: fullName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
            cir: ""
            parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          authenticationType: 1
          monitoredObjects:
          - name: name
            type: type
          - name: name
            type: type
          principalType: 6
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/AuthPrincipalDto'
          type: array
      type: object
    AuthPrincipalDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          all: true
          principalRole: 0
          baseMonitor:
            port: 0
            displayName: displayName
            name: name
            type: type
            isDisconnected: true
          name: name
          groups:
          - displayType: ""
            baseMonitor:
              port: 0
              displayName: displayName
              name: name
              type: type
              isDisconnected: true
            name: name
            fullName: fullName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
            cir: ""
            parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          - displayType: ""
            baseMonitor:
              port: 0
              displayName: displayName
              name: name
              type: type
              isDisconnected: true
            name: name
            fullName: fullName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
            cir: ""
            parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          authenticationType: 1
          monitoredObjects:
          - name: name
            type: type
          - name: name
            type: type
          principalType: 6
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/AuthPrincipalDto'
      type: object
    AuthenticatedUserDto:
      additionalProperties: false
      example:
        authorizationLevel: 0
        groups:
        - groups
        - groups
        authenticationType: 6
        userName: userName
      properties:
        groups:
          items:
            type: string
          type: array
        authorizationLevel:
          $ref: '#/components/schemas/AuthorizationLevel'
        authenticationType:
          $ref: '#/components/schemas/AuthenticationTypeDto'
        userName:
          nullable: true
          type: string
      type: object
    AuthenticatedUserDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          authorizationLevel: 0
          groups:
          - groups
          - groups
          authenticationType: 6
          userName: userName
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/AuthenticatedUserDto'
      type: object
    AuthenticationType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      format: int32
      type: integer
    AuthenticationTypeDto:
      enum:
      - 1
      - 2
      - 5
      format: int32
      type: integer
    AuthenticationViewModel:
      additionalProperties: false
      example:
        hasActiveDirectorySettings: true
        activeDirectoryDomains:
        - password: password
          domainName: domainName
          baseDN: baseDN
          useBaseMonitorServiceAccount: true
          username: username
        - password: password
          domainName: domainName
          baseDN: baseDN
          useBaseMonitorServiceAccount: true
          username: username
        authenticationType: 0
      properties:
        authenticationType:
          $ref: '#/components/schemas/AuthenticationTypeDto'
        activeDirectoryDomains:
          items:
            $ref: '#/components/schemas/ActiveDirectoryDomainViewModel'
          type: array
        hasActiveDirectorySettings:
          type: boolean
      type: object
    AuthenticationViewModelJSendSuccess:
      additionalProperties: false
      example:
        data:
          hasActiveDirectorySettings: true
          activeDirectoryDomains:
          - password: password
            domainName: domainName
            baseDN: baseDN
            useBaseMonitorServiceAccount: true
            username: username
          - password: password
            domainName: domainName
            baseDN: baseDN
            useBaseMonitorServiceAccount: true
            username: username
          authenticationType: 0
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/AuthenticationViewModel'
      type: object
    AuthorizationLevel:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 2147483647
      format: int32
      type: integer
    AzureApiAuthenticationMode:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    AzureApiCredentialsDto:
      additionalProperties: false
      example:
        servicePrincipalCredentialId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        authenticationMode: 0
      properties:
        authenticationMode:
          $ref: '#/components/schemas/AzureApiAuthenticationMode'
        servicePrincipalCredentialId:
          format: uuid
          nullable: true
          type: string
      required:
      - authenticationMode
      type: object
    AzureApiCredentialsModel:
      additionalProperties: false
      example:
        servicePrincipalCredentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        authenticationMode: 7
      properties:
        authenticationMode:
          $ref: '#/components/schemas/AzureApiAuthenticationMode'
        servicePrincipalCredentialsId:
          format: uuid
          nullable: true
          type: string
      type: object
    AzureAuthenticationMode:
      enum:
      - 0
      - 1
      - 2
      - 3
      format: int32
      type: integer
    AzureCredentialsModel:
      additionalProperties: false
      example:
        password: password
        decryptionFailed: true
        userName: userName
        authenticationMode: 0
      properties:
        userName:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        decryptionFailed:
          type: boolean
        authenticationMode:
          $ref: '#/components/schemas/AzureAuthenticationMode'
      type: object
    AzureDetectionOptionsDto:
      additionalProperties: false
      example:
        bearerToken: bearerToken
        subscriptionId: subscriptionId
      properties:
        subscriptionId:
          nullable: true
          type: string
        bearerToken:
          nullable: true
          type: string
      type: object
    AzureFlexHostDto:
      additionalProperties: false
      example:
        monitoredObjectState:
          isMonitored: true
          configurationState: configurationState
          status: status
        displayType: ""
        entityReference: ""
        baseMonitor:
          port: 0
          displayName: displayName
          name: name
          type: type
          isDisconnected: true
        name: name
        fullName: fullName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        cir: ""
        group:
          displayType: ""
          baseMonitor:
            port: 0
            displayName: displayName
            name: name
            type: type
            isDisconnected: true
          name: name
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
          parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tags:
        - name: name
        - name: name
      properties:
        name:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        group:
          $ref: '#/components/schemas/GroupDto'
        monitoredObjectState:
          $ref: '#/components/schemas/MonitoredObjectStateDto'
        baseMonitor:
          $ref: '#/components/schemas/BaseMonitorDto'
        type:
          readOnly: true
          type: string
        displayType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          readOnly: true
          type: EntityType
        fullName:
          readOnly: true
          type: string
        entityReference:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        tags:
          items:
            $ref: '#/components/schemas/TagDto'
          nullable: true
          type: array
      type: object
    AzureManagedInstanceDto:
      additionalProperties: false
      example:
        monitoredObjectState:
          isMonitored: true
          configurationState: configurationState
          status: status
        displayType: ""
        entityReference: ""
        baseMonitor:
          port: 0
          displayName: displayName
          name: name
          type: type
          isDisconnected: true
        name: name
        alias: alias
        fullName: fullName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        cir: ""
        group:
          displayType: ""
          baseMonitor:
            port: 0
            displayName: displayName
            name: name
            type: type
            isDisconnected: true
          name: name
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
          parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tags:
        - name: name
        - name: name
      properties:
        name:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        group:
          $ref: '#/components/schemas/GroupDto'
        monitoredObjectState:
          $ref: '#/components/schemas/MonitoredObjectStateDto'
        alias:
          nullable: true
          type: string
        baseMonitor:
          $ref: '#/components/schemas/BaseMonitorDto'
        type:
          nullable: true
          readOnly: true
          type: string
        displayType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          readOnly: true
          type: EntityType
        fullName:
          nullable: true
          readOnly: true
          type: string
        entityReference:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        tags:
          items:
            $ref: '#/components/schemas/TagDto'
          nullable: true
          type: array
      type: object
    AzureManagedInstanceDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          monitoredObjectState:
            isMonitored: true
            configurationState: configurationState
            status: status
          displayType: ""
          entityReference: ""
          baseMonitor:
            port: 0
            displayName: displayName
            name: name
            type: type
            isDisconnected: true
          name: name
          alias: alias
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
          group:
            displayType: ""
            baseMonitor:
              port: 0
              displayName: displayName
              name: name
              type: type
              isDisconnected: true
            name: name
            fullName: fullName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
            cir: ""
            parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tags:
          - name: name
          - name: name
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/AzureManagedInstanceDto'
      type: object
    AzureSqlDatabaseDto:
      additionalProperties: false
      example:
        displayType: ""
        name: name
        alias: alias
        fullName: fullName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        azureSqlServer:
          monitoredObjectState:
            isMonitored: true
            configurationState: configurationState
            status: status
          displayType: ""
          baseMonitor:
            port: 0
            displayName: displayName
            name: name
            type: type
            isDisconnected: true
          autoDiscoveryEnabled: true
          name: name
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
          group:
            displayType: ""
            baseMonitor:
              port: 0
              displayName: displayName
              name: name
              type: type
              isDisconnected: true
            name: name
            fullName: fullName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
            cir: ""
            parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        cir: ""
      properties:
        name:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        azureSqlServer:
          $ref: '#/components/schemas/AzureSqlServerDto'
        alias:
          nullable: true
          type: string
        type:
          nullable: true
          readOnly: true
          type: string
        displayType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          readOnly: true
          type: EntityType
        fullName:
          nullable: true
          readOnly: true
          type: string
      type: object
    AzureSqlDatabaseDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - displayType: ""
          name: name
          alias: alias
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          azureSqlServer:
            monitoredObjectState:
              isMonitored: true
              configurationState: configurationState
              status: status
            displayType: ""
            baseMonitor:
              port: 0
              displayName: displayName
              name: name
              type: type
              isDisconnected: true
            autoDiscoveryEnabled: true
            name: name
            fullName: fullName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
            cir: ""
            group:
              displayType: ""
              baseMonitor:
                port: 0
                displayName: displayName
                name: name
                type: type
                isDisconnected: true
              name: name
              fullName: fullName
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              type: type
              cir: ""
              parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
        - displayType: ""
          name: name
          alias: alias
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          azureSqlServer:
            monitoredObjectState:
              isMonitored: true
              configurationState: configurationState
              status: status
            displayType: ""
            baseMonitor:
              port: 0
              displayName: displayName
              name: name
              type: type
              isDisconnected: true
            autoDiscoveryEnabled: true
            name: name
            fullName: fullName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
            cir: ""
            group:
              displayType: ""
              baseMonitor:
                port: 0
                displayName: displayName
                name: name
                type: type
                isDisconnected: true
              name: name
              fullName: fullName
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              type: type
              cir: ""
              parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/AzureSqlDatabaseDto'
          type: array
      type: object
    AzureSqlDatabasesDto:
      additionalProperties: false
      example:
        allDatabases:
        - name: name
          creationDate: 2000-01-23T04:56:07.000+00:00
        - name: name
          creationDate: 2000-01-23T04:56:07.000+00:00
        autoDiscoveryEnabled: true
      properties:
        allDatabases:
          items:
            $ref: '#/components/schemas/DetectedAzureSqlDatabaseDto'
          nullable: true
          type: array
        autoDiscoveryEnabled:
          type: boolean
      type: object
    AzureSqlDatabasesDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          allDatabases:
          - name: name
            creationDate: 2000-01-23T04:56:07.000+00:00
          - name: name
            creationDate: 2000-01-23T04:56:07.000+00:00
          autoDiscoveryEnabled: true
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/AzureSqlDatabasesDto'
      type: object
    AzureSqlServerDto:
      additionalProperties: false
      example:
        monitoredObjectState:
          isMonitored: true
          configurationState: configurationState
          status: status
        displayType: ""
        baseMonitor:
          port: 0
          displayName: displayName
          name: name
          type: type
          isDisconnected: true
        autoDiscoveryEnabled: true
        name: name
        fullName: fullName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        cir: ""
        group:
          displayType: ""
          baseMonitor:
            port: 0
            displayName: displayName
            name: name
            type: type
            isDisconnected: true
          name: name
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
          parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        group:
          $ref: '#/components/schemas/GroupDto'
        monitoredObjectState:
          $ref: '#/components/schemas/MonitoredObjectStateDto'
        baseMonitor:
          $ref: '#/components/schemas/BaseMonitorDto'
        autoDiscoveryEnabled:
          type: boolean
        type:
          nullable: true
          readOnly: true
          type: string
        displayType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          readOnly: true
          type: EntityType
        fullName:
          nullable: true
          readOnly: true
          type: string
      type: object
    AzureTenantDto:
      additionalProperties: false
      example:
        clientId: clientId
        createdDate: 2000-01-23T04:56:07.000+00:00
        partiallyRedactedClientSecret: partiallyRedactedClientSecret
        name: name
        tenantId: tenantId
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        usages: 0
        type: type
      properties:
        type:
          nullable: true
          readOnly: true
          type: string
        id:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
        tenantId:
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
        partiallyRedactedClientSecret:
          nullable: true
          type: string
        createdDate:
          format: date-time
          type: string
        usages:
          format: int32
          type: integer
      type: object
    AzureTenantDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - clientId: clientId
          createdDate: 2000-01-23T04:56:07.000+00:00
          partiallyRedactedClientSecret: partiallyRedactedClientSecret
          name: name
          tenantId: tenantId
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          usages: 0
          type: type
        - clientId: clientId
          createdDate: 2000-01-23T04:56:07.000+00:00
          partiallyRedactedClientSecret: partiallyRedactedClientSecret
          name: name
          tenantId: tenantId
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          usages: 0
          type: type
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/AzureTenantDto'
          type: array
      type: object
    BackupHistoriesDto:
      additionalProperties: false
      example:
        averageLogBackupInterval: 2.3021358869347655
        averageFullBackupInterval: 5.962133916683182
        averageDiffBackupInterval: 5.637376656633329
        history:
        - backedUpByRedgateSqlBackup: true
          nativeBackup: true
          backedUpBy: backedUpBy
          serverName: serverName
          type: 6
          serverOverviewUrl: serverOverviewUrl
          duration: 0.8008281904610115
          serverAlias: serverAlias
          size: 1
          copyOnly: true
          encrypted: true
          passwordProtected: true
          dateRun: 2000-01-23T04:56:07.000+00:00
          location: location
          compressed: true
        - backedUpByRedgateSqlBackup: true
          nativeBackup: true
          backedUpBy: backedUpBy
          serverName: serverName
          type: 6
          serverOverviewUrl: serverOverviewUrl
          duration: 0.8008281904610115
          serverAlias: serverAlias
          size: 1
          copyOnly: true
          encrypted: true
          passwordProtected: true
          dateRun: 2000-01-23T04:56:07.000+00:00
          location: location
          compressed: true
      properties:
        history:
          items:
            $ref: '#/components/schemas/BackupHistoryDto'
          nullable: true
          type: array
        averageFullBackupInterval:
          format: double
          type: number
        averageDiffBackupInterval:
          format: double
          type: number
        averageLogBackupInterval:
          format: double
          type: number
      type: object
    BackupHistoryDto:
      additionalProperties: false
      example:
        backedUpByRedgateSqlBackup: true
        nativeBackup: true
        backedUpBy: backedUpBy
        serverName: serverName
        type: 6
        serverOverviewUrl: serverOverviewUrl
        duration: 0.8008281904610115
        serverAlias: serverAlias
        size: 1
        copyOnly: true
        encrypted: true
        passwordProtected: true
        dateRun: 2000-01-23T04:56:07.000+00:00
        location: location
        compressed: true
      properties:
        serverOverviewUrl:
          nullable: true
          type: string
        serverName:
          nullable: true
          type: string
        serverAlias:
          nullable: true
          type: string
        dateRun:
          format: date-time
          nullable: true
          type: string
        duration:
          format: double
          nullable: true
          type: number
        type:
          $ref: '#/components/schemas/BackupType'
        size:
          format: int64
          nullable: true
          type: integer
        copyOnly:
          type: boolean
        compressed:
          type: boolean
        passwordProtected:
          type: boolean
        encrypted:
          type: boolean
        location:
          nullable: true
          type: string
        nativeBackup:
          type: boolean
        backedUpByRedgateSqlBackup:
          type: boolean
        backedUpBy:
          nullable: true
          type: string
      type: object
    BackupType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      format: int32
      type: integer
    BackupsRowDto:
      additionalProperties: false
      example:
        cluster: cluster
        sqlInstanceEntityType: ""
        log:
          backedUpByRedgateSqlBackup: true
          nativeBackup: true
          size: 6
          endDate: 2000-01-23T04:56:07.000+00:00
          totalSeconds: 0.8008281904610115
          startDate: 2000-01-23T04:56:07.000+00:00
        isCopyOnly: true
        sortableDatabaseName: sortableDatabaseName
        maxRpoMinutes: 1.4658129805029452
        hasLogBackupWarning: true
        differential:
          backedUpByRedgateSqlBackup: true
          nativeBackup: true
          size: 6
          endDate: 2000-01-23T04:56:07.000+00:00
          totalSeconds: 0.8008281904610115
          startDate: 2000-01-23T04:56:07.000+00:00
        database: database
        servers:
        - serverDisplayName: serverDisplayName
          displayName: displayName
          clusterName: clusterName
          alias: alias
          fullyQualifiedName: fullyQualifiedName
          cir: cir
          tags:
          - name: name
          - name: name
        - serverDisplayName: serverDisplayName
          displayName: displayName
          clusterName: clusterName
          alias: alias
          fullyQualifiedName: fullyQualifiedName
          cir: cir
          tags:
          - name: name
          - name: name
        rpoBucket: rpoBucket
        recoveryModel: recoveryModel
        allRpo:
        - 5.962133916683182
        - 5.962133916683182
        isSystemDatabase: true
        group: group
        full:
          backedUpByRedgateSqlBackup: true
          nativeBackup: true
          size: 6
          endDate: 2000-01-23T04:56:07.000+00:00
          totalSeconds: 0.8008281904610115
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        servers:
          items:
            $ref: '#/components/schemas/EstateServerDto'
          type: array
        group:
          nullable: true
          type: string
        cluster:
          type: string
        database:
          type: string
        recoveryModel:
          type: string
        full:
          $ref: '#/components/schemas/EstateBackupDto'
        log:
          $ref: '#/components/schemas/EstateBackupDto'
        differential:
          $ref: '#/components/schemas/EstateBackupDto'
        maxRpoMinutes:
          format: double
          nullable: true
          type: number
        rpoBucket:
          nullable: true
          type: string
        allRpo:
          items:
            format: double
            type: number
          type: array
        sqlInstanceEntityType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
        isCopyOnly:
          type: boolean
        isSystemDatabase:
          readOnly: true
          type: boolean
        sortableDatabaseName:
          readOnly: true
          type: string
        hasLogBackupWarning:
          readOnly: true
          type: boolean
      required:
      - allRpo
      - cluster
      - database
      - differential
      - full
      - group
      - isCopyOnly
      - log
      - maxRpoMinutes
      - recoveryModel
      - rpoBucket
      - servers
      - sqlInstanceEntityType
      type: object
    BaseCurrentActivityFilterDto:
      additionalProperties: false
      example:
        targetIdentifier: targetIdentifier
        helpTitle: helpTitle
        helpUrl: helpUrl
        filterType: 0
        friendlyName: friendlyName
        targetIsMetadata: true
      properties:
        targetIdentifier:
          readOnly: true
          type: string
        targetIsMetadata:
          readOnly: true
          type: boolean
        friendlyName:
          readOnly: true
          type: string
        helpUrl:
          nullable: true
          readOnly: true
          type: string
        helpTitle:
          nullable: true
          readOnly: true
          type: string
        filterType:
          $ref: '#/components/schemas/CurrentActivityFilterTypeDto'
      type: object
    BaseMonitorConfigurationRequest:
      additionalProperties: false
      example:
        baseMonitorLocations:
        - portNum: 0
          isPrimary: true
          networkName: networkName
          alias: alias
          isDisconnected: true
        - portNum: 0
          isPrimary: true
          networkName: networkName
          alias: alias
          isDisconnected: true
      properties:
        baseMonitorLocations:
          items:
            $ref: '#/components/schemas/BaseMonitorLocationDto'
          type: array
      type: object
    BaseMonitorDto:
      additionalProperties: false
      example:
        port: 0
        displayName: displayName
        name: name
        type: type
        isDisconnected: true
      properties:
        name:
          nullable: true
          type: string
        type:
          nullable: true
          readOnly: true
          type: string
        displayName:
          nullable: true
          type: string
        port:
          format: int32
          type: integer
        isDisconnected:
          readOnly: true
          type: boolean
      type: object
    BaseMonitorDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - port: 0
          displayName: displayName
          name: name
          type: type
          isDisconnected: true
        - port: 0
          displayName: displayName
          name: name
          type: type
          isDisconnected: true
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/BaseMonitorDto'
          type: array
      type: object
    BaseMonitorDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          port: 0
          displayName: displayName
          name: name
          type: type
          isDisconnected: true
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/BaseMonitorDto'
      type: object
    BaseMonitorErrorReportingStatusDto:
      additionalProperties: false
      example:
        baseMonitorName: baseMonitorName
        isEnabled: true
      properties:
        baseMonitorName:
          nullable: true
          type: string
        isEnabled:
          type: boolean
      type: object
    BaseMonitorLocationDto:
      additionalProperties: false
      example:
        portNum: 0
        isPrimary: true
        networkName: networkName
        alias: alias
        isDisconnected: true
      properties:
        networkName:
          type: string
        portNum:
          format: int32
          type: integer
        alias:
          nullable: true
          type: string
        isDisconnected:
          type: boolean
        isPrimary:
          type: boolean
      type: object
    BaseMonitorModel:
      additionalProperties: false
      example:
        installLocation: installLocation
        databaseLocation: databaseLocation
        hasCredentialDecryptionFailed: true
        runtime: runtime
        userDomain: userDomain
        errorReportingEnabled: true
        versionNumber: versionNumber
        platform: 0
        hasUnsupportedEntities: true
        isDbConnected: true
        hasSupportedEntitiesWithUnsupportedCredentials: true
        repositoryDatabaseEngine: 6
        userRunningAs: userRunningAs
      properties:
        versionNumber:
          type: string
        installLocation:
          type: string
        userRunningAs:
          type: string
        userDomain:
          type: string
        databaseLocation:
          type: string
        runtime:
          type: string
        isDbConnected:
          type: boolean
        errorReportingEnabled:
          type: boolean
        hasCredentialDecryptionFailed:
          type: boolean
        hasUnsupportedEntities:
          type: boolean
        hasSupportedEntitiesWithUnsupportedCredentials:
          type: boolean
        platform:
          $ref: '#/components/schemas/PlatformDto'
        repositoryDatabaseEngine:
          $ref: '#/components/schemas/DatabaseEngineDto'
      type: object
    BaseMonitorModelJSendSuccess:
      additionalProperties: false
      example:
        data:
          installLocation: installLocation
          databaseLocation: databaseLocation
          hasCredentialDecryptionFailed: true
          runtime: runtime
          userDomain: userDomain
          errorReportingEnabled: true
          versionNumber: versionNumber
          platform: 0
          hasUnsupportedEntities: true
          isDbConnected: true
          hasSupportedEntitiesWithUnsupportedCredentials: true
          repositoryDatabaseEngine: 6
          userRunningAs: userRunningAs
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/BaseMonitorModel'
      type: object
    BaseMonitorPrimaryRequestDto:
      additionalProperties: false
      example:
        baseMonitorLocation:
          portNum: 0
          isPrimary: true
          networkName: networkName
          alias: alias
          isDisconnected: true
      properties:
        baseMonitorLocation:
          $ref: '#/components/schemas/BaseMonitorLocationDto'
      type: object
    BlockedBaseMonitorsDto:
      additionalProperties: false
      example:
        areBlockedBaseMonitors: true
        listOfBlockedBms: listOfBlockedBms
      properties:
        areBlockedBaseMonitors:
          type: boolean
        listOfBlockedBms:
          nullable: true
          type: string
      type: object
    BooleanJSendSuccess:
      additionalProperties: false
      example:
        data: true
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          type: boolean
      type: object
    ChannelKey:
      additionalProperties: false
      example:
        keys:
          key: ""
        propertyNames:
        - name: name
        - name: name
        count: 1
      properties:
        keys:
          additionalProperties: {}
          readOnly: true
          type: object
        propertyNames:
          items:
            $ref: '#/components/schemas/PropertyName'
          readOnly: true
          type: array
        count:
          format: int32
          readOnly: true
          type: integer
      type: object
    ChannelName:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    ChannelRef:
      additionalProperties: false
      example:
        parent: ""
        depth: 0
        isRoot: true
        leadingChannelRefs:
        - null
        - null
        qualifiedChannelName:
          parent: null
          tailQualifiedChannelName: null
          depth: 6
          isRoot: true
          qualifiedSubChannelNames:
          - null
          - null
          headChannelName:
            name: name
          subChannelNames:
          - name: name
          - name: name
          channelName:
            name: name
          qualifiedChannelNames:
          - null
          - null
        channelName:
          name: name
      properties:
        isRoot:
          readOnly: true
          type: boolean
        depth:
          format: int32
          readOnly: true
          type: integer
        parent:
          format: entity-id
          readOnly: true
          type: ChannelInstanceRef
        channelName:
          $ref: '#/components/schemas/ChannelName'
        leadingChannelRefs:
          items:
            $ref: '#/components/schemas/ChannelRef'
          readOnly: true
          type: array
        qualifiedChannelName:
          $ref: '#/components/schemas/QualifiedChannelName'
      type: object
    CloudServiceTestConnectionResultDto:
      additionalProperties: false
      example:
        success: true
        message: message
      properties:
        success:
          type: boolean
        message:
          nullable: true
          type: string
      required:
      - success
      type: object
    CloudServiceTestConnectionResultDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          success: true
          message: message
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/CloudServiceTestConnectionResultDto'
      type: object
    ClusterChannelInstanceRef:
      additionalProperties: false
      properties:
        channelRef:
          $ref: '#/components/schemas/ChannelRef'
        channelKey:
          $ref: '#/components/schemas/ChannelKey'
        channelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
        rootChannelInstanceRef:
          format: entity-id
          readOnly: true
          type: ChannelInstanceRef
        subChannelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
      type: object
    ClusterCredentialsModel:
      additionalProperties: false
      example:
        sqlServerCredentials:
          password: password
          isBaseMonitorAccount: true
          isSameAsWindowsCredentials: true
          decryptionFailed: true
          userName: userName
          authenticationMode: 6
        windowsMachineCredentials:
          password: password
          isBaseMonitorAccount: true
          decryptionFailed: true
          userName: userName
        clusterId: clusterId
      properties:
        clusterId:
          nullable: true
          type: string
        windowsMachineCredentials:
          $ref: '#/components/schemas/WindowsMachineCredentialsModel'
        sqlServerCredentials:
          $ref: '#/components/schemas/SqlServerCredentialsModel'
      type: object
    ClusterDto:
      additionalProperties: false
      example:
        monitoredObjectState:
          isMonitored: true
          configurationState: configurationState
          status: status
        displayType: ""
        baseMonitor:
          port: 0
          displayName: displayName
          name: name
          type: type
          isDisconnected: true
        name: name
        fullName: fullName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        cir: ""
        group:
          displayType: ""
          baseMonitor:
            port: 0
            displayName: displayName
            name: name
            type: type
            isDisconnected: true
          name: name
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
          parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        group:
          $ref: '#/components/schemas/GroupDto'
        monitoredObjectState:
          $ref: '#/components/schemas/MonitoredObjectStateDto'
        baseMonitor:
          $ref: '#/components/schemas/BaseMonitorDto'
        type:
          nullable: true
          readOnly: true
          type: string
        displayType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          readOnly: true
          type: EntityType
        fullName:
          nullable: true
          readOnly: true
          type: string
      type: object
    ClusterInstanceDto:
      additionalProperties: false
      example:
        monitoredObjectState:
          isMonitored: true
          configurationState: configurationState
          status: status
        cluster:
          monitoredObjectState:
            isMonitored: true
            configurationState: configurationState
            status: status
          displayType: ""
          baseMonitor:
            port: 0
            displayName: displayName
            name: name
            type: type
            isDisconnected: true
          name: name
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
          group:
            displayType: ""
            baseMonitor:
              port: 0
              displayName: displayName
              name: name
              type: type
              isDisconnected: true
            name: name
            fullName: fullName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
            cir: ""
            parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        displayType: ""
        entityReference: ""
        name: name
        alias: alias
        fullName: fullName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        cir: ""
        tags:
        - name: name
        - name: name
        virtualInstanceName: virtualInstanceName
      properties:
        name:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        displayType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          readOnly: true
          type: EntityType
        monitoredObjectState:
          $ref: '#/components/schemas/MonitoredObjectStateDto'
        alias:
          nullable: true
          type: string
        cluster:
          $ref: '#/components/schemas/ClusterDto'
        type:
          nullable: true
          readOnly: true
          type: string
        fullName:
          nullable: true
          readOnly: true
          type: string
        entityReference:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        tags:
          items:
            $ref: '#/components/schemas/TagDto'
          nullable: true
          type: array
        virtualInstanceName:
          nullable: true
          type: string
      type: object
    CommunicationProtocolDto:
      additionalProperties: false
      example:
        clientDisabledByDefault: true
        protocolVersion: protocolVersion
        clientEnabled: true
        serverDisabledByDefault: true
        serverEnabled: true
      properties:
        protocolVersion:
          nullable: true
          type: string
        clientEnabled:
          nullable: true
          type: boolean
        clientDisabledByDefault:
          nullable: true
          type: boolean
        serverEnabled:
          nullable: true
          type: boolean
        serverDisabledByDefault:
          nullable: true
          type: boolean
      type: object
    ConfigurationComplianceDto:
      additionalProperties: false
      example:
        machineConfigurations:
        - fipsEnabled: true
          totalMemoryInBytes: 0
          baseMonitor: baseMonitor
          clusterName: clusterName
          name: name
          communicationProtocols:
          - clientDisabledByDefault: true
            protocolVersion: protocolVersion
            clientEnabled: true
            serverDisabledByDefault: true
            serverEnabled: true
          - clientDisabledByDefault: true
            protocolVersion: protocolVersion
            clientEnabled: true
            serverDisabledByDefault: true
            serverEnabled: true
          services:
          - sqlServiceType: 6
            startUserName: startUserName
            startup: startup
            state: state
          - sqlServiceType: 6
            startUserName: startUserName
            startup: startup
            state: state
        - fipsEnabled: true
          totalMemoryInBytes: 0
          baseMonitor: baseMonitor
          clusterName: clusterName
          name: name
          communicationProtocols:
          - clientDisabledByDefault: true
            protocolVersion: protocolVersion
            clientEnabled: true
            serverDisabledByDefault: true
            serverEnabled: true
          - clientDisabledByDefault: true
            protocolVersion: protocolVersion
            clientEnabled: true
            serverDisabledByDefault: true
            serverEnabled: true
          services:
          - sqlServiceType: 6
            startUserName: startUserName
            startup: startup
            state: state
          - sqlServiceType: 6
            startUserName: startUserName
            startup: startup
            state: state
        serverConfigurations:
        - traceFlags:
          - value: 9
          - value: 9
          displayName: displayName
          entityType: ""
          mirroringEndpoints:
          - encryptionEnabled: true
            role: role
            name: name
            encryptionAlgorithm: encryptionAlgorithm
          - encryptionEnabled: true
            role: role
            name: name
            encryptionAlgorithm: encryptionAlgorithm
          overviewUrl: overviewUrl
          configurationOptions:
            options:
              key: null
          monitoredEntityState: 1
          services:
          - sqlServiceType: 6
            startUserName: startUserName
            startup: startup
            state: state
          - sqlServiceType: 6
            startUserName: startUserName
            startup: startup
            state: state
          machineName: machineName
          network:
            sharedMemoryEnabled: true
            tcpListenAll: true
            tcpIpEnabled: true
            namedPipesEnabled: true
            tcpEndpoints:
            - dynamicPorts: 5
              port: 5
              endpointId: endpointId
              ipAddress: ipAddress
              active: true
              enabled: true
            - dynamicPorts: 5
              port: 5
              endpointId: endpointId
              ipAddress: ipAddress
              active: true
              enabled: true
          tags:
          - name: name
          - name: name
          baseMonitorName: baseMonitorName
          serverCir: serverCir
          clusterName: clusterName
          name: name
          machineNames:
          - machineNames
          - machineNames
          properties:
            installationDirectory: installationDirectory
            maxNumberErrorLogFiles: 2
            auditLevel: 7
            forceEncryption: true
            customerExperienceFeedbackEnabled: true
            customerExperienceAuditDirectory: customerExperienceAuditDirectory
            edition: edition
            customerExperienceErrorReportingEnabled: true
            hideInstance: true
            productVersionNumber: productVersionNumber
            productVersion: productVersion
            productLevel: productLevel
            isClustered: true
            certificateThumbprint: certificateThumbprint
            isSingleUser: true
          group: group
        - traceFlags:
          - value: 9
          - value: 9
          displayName: displayName
          entityType: ""
          mirroringEndpoints:
          - encryptionEnabled: true
            role: role
            name: name
            encryptionAlgorithm: encryptionAlgorithm
          - encryptionEnabled: true
            role: role
            name: name
            encryptionAlgorithm: encryptionAlgorithm
          overviewUrl: overviewUrl
          configurationOptions:
            options:
              key: null
          monitoredEntityState: 1
          services:
          - sqlServiceType: 6
            startUserName: startUserName
            startup: startup
            state: state
          - sqlServiceType: 6
            startUserName: startUserName
            startup: startup
            state: state
          machineName: machineName
          network:
            sharedMemoryEnabled: true
            tcpListenAll: true
            tcpIpEnabled: true
            namedPipesEnabled: true
            tcpEndpoints:
            - dynamicPorts: 5
              port: 5
              endpointId: endpointId
              ipAddress: ipAddress
              active: true
              enabled: true
            - dynamicPorts: 5
              port: 5
              endpointId: endpointId
              ipAddress: ipAddress
              active: true
              enabled: true
          tags:
          - name: name
          - name: name
          baseMonitorName: baseMonitorName
          serverCir: serverCir
          clusterName: clusterName
          name: name
          machineNames:
          - machineNames
          - machineNames
          properties:
            installationDirectory: installationDirectory
            maxNumberErrorLogFiles: 2
            auditLevel: 7
            forceEncryption: true
            customerExperienceFeedbackEnabled: true
            customerExperienceAuditDirectory: customerExperienceAuditDirectory
            edition: edition
            customerExperienceErrorReportingEnabled: true
            hideInstance: true
            productVersionNumber: productVersionNumber
            productVersion: productVersion
            productLevel: productLevel
            isClustered: true
            certificateThumbprint: certificateThumbprint
            isSingleUser: true
          group: group
      properties:
        machineConfigurations:
          items:
            $ref: '#/components/schemas/MachineConfigurationDto'
          nullable: true
          type: array
        serverConfigurations:
          items:
            $ref: '#/components/schemas/ServerConfigurationDto'
          nullable: true
          type: array
      type: object
    ConfigurationComplianceDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          machineConfigurations:
          - fipsEnabled: true
            totalMemoryInBytes: 0
            baseMonitor: baseMonitor
            clusterName: clusterName
            name: name
            communicationProtocols:
            - clientDisabledByDefault: true
              protocolVersion: protocolVersion
              clientEnabled: true
              serverDisabledByDefault: true
              serverEnabled: true
            - clientDisabledByDefault: true
              protocolVersion: protocolVersion
              clientEnabled: true
              serverDisabledByDefault: true
              serverEnabled: true
            services:
            - sqlServiceType: 6
              startUserName: startUserName
              startup: startup
              state: state
            - sqlServiceType: 6
              startUserName: startUserName
              startup: startup
              state: state
          - fipsEnabled: true
            totalMemoryInBytes: 0
            baseMonitor: baseMonitor
            clusterName: clusterName
            name: name
            communicationProtocols:
            - clientDisabledByDefault: true
              protocolVersion: protocolVersion
              clientEnabled: true
              serverDisabledByDefault: true
              serverEnabled: true
            - clientDisabledByDefault: true
              protocolVersion: protocolVersion
              clientEnabled: true
              serverDisabledByDefault: true
              serverEnabled: true
            services:
            - sqlServiceType: 6
              startUserName: startUserName
              startup: startup
              state: state
            - sqlServiceType: 6
              startUserName: startUserName
              startup: startup
              state: state
          serverConfigurations:
          - traceFlags:
            - value: 9
            - value: 9
            displayName: displayName
            entityType: ""
            mirroringEndpoints:
            - encryptionEnabled: true
              role: role
              name: name
              encryptionAlgorithm: encryptionAlgorithm
            - encryptionEnabled: true
              role: role
              name: name
              encryptionAlgorithm: encryptionAlgorithm
            overviewUrl: overviewUrl
            configurationOptions:
              options:
                key: null
            monitoredEntityState: 1
            services:
            - sqlServiceType: 6
              startUserName: startUserName
              startup: startup
              state: state
            - sqlServiceType: 6
              startUserName: startUserName
              startup: startup
              state: state
            machineName: machineName
            network:
              sharedMemoryEnabled: true
              tcpListenAll: true
              tcpIpEnabled: true
              namedPipesEnabled: true
              tcpEndpoints:
              - dynamicPorts: 5
                port: 5
                endpointId: endpointId
                ipAddress: ipAddress
                active: true
                enabled: true
              - dynamicPorts: 5
                port: 5
                endpointId: endpointId
                ipAddress: ipAddress
                active: true
                enabled: true
            tags:
            - name: name
            - name: name
            baseMonitorName: baseMonitorName
            serverCir: serverCir
            clusterName: clusterName
            name: name
            machineNames:
            - machineNames
            - machineNames
            properties:
              installationDirectory: installationDirectory
              maxNumberErrorLogFiles: 2
              auditLevel: 7
              forceEncryption: true
              customerExperienceFeedbackEnabled: true
              customerExperienceAuditDirectory: customerExperienceAuditDirectory
              edition: edition
              customerExperienceErrorReportingEnabled: true
              hideInstance: true
              productVersionNumber: productVersionNumber
              productVersion: productVersion
              productLevel: productLevel
              isClustered: true
              certificateThumbprint: certificateThumbprint
              isSingleUser: true
            group: group
          - traceFlags:
            - value: 9
            - value: 9
            displayName: displayName
            entityType: ""
            mirroringEndpoints:
            - encryptionEnabled: true
              role: role
              name: name
              encryptionAlgorithm: encryptionAlgorithm
            - encryptionEnabled: true
              role: role
              name: name
              encryptionAlgorithm: encryptionAlgorithm
            overviewUrl: overviewUrl
            configurationOptions:
              options:
                key: null
            monitoredEntityState: 1
            services:
            - sqlServiceType: 6
              startUserName: startUserName
              startup: startup
              state: state
            - sqlServiceType: 6
              startUserName: startUserName
              startup: startup
              state: state
            machineName: machineName
            network:
              sharedMemoryEnabled: true
              tcpListenAll: true
              tcpIpEnabled: true
              namedPipesEnabled: true
              tcpEndpoints:
              - dynamicPorts: 5
                port: 5
                endpointId: endpointId
                ipAddress: ipAddress
                active: true
                enabled: true
              - dynamicPorts: 5
                port: 5
                endpointId: endpointId
                ipAddress: ipAddress
                active: true
                enabled: true
            tags:
            - name: name
            - name: name
            baseMonitorName: baseMonitorName
            serverCir: serverCir
            clusterName: clusterName
            name: name
            machineNames:
            - machineNames
            - machineNames
            properties:
              installationDirectory: installationDirectory
              maxNumberErrorLogFiles: 2
              auditLevel: 7
              forceEncryption: true
              customerExperienceFeedbackEnabled: true
              customerExperienceAuditDirectory: customerExperienceAuditDirectory
              edition: edition
              customerExperienceErrorReportingEnabled: true
              hideInstance: true
              productVersionNumber: productVersionNumber
              productVersion: productVersion
              productLevel: productLevel
              isClustered: true
              certificateThumbprint: certificateThumbprint
              isSingleUser: true
            group: group
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/ConfigurationComplianceDto'
      type: object
    ConfigurationComplianceTemplateCreateDto:
      additionalProperties: false
      example:
        name: name
        options:
          key: null
      properties:
        name:
          nullable: true
          type: string
        options:
          additionalProperties:
            $ref: '#/components/schemas/ConfigurationOptionDto'
          nullable: true
          type: object
      type: object
    ConfigurationComplianceTemplateDto:
      additionalProperties: false
      example:
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        detailsMessage: detailsMessage
        name: name
        options:
          key: null
        isPreSet: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          format: uuid
          type: string
        name:
          nullable: true
          type: string
        options:
          additionalProperties:
            $ref: '#/components/schemas/ConfigurationOptionDto'
          nullable: true
          type: object
        lastUpdated:
          format: date-time
          type: string
        isPreSet:
          type: boolean
        detailsMessage:
          nullable: true
          type: string
      type: object
    ConfigurationComplianceTemplateDtoIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          detailsMessage: detailsMessage
          name: name
          options:
            key: null
          isPreSet: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        - lastUpdated: 2000-01-23T04:56:07.000+00:00
          detailsMessage: detailsMessage
          name: name
          options:
            key: null
          isPreSet: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/ConfigurationComplianceTemplateDto'
          type: array
      type: object
    ConfigurationComplianceTemplateDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          detailsMessage: detailsMessage
          name: name
          options:
            key: null
          isPreSet: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/ConfigurationComplianceTemplateDto'
      type: object
    ConfigurationOption:
      additionalProperties: false
      type: object
    ConfigurationOptionDto:
      additionalProperties: false
      type: object
    ConfigurationOptionsDto:
      additionalProperties: false
      example:
        options:
          key: null
      properties:
        options:
          additionalProperties:
            $ref: '#/components/schemas/ConfigurationOption'
          nullable: true
          type: object
      type: object
    ConnectionSecurityMode:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    ContinuousEventDto:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    CreateAzureTenantDto:
      additionalProperties: false
      example:
        clientId: clientId
        name: name
        tenantId: tenantId
        clientSecret: clientSecret
      properties:
        name:
          nullable: true
          type: string
        tenantId:
          nullable: true
          type: string
        clientId:
          nullable: true
          type: string
        clientSecret:
          nullable: true
          type: string
      type: object
    CreateSshPrivateKeyCommandDto:
      additionalProperties: false
      example:
        name: name
        passphrase: passphrase
        key: key
      properties:
        name:
          nullable: true
          type: string
        key:
          nullable: true
          type: string
        passphrase:
          nullable: true
          type: string
      type: object
    CredentialsDto:
      additionalProperties: false
      example:
        password: password
        username: username
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
      type: object
    CurrentActivityCellStatusDto:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    CurrentActivityDto:
      additionalProperties: false
      example:
        filters:
        - targetIdentifier: targetIdentifier
          helpTitle: helpTitle
          helpUrl: helpUrl
          filterType: 0
          friendlyName: friendlyName
          targetIsMetadata: true
        - targetIdentifier: targetIdentifier
          helpTitle: helpTitle
          helpUrl: helpUrl
          filterType: 0
          friendlyName: friendlyName
          targetIsMetadata: true
        table:
          columns:
          - identifier: identifier
            fallbackValue: fallbackValue
            helpUrl: helpUrl
            extraWide: true
            title: title
          - identifier: identifier
            fallbackValue: fallbackValue
            helpUrl: helpUrl
            extraWide: true
            title: title
          rows:
          - metadata:
              key: metadata
            entitySpecificDetails:
              entityType: 5
            cells:
              key:
                numericComparisonValue: 5
                queryLanguage: 1
                text: text
                status: 6
            collectionDate: 2000-01-23T04:56:07.000+00:00
            key: key
          - metadata:
              key: metadata
            entitySpecificDetails:
              entityType: 5
            cells:
              key:
                numericComparisonValue: 5
                queryLanguage: 1
                text: text
                status: 6
            collectionDate: 2000-01-23T04:56:07.000+00:00
            key: key
      properties:
        filters:
          items:
            $ref: '#/components/schemas/BaseCurrentActivityFilterDto'
          type: array
        table:
          $ref: '#/components/schemas/CurrentActivityTableDto'
      required:
      - filters
      - table
      type: object
    CurrentActivityDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          filters:
          - targetIdentifier: targetIdentifier
            helpTitle: helpTitle
            helpUrl: helpUrl
            filterType: 0
            friendlyName: friendlyName
            targetIsMetadata: true
          - targetIdentifier: targetIdentifier
            helpTitle: helpTitle
            helpUrl: helpUrl
            filterType: 0
            friendlyName: friendlyName
            targetIsMetadata: true
          table:
            columns:
            - identifier: identifier
              fallbackValue: fallbackValue
              helpUrl: helpUrl
              extraWide: true
              title: title
            - identifier: identifier
              fallbackValue: fallbackValue
              helpUrl: helpUrl
              extraWide: true
              title: title
            rows:
            - metadata:
                key: metadata
              entitySpecificDetails:
                entityType: 5
              cells:
                key:
                  numericComparisonValue: 5
                  queryLanguage: 1
                  text: text
                  status: 6
              collectionDate: 2000-01-23T04:56:07.000+00:00
              key: key
            - metadata:
                key: metadata
              entitySpecificDetails:
                entityType: 5
              cells:
                key:
                  numericComparisonValue: 5
                  queryLanguage: 1
                  text: text
                  status: 6
              collectionDate: 2000-01-23T04:56:07.000+00:00
              key: key
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/CurrentActivityDto'
      type: object
    CurrentActivityEntityTypeDto:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    CurrentActivityFilterTypeDto:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    CurrentActivityQueryDetailsDto:
      additionalProperties: false
      example:
        entityType: 5
      properties:
        entityType:
          $ref: '#/components/schemas/CurrentActivityEntityTypeDto'
      type: object
    CurrentActivityQueryLanguageDto:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    CurrentActivityTableDto:
      additionalProperties: false
      example:
        columns:
        - identifier: identifier
          fallbackValue: fallbackValue
          helpUrl: helpUrl
          extraWide: true
          title: title
        - identifier: identifier
          fallbackValue: fallbackValue
          helpUrl: helpUrl
          extraWide: true
          title: title
        rows:
        - metadata:
            key: metadata
          entitySpecificDetails:
            entityType: 5
          cells:
            key:
              numericComparisonValue: 5
              queryLanguage: 1
              text: text
              status: 6
          collectionDate: 2000-01-23T04:56:07.000+00:00
          key: key
        - metadata:
            key: metadata
          entitySpecificDetails:
            entityType: 5
          cells:
            key:
              numericComparisonValue: 5
              queryLanguage: 1
              text: text
              status: 6
          collectionDate: 2000-01-23T04:56:07.000+00:00
          key: key
      properties:
        columns:
          items:
            $ref: '#/components/schemas/CurrentActivityTableHeaderDto'
          type: array
        rows:
          items:
            $ref: '#/components/schemas/CurrentActivityTableRowDto'
          type: array
      required:
      - columns
      - rows
      type: object
    CurrentActivityTableHeaderDto:
      additionalProperties: false
      example:
        identifier: identifier
        fallbackValue: fallbackValue
        helpUrl: helpUrl
        extraWide: true
        title: title
      properties:
        title:
          type: string
        identifier:
          type: string
        fallbackValue:
          nullable: true
          type: string
        helpUrl:
          nullable: true
          type: string
        extraWide:
          nullable: true
          type: boolean
      required:
      - identifier
      - title
      type: object
    CurrentActivityTableRowCellDto:
      additionalProperties: false
      example:
        numericComparisonValue: 5
        queryLanguage: 1
        text: text
        status: 6
      properties:
        text:
          type: string
        status:
          $ref: '#/components/schemas/CurrentActivityCellStatusDto'
        queryLanguage:
          $ref: '#/components/schemas/CurrentActivityQueryLanguageDto'
        numericComparisonValue:
          format: int64
          nullable: true
          type: integer
      required:
      - text
      type: object
    CurrentActivityTableRowDto:
      additionalProperties: false
      example:
        metadata:
          key: metadata
        entitySpecificDetails:
          entityType: 5
        cells:
          key:
            numericComparisonValue: 5
            queryLanguage: 1
            text: text
            status: 6
        collectionDate: 2000-01-23T04:56:07.000+00:00
        key: key
      properties:
        key:
          type: string
        cells:
          additionalProperties:
            $ref: '#/components/schemas/CurrentActivityTableRowCellDto'
          type: object
        metadata:
          additionalProperties:
            type: string
          type: object
        collectionDate:
          format: date-time
          type: string
        entitySpecificDetails:
          $ref: '#/components/schemas/CurrentActivityQueryDetailsDto'
      type: object
    CustomMetricDto:
      additionalProperties: false
      example:
        selectedObjects:
        - selectedObjects
        - selectedObjects
        name: name
        description: description
        useRateOfChange: true
        databaseSelectionModeDatabases:
        - databaseSelectionModeDatabases
        - databaseSelectionModeDatabases
        isActive: true
        frequency: frequency
        sql: sql
        sampleTime: sampleTime
        databaseSelectionMode: 0
      properties:
        name:
          nullable: true
          type: string
        frequency:
          format: date-span
          type: string
        isActive:
          type: boolean
        sql:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        useRateOfChange:
          type: boolean
        sampleTime:
          nullable: true
          type: string
        selectedObjects:
          items:
            type: string
          nullable: true
          type: array
        databaseSelectionMode:
          $ref: '#/components/schemas/DatabaseSelectionMode'
        databaseSelectionModeDatabases:
          items:
            type: string
          nullable: true
          type: array
      type: object
    CustomMetricsGridDto:
      additionalProperties: false
      example:
        databasesSummary: databasesSummary
        alertIsEnabled: true
        serversSummary: serversSummary
        alertName: alertName
        isEnabled: true
        name: name
        id:
          value: 0
        analysisLinkData:
          serializedTime: serializedTime
          metrics:
          - dataStream: dataStream
            cir: cir
          - dataStream: dataStream
            cir: cir
        frequency: frequency
      properties:
        id:
          $ref: '#/components/schemas/IntegerIdentifier'
        name:
          nullable: true
          type: string
        frequency:
          nullable: true
          type: string
        alertName:
          nullable: true
          type: string
        alertIsEnabled:
          nullable: true
          type: boolean
        isEnabled:
          type: boolean
        serversSummary:
          nullable: true
          type: string
        databasesSummary:
          nullable: true
          type: string
        analysisLinkData:
          $ref: '#/components/schemas/AnalysisLinkData'
      type: object
    CustomMetricsGridDtoIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - databasesSummary: databasesSummary
          alertIsEnabled: true
          serversSummary: serversSummary
          alertName: alertName
          isEnabled: true
          name: name
          id:
            value: 0
          analysisLinkData:
            serializedTime: serializedTime
            metrics:
            - dataStream: dataStream
              cir: cir
            - dataStream: dataStream
              cir: cir
          frequency: frequency
        - databasesSummary: databasesSummary
          alertIsEnabled: true
          serversSummary: serversSummary
          alertName: alertName
          isEnabled: true
          name: name
          id:
            value: 0
          analysisLinkData:
            serializedTime: serializedTime
            metrics:
            - dataStream: dataStream
              cir: cir
            - dataStream: dataStream
              cir: cir
          frequency: frequency
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/CustomMetricsGridDto'
          type: array
      type: object
    DataTableSizeDto:
      additionalProperties: false
      example:
        compressedSizeBytes: 5
        sizeBeforeCompressionBytes: 5
        channelName: channelName
        rowCount: 6
        uncompressedSizeBytes: 1
        sizeBytes: 0
      properties:
        channelName:
          nullable: true
          type: string
        sizeBytes:
          format: int64
          type: integer
        rowCount:
          format: int64
          type: integer
        uncompressedSizeBytes:
          format: int64
          type: integer
        compressedSizeBytes:
          format: int64
          type: integer
        sizeBeforeCompressionBytes:
          format: int64
          type: integer
      required:
      - channelName
      - compressedSizeBytes
      - rowCount
      - sizeBeforeCompressionBytes
      - sizeBytes
      - uncompressedSizeBytes
      type: object
    DataTableSizeDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - compressedSizeBytes: 5
          sizeBeforeCompressionBytes: 5
          channelName: channelName
          rowCount: 6
          uncompressedSizeBytes: 1
          sizeBytes: 0
        - compressedSizeBytes: 5
          sizeBeforeCompressionBytes: 5
          channelName: channelName
          rowCount: 6
          uncompressedSizeBytes: 1
          sizeBytes: 0
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/DataTableSizeDto'
          type: array
      type: object
    DatabaseBackupDto:
      additionalProperties: false
      example:
        groupName: groupName
        latestLogBackup:
          duration: 0.8008281904610115
          backedUpByRedgateSqlBackup: true
          nativeBackup: true
          size: 6
          endDate: 2000-01-23T04:56:07.000+00:00
          startDate: 2000-01-23T04:56:07.000+00:00
        databaseName: databaseName
        latestFullBackup:
          duration: 0.8008281904610115
          backedUpByRedgateSqlBackup: true
          nativeBackup: true
          size: 6
          endDate: 2000-01-23T04:56:07.000+00:00
          startDate: 2000-01-23T04:56:07.000+00:00
        monitoredEntity:
          name: name
          id: id
        clusterName: clusterName
        recoveryModel: recoveryModel
        maxRpoMinutes: 1.4658129805029452
        latestDifferentialBackup:
          duration: 0.8008281904610115
          backedUpByRedgateSqlBackup: true
          nativeBackup: true
          size: 6
          endDate: 2000-01-23T04:56:07.000+00:00
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        monitoredEntity:
          $ref: '#/components/schemas/EntityDto'
        groupName:
          nullable: true
          type: string
        clusterName:
          type: string
        databaseName:
          type: string
        recoveryModel:
          type: string
        latestFullBackup:
          $ref: '#/components/schemas/LatestBackupDto'
        latestLogBackup:
          $ref: '#/components/schemas/LatestBackupDto'
        latestDifferentialBackup:
          $ref: '#/components/schemas/LatestBackupDto'
        maxRpoMinutes:
          format: double
          type: number
      required:
      - clusterName
      - databaseName
      - groupName
      - latestDifferentialBackup
      - latestFullBackup
      - latestLogBackup
      - maxRpoMinutes
      - monitoredEntity
      - recoveryModel
      type: object
    DatabaseBackupDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - groupName: groupName
          latestLogBackup:
            duration: 0.8008281904610115
            backedUpByRedgateSqlBackup: true
            nativeBackup: true
            size: 6
            endDate: 2000-01-23T04:56:07.000+00:00
            startDate: 2000-01-23T04:56:07.000+00:00
          databaseName: databaseName
          latestFullBackup:
            duration: 0.8008281904610115
            backedUpByRedgateSqlBackup: true
            nativeBackup: true
            size: 6
            endDate: 2000-01-23T04:56:07.000+00:00
            startDate: 2000-01-23T04:56:07.000+00:00
          monitoredEntity:
            name: name
            id: id
          clusterName: clusterName
          recoveryModel: recoveryModel
          maxRpoMinutes: 1.4658129805029452
          latestDifferentialBackup:
            duration: 0.8008281904610115
            backedUpByRedgateSqlBackup: true
            nativeBackup: true
            size: 6
            endDate: 2000-01-23T04:56:07.000+00:00
            startDate: 2000-01-23T04:56:07.000+00:00
        - groupName: groupName
          latestLogBackup:
            duration: 0.8008281904610115
            backedUpByRedgateSqlBackup: true
            nativeBackup: true
            size: 6
            endDate: 2000-01-23T04:56:07.000+00:00
            startDate: 2000-01-23T04:56:07.000+00:00
          databaseName: databaseName
          latestFullBackup:
            duration: 0.8008281904610115
            backedUpByRedgateSqlBackup: true
            nativeBackup: true
            size: 6
            endDate: 2000-01-23T04:56:07.000+00:00
            startDate: 2000-01-23T04:56:07.000+00:00
          monitoredEntity:
            name: name
            id: id
          clusterName: clusterName
          recoveryModel: recoveryModel
          maxRpoMinutes: 1.4658129805029452
          latestDifferentialBackup:
            duration: 0.8008281904610115
            backedUpByRedgateSqlBackup: true
            nativeBackup: true
            size: 6
            endDate: 2000-01-23T04:56:07.000+00:00
            startDate: 2000-01-23T04:56:07.000+00:00
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/DatabaseBackupDto'
          type: array
      type: object
    DatabaseBackupInfoDto:
      additionalProperties: false
      example:
        recoveryPointBuckets:
        - recoveryPointBuckets
        - recoveryPointBuckets
        backupHistoryPurgeLifetime: backupHistoryPurgeLifetime
        groups:
        - groups
        - groups
        showShortPurgeSettingWarning: true
        timeFormatString: timeFormatString
        backups:
        - cluster: cluster
          sqlInstanceEntityType: ""
          log:
            backedUpByRedgateSqlBackup: true
            nativeBackup: true
            size: 6
            endDate: 2000-01-23T04:56:07.000+00:00
            totalSeconds: 0.8008281904610115
            startDate: 2000-01-23T04:56:07.000+00:00
          isCopyOnly: true
          sortableDatabaseName: sortableDatabaseName
          maxRpoMinutes: 1.4658129805029452
          hasLogBackupWarning: true
          differential:
            backedUpByRedgateSqlBackup: true
            nativeBackup: true
            size: 6
            endDate: 2000-01-23T04:56:07.000+00:00
            totalSeconds: 0.8008281904610115
            startDate: 2000-01-23T04:56:07.000+00:00
          database: database
          servers:
          - serverDisplayName: serverDisplayName
            displayName: displayName
            clusterName: clusterName
            alias: alias
            fullyQualifiedName: fullyQualifiedName
            cir: cir
            tags:
            - name: name
            - name: name
          - serverDisplayName: serverDisplayName
            displayName: displayName
            clusterName: clusterName
            alias: alias
            fullyQualifiedName: fullyQualifiedName
            cir: cir
            tags:
            - name: name
            - name: name
          rpoBucket: rpoBucket
          recoveryModel: recoveryModel
          allRpo:
          - 5.962133916683182
          - 5.962133916683182
          isSystemDatabase: true
          group: group
          full:
            backedUpByRedgateSqlBackup: true
            nativeBackup: true
            size: 6
            endDate: 2000-01-23T04:56:07.000+00:00
            totalSeconds: 0.8008281904610115
            startDate: 2000-01-23T04:56:07.000+00:00
        - cluster: cluster
          sqlInstanceEntityType: ""
          log:
            backedUpByRedgateSqlBackup: true
            nativeBackup: true
            size: 6
            endDate: 2000-01-23T04:56:07.000+00:00
            totalSeconds: 0.8008281904610115
            startDate: 2000-01-23T04:56:07.000+00:00
          isCopyOnly: true
          sortableDatabaseName: sortableDatabaseName
          maxRpoMinutes: 1.4658129805029452
          hasLogBackupWarning: true
          differential:
            backedUpByRedgateSqlBackup: true
            nativeBackup: true
            size: 6
            endDate: 2000-01-23T04:56:07.000+00:00
            totalSeconds: 0.8008281904610115
            startDate: 2000-01-23T04:56:07.000+00:00
          database: database
          servers:
          - serverDisplayName: serverDisplayName
            displayName: displayName
            clusterName: clusterName
            alias: alias
            fullyQualifiedName: fullyQualifiedName
            cir: cir
            tags:
            - name: name
            - name: name
          - serverDisplayName: serverDisplayName
            displayName: displayName
            clusterName: clusterName
            alias: alias
            fullyQualifiedName: fullyQualifiedName
            cir: cir
            tags:
            - name: name
            - name: name
          rpoBucket: rpoBucket
          recoveryModel: recoveryModel
          allRpo:
          - 5.962133916683182
          - 5.962133916683182
          isSystemDatabase: true
          group: group
          full:
            backedUpByRedgateSqlBackup: true
            nativeBackup: true
            size: 6
            endDate: 2000-01-23T04:56:07.000+00:00
            totalSeconds: 0.8008281904610115
            startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        backups:
          items:
            $ref: '#/components/schemas/BackupsRowDto'
          nullable: true
          type: array
        groups:
          items:
            type: string
          nullable: true
          type: array
        recoveryPointBuckets:
          items:
            type: string
          nullable: true
          type: array
        backupHistoryPurgeLifetime:
          nullable: true
          type: string
        showShortPurgeSettingWarning:
          type: boolean
        timeFormatString:
          nullable: true
          type: string
      type: object
    DatabaseConfigurationDto:
      additionalProperties: false
      example:
        serverInfo:
          entityType: ""
          name: name
          monitoredEntityStatusCategory: 0
          overviewUrl: overviewUrl
          cir: cir
          group: group
          tags:
          - name: name
          - name: name
        name: name
        options:
          options:
            key: null
        isSystemDatabase: true
        properties:
          owner: owner
          encryptionState: encryptionState
          databaseState: databaseState
          encryptionKeys:
          - name: name
            encryptionType: encryptionType
            type: type
            algorithm: algorithm
          - name: name
            encryptionType: encryptionType
            type: type
            algorithm: algorithm
      properties:
        name:
          type: string
        serverInfo:
          $ref: '#/components/schemas/DatabaseConfigurationServerInfoDto'
        isSystemDatabase:
          type: boolean
        properties:
          $ref: '#/components/schemas/DatabasePropertiesDto'
        options:
          $ref: '#/components/schemas/ConfigurationOptionsDto'
      required:
      - properties
      type: object
    DatabaseConfigurationDtoIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - serverInfo:
            entityType: ""
            name: name
            monitoredEntityStatusCategory: 0
            overviewUrl: overviewUrl
            cir: cir
            group: group
            tags:
            - name: name
            - name: name
          name: name
          options:
            options:
              key: null
          isSystemDatabase: true
          properties:
            owner: owner
            encryptionState: encryptionState
            databaseState: databaseState
            encryptionKeys:
            - name: name
              encryptionType: encryptionType
              type: type
              algorithm: algorithm
            - name: name
              encryptionType: encryptionType
              type: type
              algorithm: algorithm
        - serverInfo:
            entityType: ""
            name: name
            monitoredEntityStatusCategory: 0
            overviewUrl: overviewUrl
            cir: cir
            group: group
            tags:
            - name: name
            - name: name
          name: name
          options:
            options:
              key: null
          isSystemDatabase: true
          properties:
            owner: owner
            encryptionState: encryptionState
            databaseState: databaseState
            encryptionKeys:
            - name: name
              encryptionType: encryptionType
              type: type
              algorithm: algorithm
            - name: name
              encryptionType: encryptionType
              type: type
              algorithm: algorithm
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/DatabaseConfigurationDto'
          type: array
      type: object
    DatabaseConfigurationServerInfoDto:
      additionalProperties: false
      example:
        entityType: ""
        name: name
        monitoredEntityStatusCategory: 0
        overviewUrl: overviewUrl
        cir: cir
        group: group
        tags:
        - name: name
        - name: name
      properties:
        cir:
          type: string
        overviewUrl:
          nullable: true
          type: string
        name:
          type: string
        group:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/TagDto'
          type: array
        monitoredEntityStatusCategory:
          $ref: '#/components/schemas/MonitoredEntityStatusCategory'
        entityType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
      type: object
    DatabaseDiagnosticsDto:
      additionalProperties: false
      example:
        baseMonitorName: baseMonitorName
        timings:
        - database: database
          totalDurationMilliseconds: 0.8008281904610115
          tableKind: tableKind
          timeWindowMinimum: timeWindowMinimum
          count: 1
          channelName: channelName
          averageRowCount: 6.027456183070403
          operation: operation
        - database: database
          totalDurationMilliseconds: 0.8008281904610115
          tableKind: tableKind
          timeWindowMinimum: timeWindowMinimum
          count: 1
          channelName: channelName
          averageRowCount: 6.027456183070403
          operation: operation
      properties:
        baseMonitorName:
          nullable: true
          type: string
        timings:
          items:
            $ref: '#/components/schemas/DatabaseTimingDto'
          nullable: true
          type: array
      required:
      - baseMonitorName
      - timings
      type: object
    DatabaseDiagnosticsDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - baseMonitorName: baseMonitorName
          timings:
          - database: database
            totalDurationMilliseconds: 0.8008281904610115
            tableKind: tableKind
            timeWindowMinimum: timeWindowMinimum
            count: 1
            channelName: channelName
            averageRowCount: 6.027456183070403
            operation: operation
          - database: database
            totalDurationMilliseconds: 0.8008281904610115
            tableKind: tableKind
            timeWindowMinimum: timeWindowMinimum
            count: 1
            channelName: channelName
            averageRowCount: 6.027456183070403
            operation: operation
        - baseMonitorName: baseMonitorName
          timings:
          - database: database
            totalDurationMilliseconds: 0.8008281904610115
            tableKind: tableKind
            timeWindowMinimum: timeWindowMinimum
            count: 1
            channelName: channelName
            averageRowCount: 6.027456183070403
            operation: operation
          - database: database
            totalDurationMilliseconds: 0.8008281904610115
            tableKind: tableKind
            timeWindowMinimum: timeWindowMinimum
            count: 1
            channelName: channelName
            averageRowCount: 6.027456183070403
            operation: operation
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/DatabaseDiagnosticsDto'
          type: array
      type: object
    DatabaseDto:
      additionalProperties: false
      example:
        databaseName: databaseName
        displayName: displayName
        cir: ""
      properties:
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        displayName:
          nullable: true
          type: string
        databaseName:
          nullable: true
          type: string
      type: object
    DatabaseDtoIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - databaseName: databaseName
          displayName: displayName
          cir: ""
        - databaseName: databaseName
          displayName: displayName
          cir: ""
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/DatabaseDto'
          type: array
      type: object
    DatabaseEngineDto:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    DatabaseFileUsageInfoDto:
      additionalProperties: false
      example:
        cluster: cluster
        database: database
        instance: instance
        file: file
        filePath: filePath
        used: 2
        fileType: fileType
        capacity: 7
      properties:
        cluster:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
        database:
          nullable: true
          type: string
        file:
          nullable: true
          type: string
        used:
          format: int64
          type: integer
        capacity:
          format: int64
          type: integer
        fileType:
          nullable: true
          type: string
        filePath:
          nullable: true
          type: string
      required:
      - capacity
      - cluster
      - database
      - file
      - filePath
      - fileType
      - instance
      - used
      type: object
    DatabaseFileUsageViewModel:
      additionalProperties: false
      example:
        files:
        - cluster: cluster
          database: database
          instance: instance
          file: file
          filePath: filePath
          used: 2
          fileType: fileType
          capacity: 7
        - cluster: cluster
          database: database
          instance: instance
          file: file
          filePath: filePath
          used: 2
          fileType: fileType
          capacity: 7
        diskInfos:
        - projectedSizeNow: 1.4658129805029452
          parentName: parentName
          size: 6
          projectedSizeInOneYear: 5.962133916683182
          name: name
          sqlInstances:
          - entityName: entityName
            entityType: ""
            instanceKey: instanceKey
            tags:
            - name: name
            - name: name
          - entityName: entityName
            entityType: ""
            instanceKey: instanceKey
            tags:
            - name: name
            - name: name
          parentEntityType: ""
          label: label
          used: 0
          projectedFullDateTicks: 5
          cir: ""
          group: group
        - projectedSizeNow: 1.4658129805029452
          parentName: parentName
          size: 6
          projectedSizeInOneYear: 5.962133916683182
          name: name
          sqlInstances:
          - entityName: entityName
            entityType: ""
            instanceKey: instanceKey
            tags:
            - name: name
            - name: name
          - entityName: entityName
            entityType: ""
            instanceKey: instanceKey
            tags:
            - name: name
            - name: name
          parentEntityType: ""
          label: label
          used: 0
          projectedFullDateTicks: 5
          cir: ""
          group: group
        graphData:
          other:
          - - 3
            - 3
          - - 3
            - 3
          allocatedSql:
          - - 9
            - 9
          - - 9
            - 9
          freeSpace:
          - - 2
            - 2
          - - 2
            - 2
          usedSql:
          - - 4
            - 4
          - - 4
            - 4
        csvVolumeName: csvVolumeName
      properties:
        diskInfos:
          items:
            $ref: '#/components/schemas/VolumeUsageViewModel'
          nullable: true
          type: array
        files:
          items:
            $ref: '#/components/schemas/DatabaseFileUsageInfoDto'
          nullable: true
          type: array
        graphData:
          $ref: '#/components/schemas/GraphDataViewModel'
        csvVolumeName:
          nullable: true
          type: string
      type: object
    DatabaseFileUsageViewModelJSendSuccess:
      additionalProperties: false
      example:
        data:
          files:
          - cluster: cluster
            database: database
            instance: instance
            file: file
            filePath: filePath
            used: 2
            fileType: fileType
            capacity: 7
          - cluster: cluster
            database: database
            instance: instance
            file: file
            filePath: filePath
            used: 2
            fileType: fileType
            capacity: 7
          diskInfos:
          - projectedSizeNow: 1.4658129805029452
            parentName: parentName
            size: 6
            projectedSizeInOneYear: 5.962133916683182
            name: name
            sqlInstances:
            - entityName: entityName
              entityType: ""
              instanceKey: instanceKey
              tags:
              - name: name
              - name: name
            - entityName: entityName
              entityType: ""
              instanceKey: instanceKey
              tags:
              - name: name
              - name: name
            parentEntityType: ""
            label: label
            used: 0
            projectedFullDateTicks: 5
            cir: ""
            group: group
          - projectedSizeNow: 1.4658129805029452
            parentName: parentName
            size: 6
            projectedSizeInOneYear: 5.962133916683182
            name: name
            sqlInstances:
            - entityName: entityName
              entityType: ""
              instanceKey: instanceKey
              tags:
              - name: name
              - name: name
            - entityName: entityName
              entityType: ""
              instanceKey: instanceKey
              tags:
              - name: name
              - name: name
            parentEntityType: ""
            label: label
            used: 0
            projectedFullDateTicks: 5
            cir: ""
            group: group
          graphData:
            other:
            - - 3
              - 3
            - - 3
              - 3
            allocatedSql:
            - - 9
              - 9
            - - 9
              - 9
            freeSpace:
            - - 2
              - 2
            - - 2
              - 2
            usedSql:
            - - 4
              - 4
            - - 4
              - 4
          csvVolumeName: csvVolumeName
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/DatabaseFileUsageViewModel'
      type: object
    DatabasePrincipalType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      format: int32
      type: integer
    DatabasePropertiesDto:
      additionalProperties: false
      example:
        owner: owner
        encryptionState: encryptionState
        databaseState: databaseState
        encryptionKeys:
        - name: name
          encryptionType: encryptionType
          type: type
          algorithm: algorithm
        - name: name
          encryptionType: encryptionType
          type: type
          algorithm: algorithm
      properties:
        encryptionState:
          nullable: true
          type: string
        encryptionKeys:
          items:
            $ref: '#/components/schemas/EncryptionKeyDto'
          type: array
        owner:
          nullable: true
          type: string
        databaseState:
          type: string
      required:
      - databaseState
      type: object
    DatabaseSelectionMode:
      enum:
      - 0
      - 1
      - 2
      - 3
      format: int32
      type: integer
    DatabaseTimingDto:
      additionalProperties: false
      example:
        database: database
        totalDurationMilliseconds: 0.8008281904610115
        tableKind: tableKind
        timeWindowMinimum: timeWindowMinimum
        count: 1
        channelName: channelName
        averageRowCount: 6.027456183070403
        operation: operation
      properties:
        database:
          type: string
        channelName:
          type: string
        tableKind:
          type: string
        operation:
          type: string
        timeWindowMinimum:
          nullable: true
          type: string
        totalDurationMilliseconds:
          format: double
          type: number
        averageRowCount:
          format: double
          type: number
        count:
          format: int32
          type: integer
      required:
      - averageRowCount
      - channelName
      - count
      - database
      - operation
      - tableKind
      - timeWindowMinimum
      - totalDurationMilliseconds
      type: object
    DayOfWeek:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      format: int32
      type: integer
    DeleteAmazonApiCredentialsRequest:
      additionalProperties: false
      example:
        endpoint: endpoint
      properties:
        endpoint:
          minLength: 1
          type: string
      required:
      - endpoint
      type: object
    DeleteDomainConnectionRequest:
      additionalProperties: false
      example:
        domain: domain
      properties:
        domain:
          nullable: true
          type: string
      type: object
    DeleteSqlServerInstanceModel:
      additionalProperties: false
      example:
        deleteData: true
        type: ""
        cir: ""
      properties:
        type:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        deleteData:
          type: boolean
      type: object
    DeleteSqlServerModel:
      additionalProperties: false
      example:
        deleteData: true
        name: name
        type: 0
      properties:
        type:
          $ref: '#/components/schemas/MonitoredEntityType'
        name:
          nullable: true
          type: string
        deleteData:
          type: boolean
      type: object
    DetectedAzureSqlDatabaseDto:
      additionalProperties: false
      example:
        name: name
        creationDate: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          nullable: true
          type: string
        creationDate:
          format: date-time
          type: string
      type: object
    DetectedAzureSqlDatabaseDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - name: name
          creationDate: 2000-01-23T04:56:07.000+00:00
        - name: name
          creationDate: 2000-01-23T04:56:07.000+00:00
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/DetectedAzureSqlDatabaseDto'
          type: array
      type: object
    DiscoveryEntityDto:
      additionalProperties: false
      example:
        name: name
        type: 6
      properties:
        type:
          $ref: '#/components/schemas/DiscoveryEntityTypeDto'
        name:
          nullable: true
          readOnly: true
          type: string
      type: object
    DiscoveryEntityTypeDto:
      enum:
      - 0
      - 1
      - 2
      - 3
      format: int32
      type: integer
    DiscoveryOptionsDto:
      additionalProperties: false
      example:
        probeBrowser: true
        tcpPort: 1
        password: password
        domain: domain
        searchBase: searchBase
        probeTcp: true
        username: username
      properties:
        domain:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        probeTcp:
          type: boolean
        probeBrowser:
          type: boolean
        tcpPort:
          format: int32
          type: integer
        searchBase:
          nullable: true
          type: string
      type: object
    DiscoveryProgressDto:
      additionalProperties: false
      example:
        errorMessages:
        - errorMessages
        - errorMessages
        actionProgress: actionProgress
        lastRun: 2000-01-23T04:56:07.000+00:00
        status: 0
        currentAction: currentAction
      properties:
        status:
          $ref: '#/components/schemas/DiscoveryStatusDto'
        errorMessages:
          items:
            type: string
          type: array
        currentAction:
          type: string
        actionProgress:
          nullable: true
          type: string
        lastRun:
          format: date-time
          nullable: true
          type: string
      type: object
    DiscoveryResultDto:
      additionalProperties: false
      example:
        entities:
        - name: name
          type: 6
        - name: name
          type: 6
        progress:
          errorMessages:
          - errorMessages
          - errorMessages
          actionProgress: actionProgress
          lastRun: 2000-01-23T04:56:07.000+00:00
          status: 0
          currentAction: currentAction
        discoveryOptions:
          probeBrowser: true
          tcpPort: 1
          password: password
          domain: domain
          searchBase: searchBase
          probeTcp: true
          username: username
      properties:
        progress:
          $ref: '#/components/schemas/DiscoveryProgressDto'
        entities:
          items:
            $ref: '#/components/schemas/DiscoveryEntityDto'
          nullable: true
          type: array
        discoveryOptions:
          $ref: '#/components/schemas/DiscoveryOptionsDto'
      type: object
    DiscoveryResultDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          entities:
          - name: name
            type: 6
          - name: name
            type: 6
          progress:
            errorMessages:
            - errorMessages
            - errorMessages
            actionProgress: actionProgress
            lastRun: 2000-01-23T04:56:07.000+00:00
            status: 0
            currentAction: currentAction
          discoveryOptions:
            probeBrowser: true
            tcpPort: 1
            password: password
            domain: domain
            searchBase: searchBase
            probeTcp: true
            username: username
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/DiscoveryResultDto'
      type: object
    DiscoveryStatusDto:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      format: int32
      type: integer
    DiskFilterInfoDto:
      additionalProperties: false
      example:
        groupNames:
        - groupNames
        - groupNames
        diskNames:
        - diskNames
        - diskNames
        filterText: filterText
        tags:
        - tags
        - tags
      properties:
        filterText:
          nullable: true
          type: string
        diskNames:
          items:
            type: string
          nullable: true
          type: array
        groupNames:
          items:
            type: string
          nullable: true
          type: array
        tags:
          items:
            type: string
          nullable: true
          type: array
      type: object
    DiskUsageDto:
      additionalProperties: false
      example:
        projectedSizeNow: 1.4658129805029452
        projectedDateForFullCapacityUsed: 2000-01-23T04:56:07.000+00:00
        diskName: diskName
        diskLabel: diskLabel
        groupName: groupName
        diskSize: 6
        projectedSizeInOneYear: 5.962133916683182
        monitoredEntity:
          name: name
          id: id
        clusterName: clusterName
        diskUsed: 0
        sqlInstances:
        - name: name
          instanceKey: instanceKey
        - name: name
          instanceKey: instanceKey
        machineName: machineName
      properties:
        monitoredEntity:
          $ref: '#/components/schemas/EntityDto'
        groupName:
          nullable: true
          type: string
        clusterName:
          nullable: true
          type: string
        machineName:
          nullable: true
          type: string
        diskName:
          nullable: true
          type: string
        diskLabel:
          nullable: true
          type: string
        diskUsed:
          format: int64
          type: integer
        diskSize:
          format: int64
          type: integer
        projectedSizeNow:
          format: double
          nullable: true
          type: number
        projectedSizeInOneYear:
          format: double
          nullable: true
          type: number
        projectedDateForFullCapacityUsed:
          format: date-time
          nullable: true
          type: string
        sqlInstances:
          items:
            $ref: '#/components/schemas/SqlInstanceDto'
          nullable: true
          type: array
      type: object
    DiskUsageDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - projectedSizeNow: 1.4658129805029452
          projectedDateForFullCapacityUsed: 2000-01-23T04:56:07.000+00:00
          diskName: diskName
          diskLabel: diskLabel
          groupName: groupName
          diskSize: 6
          projectedSizeInOneYear: 5.962133916683182
          monitoredEntity:
            name: name
            id: id
          clusterName: clusterName
          diskUsed: 0
          sqlInstances:
          - name: name
            instanceKey: instanceKey
          - name: name
            instanceKey: instanceKey
          machineName: machineName
        - projectedSizeNow: 1.4658129805029452
          projectedDateForFullCapacityUsed: 2000-01-23T04:56:07.000+00:00
          diskName: diskName
          diskLabel: diskLabel
          groupName: groupName
          diskSize: 6
          projectedSizeInOneYear: 5.962133916683182
          monitoredEntity:
            name: name
            id: id
          clusterName: clusterName
          diskUsed: 0
          sqlInstances:
          - name: name
            instanceKey: instanceKey
          - name: name
            instanceKey: instanceKey
          machineName: machineName
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/DiskUsageDto'
          type: array
      type: object
    DisplayViewModel:
      additionalProperties: false
      example:
        showSuspendedEntitiesOnGlobalDashboard: true
        forceErroredEntitiesOnGlobalDashboard: true
        failoverClusterDisplayOption: 0
        customReportLogo: customReportLogo
        timeFormatOption: timeFormatOption
      properties:
        timeFormatOption:
          type: string
        customReportLogo:
          nullable: true
          type: string
        failoverClusterDisplayOption:
          $ref: '#/components/schemas/FailoverClusterDisplayOption'
        showSuspendedEntitiesOnGlobalDashboard:
          type: boolean
        forceErroredEntitiesOnGlobalDashboard:
          type: boolean
      required:
      - customReportLogo
      - failoverClusterDisplayOption
      - forceErroredEntitiesOnGlobalDashboard
      - showSuspendedEntitiesOnGlobalDashboard
      - timeFormatOption
      type: object
    DisplayViewModelJSendSuccess:
      additionalProperties: false
      example:
        data:
          showSuspendedEntitiesOnGlobalDashboard: true
          forceErroredEntitiesOnGlobalDashboard: true
          failoverClusterDisplayOption: 0
          customReportLogo: customReportLogo
          timeFormatOption: timeFormatOption
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/DisplayViewModel'
      type: object
    DoubleArrayIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - - 0.8008281904610115
          - 0.8008281904610115
        - - 0.8008281904610115
          - 0.8008281904610115
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            items:
              format: double
              type: number
            type: array
          type: array
      type: object
    DoubleNullableArrayIEnumerableArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - - - 0.8008281904610115
            - 0.8008281904610115
          - - 0.8008281904610115
            - 0.8008281904610115
        - - - 0.8008281904610115
            - 0.8008281904610115
          - - 0.8008281904610115
            - 0.8008281904610115
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            items:
              items:
                format: double
                type: number
              type: array
            type: array
          type: array
      type: object
    DoubleSparklineJsModel:
      additionalProperties: false
      example:
        minDate: 5
        maxValue: 5.962133916683182
        values:
        - ""
        - ""
        lastValueOrDefault: 1.4658129805029452
        name: name
        formattedLastValue: formattedLastValue
        maxDate: 2
        analysisLinkData:
          serializedTime: serializedTime
          metrics:
          - dataStream: dataStream
            cir: cir
          - dataStream: dataStream
            cir: cir
      properties:
        name:
          nullable: true
          type: string
        values:
          items: {}
          nullable: true
          type: array
        formattedLastValue:
          nullable: true
          type: string
        lastValueOrDefault:
          format: double
          type: number
        maxValue:
          format: double
          nullable: true
          type: number
        minDate:
          format: int64
          type: integer
        maxDate:
          format: int64
          type: integer
        analysisLinkData:
          $ref: '#/components/schemas/AnalysisLinkData'
      type: object
    DuplicateMonitoredEntityWarningDto:
      additionalProperties: false
      example:
        entityType: ""
        name: name
        baseMonitors:
        - baseMonitors
        - baseMonitors
      properties:
        entityType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
        name:
          nullable: true
          type: string
        baseMonitors:
          items:
            type: string
          nullable: true
          type: array
      type: object
    DuplicateMonitoredEntityWarningDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - entityType: ""
          name: name
          baseMonitors:
          - baseMonitors
          - baseMonitors
        - entityType: ""
          name: name
          baseMonitors:
          - baseMonitors
          - baseMonitors
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/DuplicateMonitoredEntityWarningDto'
          type: array
      type: object
    EmailNotificationOptionDto:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    EmailServerSettingsDto:
      additionalProperties: false
      example:
        server: server
        password: password
        ignoreSslErrors: true
        port: 0
        useAuthentication: true
        secureConnectionSecurity: true
        connectionSecurityMode: 6
        emailFrom: emailFrom
        hasDecryptionError: true
        username: username
      properties:
        server:
          nullable: true
          type: string
        port:
          format: int32
          type: integer
        connectionSecurityMode:
          $ref: '#/components/schemas/ConnectionSecurityMode'
        useAuthentication:
          type: boolean
        username:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        emailFrom:
          nullable: true
          type: string
        ignoreSslErrors:
          type: boolean
        hasDecryptionError:
          type: boolean
        secureConnectionSecurity:
          type: boolean
      type: object
    EmailSettingsDto:
      additionalProperties: false
      example:
        emailOnBaseMonitorError: true
        notificationLevel: 5
        globalAlertsEnabled: true
        alertOnEnded: true
        defaultToAddresses: defaultToAddresses
        baseMonitorErrorEmailAddresses: baseMonitorErrorEmailAddresses
        alertLimit: 1
      properties:
        globalAlertsEnabled:
          type: boolean
        alertOnEnded:
          type: boolean
        alertLimit:
          format: int32
          type: integer
        defaultToAddresses:
          nullable: true
          type: string
        notificationLevel:
          $ref: '#/components/schemas/NotificationLevel'
        emailOnBaseMonitorError:
          type: boolean
        baseMonitorErrorEmailAddresses:
          nullable: true
          type: string
      type: object
    EncryptionKeyDto:
      additionalProperties: false
      example:
        name: name
        encryptionType: encryptionType
        type: type
        algorithm: algorithm
      properties:
        algorithm:
          type: string
        type:
          type: string
        name:
          type: string
        encryptionType:
          type: string
      type: object
    EntityDto:
      additionalProperties: false
      example:
        name: name
        id: id
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    EntityGroup:
      additionalProperties: false
      example:
        name: name
        order: 5
      properties:
        name:
          nullable: true
          readOnly: true
          type: string
        order:
          format: int32
          readOnly: true
          type: integer
      type: object
    EntityMetadataDto:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15
      - 16
      - 17
      format: int32
      type: integer
    EntityMetric:
      additionalProperties: false
      example:
        percent2Value: percent2Value
        stacked: true
        percent2Title: percent2Title
        percent1Title: percent1Title
        percentTotal: 1
        percent1Value: percent1Value
        percent1: 0
        percent2: 6
        singleValue: true
        collectionPaused: true
        type: type
        value: value
      properties:
        value:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
        percent1:
          format: int32
          type: integer
        percent2:
          format: int32
          type: integer
        percentTotal:
          format: int32
          readOnly: true
          type: integer
        percent1Title:
          nullable: true
          type: string
        percent2Title:
          nullable: true
          type: string
        percent1Value:
          nullable: true
          type: string
        percent2Value:
          nullable: true
          type: string
        stacked:
          type: boolean
        singleValue:
          type: boolean
        collectionPaused:
          type: boolean
      type: object
    EntityStatus:
      additionalProperties: false
      example:
        severity: 1
        fullAlertTypeSerialised: fullAlertTypeSerialised
        dateRaised: 2000-01-23T04:56:07.000+00:00
        extra: 5
        startTimeTicks: 2
        alertCir: ""
        mostRelevantAlertId:
          value: 0
        lastOk: 2000-01-23T04:56:07.000+00:00
        text: text
        eventType: 0
        activeForMinutes: 6
        order: 5
      properties:
        text:
          nullable: true
          type: string
        eventType:
          $ref: '#/components/schemas/ContinuousEventDto'
        dateRaised:
          format: date-time
          nullable: true
          type: string
        activeForMinutes:
          format: int32
          type: integer
        severity:
          $ref: '#/components/schemas/MonitoredObjectSeverityDto'
        order:
          format: int32
          type: integer
        extra:
          format: int64
          type: integer
        mostRelevantAlertId:
          $ref: '#/components/schemas/IntegerIdentifier'
        alertCir:
          format: group-or-entity-id
          nullable: true
          type: GroupOrCir
        fullAlertTypeSerialised:
          nullable: true
          type: string
        startTimeTicks:
          format: int64
          type: integer
        lastOk:
          format: date-time
          nullable: true
          type: string
      type: object
    EntityTypeArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - ""
        - ""
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            enum:
            - Cluster
            - LinuxMachine
            - AmazonRdsHost
            - Machine
            - SqlServer
            - SqlServerInstance
            - AzureManagedInstance
            - AzureSqlServer
            - AmazonRdsSqlServer
            - PostgresServer
            type: EntityType
          type: array
      type: object
    EntityViewModel:
      additionalProperties: false
      example:
        metadata:
        - 5
        - 5
        entityType: ""
        displayName: displayName
        availabilityGroups:
        - name: name
          url: url
        - name: name
          url: url
        suspended: true
        userHasPermissionToClearAlerts: true
        instanceUrl: instanceUrl
        tags:
        - name: name
        - name: name
        baseMonitorName: baseMonitorName
        name: name
        metrics:
        - percent2Value: percent2Value
          stacked: true
          percent2Title: percent2Title
          percent1Title: percent1Title
          percentTotal: 1
          percent1Value: percent1Value
          percent1: 0
          percent2: 6
          singleValue: true
          collectionPaused: true
          type: type
          value: value
        - percent2Value: percent2Value
          stacked: true
          percent2Title: percent2Title
          percent1Title: percent1Title
          percentTotal: 1
          percent1Value: percent1Value
          percent1: 0
          percent2: 6
          singleValue: true
          collectionPaused: true
          type: type
          value: value
        getCir: ""
        status:
          severity: 1
          fullAlertTypeSerialised: fullAlertTypeSerialised
          dateRaised: 2000-01-23T04:56:07.000+00:00
          extra: 5
          startTimeTicks: 2
          alertCir: ""
          mostRelevantAlertId:
            value: 0
          lastOk: 2000-01-23T04:56:07.000+00:00
          text: text
          eventType: 0
          activeForMinutes: 6
          order: 5
        group:
          name: name
          order: 5
        alertInboxUrl: alertInboxUrl
      properties:
        entityType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          readOnly: true
          type: EntityType
        name:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/EntityStatus'
        metrics:
          items:
            $ref: '#/components/schemas/EntityMetric'
          nullable: true
          type: array
        baseMonitorName:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
        userHasPermissionToClearAlerts:
          type: boolean
        getCir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        suspended:
          type: boolean
        instanceUrl:
          nullable: true
          type: string
        group:
          $ref: '#/components/schemas/EntityGroup'
        tags:
          items:
            $ref: '#/components/schemas/TagDto'
          nullable: true
          type: array
        availabilityGroups:
          items:
            $ref: '#/components/schemas/LinkedEntity'
          nullable: true
          type: array
        alertInboxUrl:
          nullable: true
          type: string
        metadata:
          items:
            $ref: '#/components/schemas/EntityMetadataDto'
          nullable: true
          type: array
      type: object
    EnvironmentTypeDto:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      format: int32
      type: integer
    ErrorLog:
      additionalProperties: false
      example:
        date: 2000-01-23T04:56:07.000+00:00
        process: process
        text: text
      properties:
        date:
          format: date-time
          type: string
        process:
          nullable: true
          type: string
        text:
          nullable: true
          type: string
      type: object
    ErrorReportingStatusDto:
      additionalProperties: false
      example:
        isWebsiteEnabled: true
        baseMonitors:
        - baseMonitorName: baseMonitorName
          isEnabled: true
        - baseMonitorName: baseMonitorName
          isEnabled: true
      properties:
        isWebsiteEnabled:
          type: boolean
        baseMonitors:
          items:
            $ref: '#/components/schemas/BaseMonitorErrorReportingStatusDto'
          nullable: true
          type: array
      type: object
    ErrorReportingStatusDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          isWebsiteEnabled: true
          baseMonitors:
          - baseMonitorName: baseMonitorName
            isEnabled: true
          - baseMonitorName: baseMonitorName
            isEnabled: true
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/ErrorReportingStatusDto'
      type: object
    EstateBackupDto:
      additionalProperties: false
      example:
        backedUpByRedgateSqlBackup: true
        nativeBackup: true
        size: 6
        endDate: 2000-01-23T04:56:07.000+00:00
        totalSeconds: 0.8008281904610115
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        startDate:
          format: date-time
          nullable: true
          type: string
        endDate:
          format: date-time
          nullable: true
          type: string
        totalSeconds:
          format: double
          nullable: true
          type: number
        size:
          format: int64
          nullable: true
          type: integer
        nativeBackup:
          type: boolean
        backedUpByRedgateSqlBackup:
          type: boolean
      type: object
    EstateServerDto:
      additionalProperties: false
      example:
        serverDisplayName: serverDisplayName
        displayName: displayName
        clusterName: clusterName
        alias: alias
        fullyQualifiedName: fullyQualifiedName
        cir: cir
        tags:
        - name: name
        - name: name
      properties:
        cir:
          type: string
        fullyQualifiedName:
          type: string
        clusterName:
          type: string
        displayName:
          type: string
        alias:
          nullable: true
          type: string
        tags:
          items:
            $ref: '#/components/schemas/TagDto'
          type: array
        serverDisplayName:
          readOnly: true
          type: string
      type: object
    ExecutionResult:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      format: int32
      type: integer
    FailedLoginDetailDto:
      additionalProperties: false
      example:
        occurenceCount: 0
        mostRecentOccurrence: 2000-01-23T04:56:07.000+00:00
        description: description
      properties:
        description:
          nullable: true
          type: string
        occurenceCount:
          format: int32
          type: integer
        mostRecentOccurrence:
          format: date-time
          type: string
      type: object
    FailedLoginDto:
      additionalProperties: false
      example:
        serverName: serverName
        details:
        - occurenceCount: 0
          mostRecentOccurrence: 2000-01-23T04:56:07.000+00:00
          description: description
        - occurenceCount: 0
          mostRecentOccurrence: 2000-01-23T04:56:07.000+00:00
          description: description
        totalFailedLogins: 6
      properties:
        serverName:
          nullable: true
          type: string
        details:
          items:
            $ref: '#/components/schemas/FailedLoginDetailDto'
          nullable: true
          type: array
        totalFailedLogins:
          format: int32
          type: integer
      type: object
    FailedLoginDtoIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - serverName: serverName
          details:
          - occurenceCount: 0
            mostRecentOccurrence: 2000-01-23T04:56:07.000+00:00
            description: description
          - occurenceCount: 0
            mostRecentOccurrence: 2000-01-23T04:56:07.000+00:00
            description: description
          totalFailedLogins: 6
        - serverName: serverName
          details:
          - occurenceCount: 0
            mostRecentOccurrence: 2000-01-23T04:56:07.000+00:00
            description: description
          - occurenceCount: 0
            mostRecentOccurrence: 2000-01-23T04:56:07.000+00:00
            description: description
          totalFailedLogins: 6
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/FailedLoginDto'
          type: array
      type: object
    FailoverClusterDisplayOption:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    FeatureFlagBooleanDictionaryJSendSuccess:
      additionalProperties: false
      example:
        data:
          MachineLearningForecastEvaluation: true
          RegistryReading: true
          DiagnosticsVisible: true
          TestFlag_WithNoAttributes: true
          AllowVersionMismatchBetweenWebsiteAndBaseMonitors: true
          NetworkConnectionStatsFur: true
          UseAws: true
          TestFlag_WithEnabledInTestNetAttribute: true
          NewPermissionsData: true
          MultiBaseMonitorInstanceDiscovery: true
          MultiBaseMonitorGlobalDashboard: true
          SubscriptionsUseUatPermits: true
          PostgresIndexes: true
          SaaS: true
          OptimizeForKnownStatistics: true
          TestFlag_WithEnabledInDemoSiteAttribute: true
          InstanceDiscovery: true
          ShowPreviewAlertEmail: true
          OidcAuthCode: true
          AlwaysRedactQueryPlanParameters: true
          UseNewCreateCustomMetricPage: true
          CrossDbHostlessMonitoring: true
          NonParallelPermissionSampling: true
          ScriptAlertResponse: true
          ShowLinkToLinuxTestnet: true
          RecordDatabaseTimings: true
          GreaterThanOrEqualToComparatorInComplianceTemplates: true
          EnumerateGroupMembership: true
          CloudCosts: true
          AzureMiReplicationLinks: true
          Licensing: true
          LinuxSupport: true
          BulkCustomMetricCollection: true
          AllowVersionMismatchBetweenWebsiteAndPowerShellModule: true
          ForceOfflineLicensing: true
          GarbageCollectionFur: true
          PerpetualLicense: true
          ErrorReporting: true
          CrossDbMonitoring: true
          RemoveUndetectedSqlServers: true
          UiTestBench: true
          TimescaleDBRepository: true
          UseContentSecurityPolicyNonce: true
          HighAvailability: true
          IgnoreQueryThrottlingFilters: true
          XeLongRunningQueryStartAndEndTimeSampling: true
          ErrorReportingTesting: true
          AzureSqlDatabaseReplicationLinks: true
          MachineLearningForecasting: true
          FastBaseMonitorShutdown: true
          TestFlag_WithEnabledByDefaultAttribute: true
          PublicApi: true
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/FeatureFlagBooleanDictionaryJSendSuccess_data'
      type: object
    FilterSettingsDto:
      additionalProperties: false
      example:
        includeAlertTypeIds:
        - includeAlertTypeIds
        - includeAlertTypeIds
        selectedTags:
        - name: name
        - name: name
        includeStatus:
          severityMedium: true
          severityLow: true
          readNo: true
          commentNo: true
          readYes: true
          clearedYes: true
          statusActive: true
          statusEnded: true
          clearedNo: true
          statusEvent: true
          severityHigh: true
          commentYes: true
        timeRange:
          relativeMinutes: 6
          fromDateTime: 1
          type: 0
          timeWindowMode: 5
          toDateTime: 5
      properties:
        timeRange:
          $ref: '#/components/schemas/TimeRangeDto'
        includeStatus:
          $ref: '#/components/schemas/IncludeStatusDto'
        includeAlertTypeIds:
          items:
            type: string
          nullable: true
          type: array
        selectedTags:
          items:
            $ref: '#/components/schemas/TagDto'
          type: array
      type: object
    FlowType:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    FragmentAnalysisIssueDto:
      additionalProperties: false
      example:
        fragmentColumnEnd: 7
        errorText: errorText
        documentationUrl: documentationUrl
        fragmentColumnStart: 5
        fullQueryLineEnd: 5
        fragmentLineStart: 2
        description: description
        fullQueryColumnEnd: 1
        fragmentLineEnd: 9
        issueCode: issueCode
        fullQueryColumnStart: 0
        fullQueryLineStart: 6
      properties:
        issueCode:
          nullable: true
          type: string
        errorText:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        documentationUrl:
          nullable: true
          type: string
        fullQueryColumnStart:
          format: int32
          type: integer
        fullQueryLineStart:
          format: int32
          type: integer
        fullQueryColumnEnd:
          format: int32
          type: integer
        fullQueryLineEnd:
          format: int32
          type: integer
        fragmentColumnStart:
          format: int32
          type: integer
        fragmentLineStart:
          format: int32
          type: integer
        fragmentColumnEnd:
          format: int32
          type: integer
        fragmentLineEnd:
          format: int32
          type: integer
      type: object
    FragmentAnalysisIssueWithIdDto:
      additionalProperties: false
      example:
        issue:
          fragmentColumnEnd: 7
          errorText: errorText
          documentationUrl: documentationUrl
          fragmentColumnStart: 5
          fullQueryLineEnd: 5
          fragmentLineStart: 2
          description: description
          fullQueryColumnEnd: 1
          fragmentLineEnd: 9
          issueCode: issueCode
          fullQueryColumnStart: 0
          fullQueryLineStart: 6
        id:
          value: 0
      properties:
        issue:
          $ref: '#/components/schemas/FragmentAnalysisIssueDto'
        id:
          $ref: '#/components/schemas/IntegerIdentifier'
      type: object
    FragmentAnalysisIssueWithIdDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - issue:
            fragmentColumnEnd: 7
            errorText: errorText
            documentationUrl: documentationUrl
            fragmentColumnStart: 5
            fullQueryLineEnd: 5
            fragmentLineStart: 2
            description: description
            fullQueryColumnEnd: 1
            fragmentLineEnd: 9
            issueCode: issueCode
            fullQueryColumnStart: 0
            fullQueryLineStart: 6
          id:
            value: 0
        - issue:
            fragmentColumnEnd: 7
            errorText: errorText
            documentationUrl: documentationUrl
            fragmentColumnStart: 5
            fullQueryLineEnd: 5
            fragmentLineStart: 2
            description: description
            fullQueryColumnEnd: 1
            fragmentLineEnd: 9
            issueCode: issueCode
            fullQueryColumnStart: 0
            fullQueryLineStart: 6
          id:
            value: 0
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/FragmentAnalysisIssueWithIdDto'
          type: array
      type: object
    FullQueryTextDto:
      additionalProperties: false
      example:
        isTruncated: true
        fragment: fragment
        before: before
        fragmentCharacterOffset: 6
        after: after
        fragmentLineOffset: 0
        fullQuery: fullQuery
      properties:
        before:
          nullable: true
          type: string
        after:
          nullable: true
          type: string
        fragment:
          nullable: true
          type: string
        isTruncated:
          type: boolean
        fullQuery:
          nullable: true
          type: string
        fragmentLineOffset:
          format: int32
          type: integer
        fragmentCharacterOffset:
          format: int32
          type: integer
      type: object
    GlobalDashboardViewModel:
      additionalProperties: false
      example:
        emailHasBeenConfigured: true
        numberOfErroredMachinesWithNoSqlServers: 7
        entities:
        - metadata:
          - 5
          - 5
          entityType: ""
          displayName: displayName
          availabilityGroups:
          - name: name
            url: url
          - name: name
            url: url
          suspended: true
          userHasPermissionToClearAlerts: true
          instanceUrl: instanceUrl
          tags:
          - name: name
          - name: name
          baseMonitorName: baseMonitorName
          name: name
          metrics:
          - percent2Value: percent2Value
            stacked: true
            percent2Title: percent2Title
            percent1Title: percent1Title
            percentTotal: 1
            percent1Value: percent1Value
            percent1: 0
            percent2: 6
            singleValue: true
            collectionPaused: true
            type: type
            value: value
          - percent2Value: percent2Value
            stacked: true
            percent2Title: percent2Title
            percent1Title: percent1Title
            percentTotal: 1
            percent1Value: percent1Value
            percent1: 0
            percent2: 6
            singleValue: true
            collectionPaused: true
            type: type
            value: value
          getCir: ""
          status:
            severity: 1
            fullAlertTypeSerialised: fullAlertTypeSerialised
            dateRaised: 2000-01-23T04:56:07.000+00:00
            extra: 5
            startTimeTicks: 2
            alertCir: ""
            mostRelevantAlertId:
              value: 0
            lastOk: 2000-01-23T04:56:07.000+00:00
            text: text
            eventType: 0
            activeForMinutes: 6
            order: 5
          group:
            name: name
            order: 5
          alertInboxUrl: alertInboxUrl
        - metadata:
          - 5
          - 5
          entityType: ""
          displayName: displayName
          availabilityGroups:
          - name: name
            url: url
          - name: name
            url: url
          suspended: true
          userHasPermissionToClearAlerts: true
          instanceUrl: instanceUrl
          tags:
          - name: name
          - name: name
          baseMonitorName: baseMonitorName
          name: name
          metrics:
          - percent2Value: percent2Value
            stacked: true
            percent2Title: percent2Title
            percent1Title: percent1Title
            percentTotal: 1
            percent1Value: percent1Value
            percent1: 0
            percent2: 6
            singleValue: true
            collectionPaused: true
            type: type
            value: value
          - percent2Value: percent2Value
            stacked: true
            percent2Title: percent2Title
            percent1Title: percent1Title
            percentTotal: 1
            percent1Value: percent1Value
            percent1: 0
            percent2: 6
            singleValue: true
            collectionPaused: true
            type: type
            value: value
          getCir: ""
          status:
            severity: 1
            fullAlertTypeSerialised: fullAlertTypeSerialised
            dateRaised: 2000-01-23T04:56:07.000+00:00
            extra: 5
            startTimeTicks: 2
            alertCir: ""
            mostRelevantAlertId:
              value: 0
            lastOk: 2000-01-23T04:56:07.000+00:00
            text: text
            eventType: 0
            activeForMinutes: 6
            order: 5
          group:
            name: name
            order: 5
          alertInboxUrl: alertInboxUrl
        userHasGlobalPermissionToClearAlerts: true
        latestCollection: 2
        userHasPermissionToAlias: true
        userHasPermissionToSeeOnboarding: true
        userHasPermissionToClearAlerts: true
      properties:
        emailHasBeenConfigured:
          type: boolean
        userHasPermissionToSeeOnboarding:
          type: boolean
        userHasPermissionToClearAlerts:
          type: boolean
        entities:
          items:
            $ref: '#/components/schemas/EntityViewModel'
          nullable: true
          type: array
        userHasPermissionToAlias:
          type: boolean
        userHasGlobalPermissionToClearAlerts:
          type: boolean
        latestCollection:
          format: int64
          type: integer
        numberOfErroredMachinesWithNoSqlServers:
          format: int64
          type: integer
      type: object
    GlobalDashboardViewModelJSendSuccess:
      additionalProperties: false
      example:
        data:
          emailHasBeenConfigured: true
          numberOfErroredMachinesWithNoSqlServers: 7
          entities:
          - metadata:
            - 5
            - 5
            entityType: ""
            displayName: displayName
            availabilityGroups:
            - name: name
              url: url
            - name: name
              url: url
            suspended: true
            userHasPermissionToClearAlerts: true
            instanceUrl: instanceUrl
            tags:
            - name: name
            - name: name
            baseMonitorName: baseMonitorName
            name: name
            metrics:
            - percent2Value: percent2Value
              stacked: true
              percent2Title: percent2Title
              percent1Title: percent1Title
              percentTotal: 1
              percent1Value: percent1Value
              percent1: 0
              percent2: 6
              singleValue: true
              collectionPaused: true
              type: type
              value: value
            - percent2Value: percent2Value
              stacked: true
              percent2Title: percent2Title
              percent1Title: percent1Title
              percentTotal: 1
              percent1Value: percent1Value
              percent1: 0
              percent2: 6
              singleValue: true
              collectionPaused: true
              type: type
              value: value
            getCir: ""
            status:
              severity: 1
              fullAlertTypeSerialised: fullAlertTypeSerialised
              dateRaised: 2000-01-23T04:56:07.000+00:00
              extra: 5
              startTimeTicks: 2
              alertCir: ""
              mostRelevantAlertId:
                value: 0
              lastOk: 2000-01-23T04:56:07.000+00:00
              text: text
              eventType: 0
              activeForMinutes: 6
              order: 5
            group:
              name: name
              order: 5
            alertInboxUrl: alertInboxUrl
          - metadata:
            - 5
            - 5
            entityType: ""
            displayName: displayName
            availabilityGroups:
            - name: name
              url: url
            - name: name
              url: url
            suspended: true
            userHasPermissionToClearAlerts: true
            instanceUrl: instanceUrl
            tags:
            - name: name
            - name: name
            baseMonitorName: baseMonitorName
            name: name
            metrics:
            - percent2Value: percent2Value
              stacked: true
              percent2Title: percent2Title
              percent1Title: percent1Title
              percentTotal: 1
              percent1Value: percent1Value
              percent1: 0
              percent2: 6
              singleValue: true
              collectionPaused: true
              type: type
              value: value
            - percent2Value: percent2Value
              stacked: true
              percent2Title: percent2Title
              percent1Title: percent1Title
              percentTotal: 1
              percent1Value: percent1Value
              percent1: 0
              percent2: 6
              singleValue: true
              collectionPaused: true
              type: type
              value: value
            getCir: ""
            status:
              severity: 1
              fullAlertTypeSerialised: fullAlertTypeSerialised
              dateRaised: 2000-01-23T04:56:07.000+00:00
              extra: 5
              startTimeTicks: 2
              alertCir: ""
              mostRelevantAlertId:
                value: 0
              lastOk: 2000-01-23T04:56:07.000+00:00
              text: text
              eventType: 0
              activeForMinutes: 6
              order: 5
            group:
              name: name
              order: 5
            alertInboxUrl: alertInboxUrl
          userHasGlobalPermissionToClearAlerts: true
          latestCollection: 2
          userHasPermissionToAlias: true
          userHasPermissionToSeeOnboarding: true
          userHasPermissionToClearAlerts: true
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/GlobalDashboardViewModel'
      type: object
    GraphDataViewModel:
      additionalProperties: false
      example:
        other:
        - - 3
          - 3
        - - 3
          - 3
        allocatedSql:
        - - 9
          - 9
        - - 9
          - 9
        freeSpace:
        - - 2
          - 2
        - - 2
          - 2
        usedSql:
        - - 4
          - 4
        - - 4
          - 4
      properties:
        allocatedSql:
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
        other:
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
        freeSpace:
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
        usedSql:
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
      type: object
    GroupDto:
      additionalProperties: false
      example:
        displayType: ""
        baseMonitor:
          port: 0
          displayName: displayName
          name: name
          type: type
          isDisconnected: true
        name: name
        fullName: fullName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        cir: ""
        parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        parentId:
          format: uuid
          nullable: true
          type: string
        baseMonitor:
          $ref: '#/components/schemas/BaseMonitorDto'
        type:
          nullable: true
          readOnly: true
          type: string
        displayType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          readOnly: true
          type: EntityType
        fullName:
          nullable: true
          type: string
      type: object
    GroupIdDto:
      additionalProperties: false
      example:
        groupCir: ""
        alertType: 0
        lastUpdate: lastUpdate
        subType: 6
        firstUpdate: firstUpdate
      properties:
        groupCir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        alertType:
          format: int32
          type: integer
        subType:
          format: int32
          type: integer
        lastUpdate:
          nullable: true
          type: string
        firstUpdate:
          nullable: true
          type: string
      type: object
    GroupOfAlertsDto:
      additionalProperties: false
      example:
        maxTimestamp: maxTimestamp
        hasMoreItems: true
        firstAlertId:
          value: 0
        totalGroupCount: 1
        maxAlertId:
          value: 0
        timeRangeText: timeRangeText
        items:
        - severity: 3
          alertSubType: 6
          groupCir: ""
          alertType: 0
          highSeverityCount: 7
          dynamicAlert: true
          unread: 9
          entityType: ""
          groupId:
            groupCir: ""
            alertType: 0
            lastUpdate: lastUpdate
            subType: 6
            firstUpdate: firstUpdate
          mediumSeverityCount: 2
          raised: 7
          alertTypeDefinition: alertTypeDefinition
          firstUpdate: 1
          objectType: objectType
          tags:
          - name: name
          - name: name
          duration: 4
          baseMonitorName: baseMonitorName
          groupCount: 2
          maxAlertId:
            value: 0
          lastUpdate: 5
          objectName: objectName
          lastComment: lastComment
          status: status
          lowSeverityCount: 5
        - severity: 3
          alertSubType: 6
          groupCir: ""
          alertType: 0
          highSeverityCount: 7
          dynamicAlert: true
          unread: 9
          entityType: ""
          groupId:
            groupCir: ""
            alertType: 0
            lastUpdate: lastUpdate
            subType: 6
            firstUpdate: firstUpdate
          mediumSeverityCount: 2
          raised: 7
          alertTypeDefinition: alertTypeDefinition
          firstUpdate: 1
          objectType: objectType
          tags:
          - name: name
          - name: name
          duration: 4
          baseMonitorName: baseMonitorName
          groupCount: 2
          maxAlertId:
            value: 0
          lastUpdate: 5
          objectName: objectName
          lastComment: lastComment
          status: status
          lowSeverityCount: 5
        asOfTicks: 1
        minTimestamp: minTimestamp
        totalItemCount: 1
      properties:
        items:
          items:
            $ref: '#/components/schemas/GroupedAlertDto'
          nullable: true
          type: array
        totalItemCount:
          format: int32
          type: integer
        totalGroupCount:
          format: int32
          type: integer
        asOfTicks:
          format: int64
          type: integer
        minTimestamp:
          nullable: true
          type: string
        maxTimestamp:
          nullable: true
          type: string
        hasMoreItems:
          type: boolean
        firstAlertId:
          $ref: '#/components/schemas/IntegerIdentifier'
        maxAlertId:
          $ref: '#/components/schemas/IntegerIdentifier'
        timeRangeText:
          nullable: true
          type: string
      type: object
    GroupedAlertDto:
      additionalProperties: false
      example:
        severity: 3
        alertSubType: 6
        groupCir: ""
        alertType: 0
        highSeverityCount: 7
        dynamicAlert: true
        unread: 9
        entityType: ""
        groupId:
          groupCir: ""
          alertType: 0
          lastUpdate: lastUpdate
          subType: 6
          firstUpdate: firstUpdate
        mediumSeverityCount: 2
        raised: 7
        alertTypeDefinition: alertTypeDefinition
        firstUpdate: 1
        objectType: objectType
        tags:
        - name: name
        - name: name
        duration: 4
        baseMonitorName: baseMonitorName
        groupCount: 2
        maxAlertId:
          value: 0
        lastUpdate: 5
        objectName: objectName
        lastComment: lastComment
        status: status
        lowSeverityCount: 5
      properties:
        groupId:
          $ref: '#/components/schemas/GroupIdDto'
        objectName:
          nullable: true
          type: string
        objectType:
          nullable: true
          type: string
        entityType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
        groupCir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        alertType:
          format: int32
          type: integer
        alertSubType:
          format: int32
          type: integer
        maxAlertId:
          $ref: '#/components/schemas/IntegerIdentifier'
        alertTypeDefinition:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        firstUpdate:
          format: int64
          type: integer
        lastUpdate:
          format: int64
          type: integer
        lowSeverityCount:
          format: int32
          type: integer
        mediumSeverityCount:
          format: int32
          type: integer
        highSeverityCount:
          format: int32
          type: integer
        unread:
          format: int32
          type: integer
        severity:
          $ref: '#/components/schemas/AlertSeverityDto'
        groupCount:
          format: int32
          type: integer
        baseMonitorName:
          nullable: true
          type: string
        duration:
          format: int64
          type: integer
        raised:
          format: int64
          type: integer
        lastComment:
          nullable: true
          type: string
        tags:
          items:
            $ref: '#/components/schemas/TagDto'
          nullable: true
          type: array
        dynamicAlert:
          type: boolean
      type: object
    GroupedPostgresConfigurationOptionsDto:
      additionalProperties: false
      example:
        groupedOptions:
          key:
            options:
              key: null
      properties:
        groupedOptions:
          additionalProperties:
            $ref: '#/components/schemas/PostgresConfigurationOptionsDto'
          nullable: true
          type: object
      type: object
    GroupedPostgresConfigurationOptionsDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          groupedOptions:
            key:
              options:
                key: null
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/GroupedPostgresConfigurationOptionsDto'
      type: object
    GroupedTopQueryDto:
      additionalProperties: false
      properties:
        channelInstanceRef:
          format: entity-id
          type: ChannelInstanceRef
        queryText:
          $ref: '#/components/schemas/FullQueryTextDto'
        planHandle:
          type: string
        queryHash:
          type: string
        createDate:
          format: date-time
          type: string
        objectName:
          type: string
        database:
          type: string
        duration:
          format: int64
          type: integer
        executionCount:
          format: int64
          type: integer
        cpuTime:
          format: int64
          type: integer
        physicalReads:
          format: int64
          type: integer
        logicalReads:
          format: int64
          type: integer
        logicalWrites:
          format: int64
          type: integer
        usedMemoryGrant:
          format: int64
          type: integer
        memoryGrant:
          format: int64
          type: integer
        impact:
          format: double
          type: number
        groupedQueries:
          items:
            $ref: '#/components/schemas/TopQueryDto'
          type: array
        isTrackedAndNotInZoomRange:
          readOnly: true
          type: boolean
      type: object
    GuestStatus:
      additionalProperties: false
      example:
        hostName: hostName
        name: name
        vMwareToolsStatus: vMwareToolsStatus
        status: status
      properties:
        name:
          type: string
        hostName:
          type: string
        status:
          type: string
        vMwareToolsStatus:
          type: string
      required:
      - hostName
      - name
      - status
      - vMwareToolsStatus
      type: object
    GuidJSendSuccess:
      additionalProperties: false
      example:
        data: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          format: uuid
          type: string
      type: object
    HistoricVolumeUsageViewModel:
      additionalProperties: false
      example:
        totalProjectedSizeNow: 6.027456183070403
        showLimitedDataWarning: true
        totalUsedSpace: 5.962133916683182
        totalCapacity: 5.637376656633329
        showShortPurgeSettingWarning: true
        used:
        - - 0
          - 0
        - - 0
          - 0
        totalProjectedSizeInOneYear: 1.4658129805029452
        storageDataPurgeLifeTime: storageDataPurgeLifeTime
      properties:
        showLimitedDataWarning:
          type: boolean
        showShortPurgeSettingWarning:
          type: boolean
        used:
          items:
            items:
              format: int64
              type: integer
            type: array
          nullable: true
          type: array
        totalProjectedSizeNow:
          format: double
          type: number
        totalProjectedSizeInOneYear:
          format: double
          type: number
        totalUsedSpace:
          format: double
          type: number
        totalCapacity:
          format: double
          type: number
        storageDataPurgeLifeTime:
          nullable: true
          type: string
      type: object
    HistoricVolumeUsageViewModelJSendSuccess:
      additionalProperties: false
      example:
        data:
          totalProjectedSizeNow: 6.027456183070403
          showLimitedDataWarning: true
          totalUsedSpace: 5.962133916683182
          totalCapacity: 5.637376656633329
          showShortPurgeSettingWarning: true
          used:
          - - 0
            - 0
          - - 0
            - 0
          totalProjectedSizeInOneYear: 1.4658129805029452
          storageDataPurgeLifeTime: storageDataPurgeLifeTime
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/HistoricVolumeUsageViewModel'
      type: object
    HostStatus:
      additionalProperties: false
      example:
        name: name
        guests:
        - hostName: hostName
          name: name
          vMwareToolsStatus: vMwareToolsStatus
          status: status
        - hostName: hostName
          name: name
          vMwareToolsStatus: vMwareToolsStatus
          status: status
        status: null
      properties:
        name:
          type: string
        status:
          $ref: '#/components/schemas/VMwareServerStatus'
        guests:
          items:
            $ref: '#/components/schemas/GuestStatus'
          type: array
      required:
      - guests
      - name
      - status
      type: object
    HostedSqlServerInstanceDto:
      additionalProperties: false
      example:
        monitoredObjectState:
          isMonitored: true
          configurationState: configurationState
          status: status
        displayType: ""
        machine:
          monitoredObjectState:
            isMonitored: true
            configurationState: configurationState
            status: status
          displayType: ""
          entityReference: ""
          baseMonitor:
            port: 0
            displayName: displayName
            name: name
            type: type
            isDisconnected: true
          name: name
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
          group:
            displayType: ""
            baseMonitor:
              port: 0
              displayName: displayName
              name: name
              type: type
              isDisconnected: true
            name: name
            fullName: fullName
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            type: type
            cir: ""
            parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        entityReference: ""
        baseMonitor:
          port: 0
          displayName: displayName
          name: name
          type: type
          isDisconnected: true
        name: name
        fullName: fullName
        alias: alias
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        cir: ""
        tags:
        - name: name
        - name: name
      properties:
        name:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        monitoredObjectState:
          $ref: '#/components/schemas/MonitoredObjectStateDto'
        machine:
          $ref: '#/components/schemas/LinuxMachineDto'
        entityReference:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        type:
          nullable: true
          readOnly: true
          type: string
        displayType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          readOnly: true
          type: EntityType
        fullName:
          nullable: true
          readOnly: true
          type: string
        alias:
          nullable: true
          type: string
        baseMonitor:
          $ref: '#/components/schemas/BaseMonitorDto'
        tags:
          items:
            $ref: '#/components/schemas/TagDto'
          nullable: true
          type: array
      type: object
    ISpecificAlertSettingsDto:
      additionalProperties: false
      type: object
    IncludeStatusDto:
      additionalProperties: false
      example:
        severityMedium: true
        severityLow: true
        readNo: true
        commentNo: true
        readYes: true
        clearedYes: true
        statusActive: true
        statusEnded: true
        clearedNo: true
        statusEvent: true
        severityHigh: true
        commentYes: true
      properties:
        severityHigh:
          type: boolean
        severityMedium:
          type: boolean
        severityLow:
          type: boolean
        readYes:
          type: boolean
        readNo:
          type: boolean
        clearedYes:
          type: boolean
        clearedNo:
          type: boolean
        statusEvent:
          type: boolean
        statusActive:
          type: boolean
        statusEnded:
          type: boolean
        commentYes:
          type: boolean
        commentNo:
          type: boolean
      type: object
    IndexColumnDto:
      additionalProperties: false
      example:
        isDescending: true
        keyOrdinal: 0
        isComputed: true
        name: name
        isIncluded: true
      properties:
        name:
          type: string
        isDescending:
          type: boolean
        isComputed:
          type: boolean
        isIncluded:
          type: boolean
        keyOrdinal:
          format: int64
          type: integer
      type: object
    IndexColumnDtoIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - isDescending: true
          keyOrdinal: 0
          isComputed: true
          name: name
          isIncluded: true
        - isDescending: true
          keyOrdinal: 0
          isComputed: true
          name: name
          isIncluded: true
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/IndexColumnDto'
          type: array
      type: object
    IndexDetailsDto:
      additionalProperties: false
      example:
        lookups: 5
        databaseName: databaseName
        isUnique: true
        updates: 6
        lastUsed: 2000-01-23T04:56:07.000+00:00
        sizeUsedKb: 0
        parentObjectName: parentObjectName
        lastUpdated: 2000-01-23T04:56:07.000+00:00
        indexType: 2
        scans: 5
        parentObjectId:
          value: 0
        name: name
        isFiltered: true
        seeks: 1
        fillFactor: 7
      properties:
        name:
          nullable: true
          type: string
        sizeUsedKb:
          format: int64
          nullable: true
          type: integer
        updates:
          format: int64
          type: integer
        seeks:
          format: int64
          type: integer
        scans:
          format: int64
          type: integer
        lookups:
          format: int64
          type: integer
        lastUsed:
          format: date-time
          nullable: true
          type: string
        indexType:
          $ref: '#/components/schemas/IndexTypeDto'
        isUnique:
          type: boolean
        parentObjectId:
          $ref: '#/components/schemas/IntegerIdentifier'
        parentObjectName:
          type: string
        databaseName:
          type: string
        lastUpdated:
          format: date-time
          nullable: true
          type: string
        fillFactor:
          format: int64
          type: integer
        isFiltered:
          type: boolean
      type: object
    IndexDetailsDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          lookups: 5
          databaseName: databaseName
          isUnique: true
          updates: 6
          lastUsed: 2000-01-23T04:56:07.000+00:00
          sizeUsedKb: 0
          parentObjectName: parentObjectName
          lastUpdated: 2000-01-23T04:56:07.000+00:00
          indexType: 2
          scans: 5
          parentObjectId:
            value: 0
          name: name
          isFiltered: true
          seeks: 1
          fillFactor: 7
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/IndexDetailsDto'
      type: object
    IndexStatusDto:
      enum:
      - 0
      format: int32
      type: integer
    IndexTableDataDto:
      additionalProperties: false
      example:
        lastSample: 2000-01-23T04:56:07.000+00:00
        indexes:
        - lookups: 9
          databaseName: databaseName
          isUnique: true
          updates: 5
          indexCir:
            rootChannelInstanceRef: ""
            channelKey:
              keys:
                key: ""
              propertyNames:
              - name: name
              - name: name
              count: 1
            channelRef:
              parent: ""
              depth: 0
              isRoot: true
              leadingChannelRefs:
              - null
              - null
              qualifiedChannelName:
                parent: null
                tailQualifiedChannelName: null
                depth: 6
                isRoot: true
                qualifiedSubChannelNames:
                - null
                - null
                headChannelName:
                  name: name
                subChannelNames:
                - name: name
                - name: name
                channelName:
                  name: name
                qualifiedChannelNames:
                - null
                - null
              channelName:
                name: name
            channelInstanceRefs:
            - ""
            - ""
            subChannelInstanceRefs:
            - ""
            - ""
          lastUsed: 2000-01-23T04:56:07.000+00:00
          parentObjectName: parentObjectName
          sizeUsedKb: 5
          indexType: 3
          scans: 7
          name: name
          seeks: 2
          status: 2
        - lookups: 9
          databaseName: databaseName
          isUnique: true
          updates: 5
          indexCir:
            rootChannelInstanceRef: ""
            channelKey:
              keys:
                key: ""
              propertyNames:
              - name: name
              - name: name
              count: 1
            channelRef:
              parent: ""
              depth: 0
              isRoot: true
              leadingChannelRefs:
              - null
              - null
              qualifiedChannelName:
                parent: null
                tailQualifiedChannelName: null
                depth: 6
                isRoot: true
                qualifiedSubChannelNames:
                - null
                - null
                headChannelName:
                  name: name
                subChannelNames:
                - name: name
                - name: name
                channelName:
                  name: name
                qualifiedChannelNames:
                - null
                - null
              channelName:
                name: name
            channelInstanceRefs:
            - ""
            - ""
            subChannelInstanceRefs:
            - ""
            - ""
          lastUsed: 2000-01-23T04:56:07.000+00:00
          parentObjectName: parentObjectName
          sizeUsedKb: 5
          indexType: 3
          scans: 7
          name: name
          seeks: 2
          status: 2
        firstSample: 2000-01-23T04:56:07.000+00:00
      properties:
        indexes:
          items:
            $ref: '#/components/schemas/IndexesTableItemDto'
          type: array
        firstSample:
          format: date-time
          nullable: true
          type: string
        lastSample:
          format: date-time
          nullable: true
          type: string
      type: object
    IndexTableDataDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          lastSample: 2000-01-23T04:56:07.000+00:00
          indexes:
          - lookups: 9
            databaseName: databaseName
            isUnique: true
            updates: 5
            indexCir:
              rootChannelInstanceRef: ""
              channelKey:
                keys:
                  key: ""
                propertyNames:
                - name: name
                - name: name
                count: 1
              channelRef:
                parent: ""
                depth: 0
                isRoot: true
                leadingChannelRefs:
                - null
                - null
                qualifiedChannelName:
                  parent: null
                  tailQualifiedChannelName: null
                  depth: 6
                  isRoot: true
                  qualifiedSubChannelNames:
                  - null
                  - null
                  headChannelName:
                    name: name
                  subChannelNames:
                  - name: name
                  - name: name
                  channelName:
                    name: name
                  qualifiedChannelNames:
                  - null
                  - null
                channelName:
                  name: name
              channelInstanceRefs:
              - ""
              - ""
              subChannelInstanceRefs:
              - ""
              - ""
            lastUsed: 2000-01-23T04:56:07.000+00:00
            parentObjectName: parentObjectName
            sizeUsedKb: 5
            indexType: 3
            scans: 7
            name: name
            seeks: 2
            status: 2
          - lookups: 9
            databaseName: databaseName
            isUnique: true
            updates: 5
            indexCir:
              rootChannelInstanceRef: ""
              channelKey:
                keys:
                  key: ""
                propertyNames:
                - name: name
                - name: name
                count: 1
              channelRef:
                parent: ""
                depth: 0
                isRoot: true
                leadingChannelRefs:
                - null
                - null
                qualifiedChannelName:
                  parent: null
                  tailQualifiedChannelName: null
                  depth: 6
                  isRoot: true
                  qualifiedSubChannelNames:
                  - null
                  - null
                  headChannelName:
                    name: name
                  subChannelNames:
                  - name: name
                  - name: name
                  channelName:
                    name: name
                  qualifiedChannelNames:
                  - null
                  - null
                channelName:
                  name: name
              channelInstanceRefs:
              - ""
              - ""
              subChannelInstanceRefs:
              - ""
              - ""
            lastUsed: 2000-01-23T04:56:07.000+00:00
            parentObjectName: parentObjectName
            sizeUsedKb: 5
            indexType: 3
            scans: 7
            name: name
            seeks: 2
            status: 2
          firstSample: 2000-01-23T04:56:07.000+00:00
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/IndexTableDataDto'
      type: object
    IndexTypeDto:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      format: int32
      type: integer
    IndexUsageDto:
      additionalProperties: false
      example:
        lookups: 1
        scans: 6
        collectionDate: 2000-01-23T04:56:07.000+00:00
        seeks: 0
      properties:
        collectionDate:
          format: date-time
          type: string
        seeks:
          format: int64
          type: integer
        scans:
          format: int64
          type: integer
        lookups:
          format: int64
          type: integer
      type: object
    IndexUsageDtoIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - lookups: 1
          scans: 6
          collectionDate: 2000-01-23T04:56:07.000+00:00
          seeks: 0
        - lookups: 1
          scans: 6
          collectionDate: 2000-01-23T04:56:07.000+00:00
          seeks: 0
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/IndexUsageDto'
          type: array
      type: object
    IndexesTableItemDto:
      additionalProperties: false
      example:
        lookups: 9
        databaseName: databaseName
        isUnique: true
        updates: 5
        indexCir:
          rootChannelInstanceRef: ""
          channelKey:
            keys:
              key: ""
            propertyNames:
            - name: name
            - name: name
            count: 1
          channelRef:
            parent: ""
            depth: 0
            isRoot: true
            leadingChannelRefs:
            - null
            - null
            qualifiedChannelName:
              parent: null
              tailQualifiedChannelName: null
              depth: 6
              isRoot: true
              qualifiedSubChannelNames:
              - null
              - null
              headChannelName:
                name: name
              subChannelNames:
              - name: name
              - name: name
              channelName:
                name: name
              qualifiedChannelNames:
              - null
              - null
            channelName:
              name: name
          channelInstanceRefs:
          - ""
          - ""
          subChannelInstanceRefs:
          - ""
          - ""
        lastUsed: 2000-01-23T04:56:07.000+00:00
        parentObjectName: parentObjectName
        sizeUsedKb: 5
        indexType: 3
        scans: 7
        name: name
        seeks: 2
        status: 2
      properties:
        indexCir:
          $ref: '#/components/schemas/_SqlInstance_IndexesChannelInstanceRef'
        parentObjectName:
          type: string
        databaseName:
          type: string
        name:
          nullable: true
          type: string
        sizeUsedKb:
          format: int64
          nullable: true
          type: integer
        updates:
          format: int64
          type: integer
        seeks:
          format: int64
          type: integer
        scans:
          format: int64
          type: integer
        lookups:
          format: int64
          type: integer
        lastUsed:
          format: date-time
          nullable: true
          type: string
        indexType:
          $ref: '#/components/schemas/IndexTypeDto'
        isUnique:
          type: boolean
        status:
          $ref: '#/components/schemas/IndexStatusDto'
      type: object
    InstanceMetricLineGroup:
      additionalProperties: false
      example:
        max: 7.386281948385884
        name: name
        lines:
        - tooltipFormatter: tooltipFormatter
          data:
          - - 7.061401241503109
            - 7.061401241503109
          - - 7.061401241503109
            - 7.061401241503109
          color: color
          max: 9.301444243932576
          dashStyle: dashStyle
          markerSymbol: markerSymbol
          lineColor: lineColor
          analysisLinkData:
            serializedTime: serializedTime
            metrics:
            - dataStream: dataStream
              cir: cir
            - dataStream: dataStream
              cir: cir
          lineWidth: 3
          tooltipSuffix: tooltipSuffix
          name: name
          id: id
          yAxisScale:
            min: 2
            max: 4
        - tooltipFormatter: tooltipFormatter
          data:
          - - 7.061401241503109
            - 7.061401241503109
          - - 7.061401241503109
            - 7.061401241503109
          color: color
          max: 9.301444243932576
          dashStyle: dashStyle
          markerSymbol: markerSymbol
          lineColor: lineColor
          analysisLinkData:
            serializedTime: serializedTime
            metrics:
            - dataStream: dataStream
              cir: cir
            - dataStream: dataStream
              cir: cir
          lineWidth: 3
          tooltipSuffix: tooltipSuffix
          name: name
          id: id
          yAxisScale:
            min: 2
            max: 4
        analysisLinkData:
          serializedTime: serializedTime
          metrics:
          - dataStream: dataStream
            cir: cir
          - dataStream: dataStream
            cir: cir
      properties:
        name:
          nullable: true
          type: string
        lines:
          items:
            $ref: '#/components/schemas/MetricLine'
          nullable: true
          type: array
        max:
          format: double
          type: number
        analysisLinkData:
          $ref: '#/components/schemas/AnalysisLinkData'
      type: object
    Int32JSendSuccess:
      additionalProperties: false
      example:
        data: 0
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          format: int32
          type: integer
      type: object
    IntegerIdentifier:
      additionalProperties: false
      example:
        value: 0
      properties:
        value:
          format: int64
          type: integer
      type: object
    IntegerIdentifierJSendSuccess:
      additionalProperties: false
      example:
        data:
          value: 0
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/IntegerIdentifier'
      type: object
    InternalServerError:
      additionalProperties: false
      example:
        exception: exception
        data:
          key: ""
        isBaseMonitorError: true
      properties:
        exception:
          type: string
        data:
          additionalProperties: {}
          nullable: true
          type: object
        isBaseMonitorError:
          type: boolean
      type: object
    InternalServerErrorJSendDataError:
      additionalProperties: false
      example:
        data:
          exception: exception
          data:
            key: ""
          isBaseMonitorError: true
        message: message
        status: error
      properties:
        status:
          enum:
          - error
          readOnly: true
          type: string
        message:
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/InternalServerError'
      type: object
    JSendCodeError:
      additionalProperties: false
      example:
        code: 0
        message: message
        status: error
      properties:
        status:
          enum:
          - error
          readOnly: true
          type: string
        message:
          readOnly: true
          type: string
        code:
          format: int32
          type: integer
      type: object
    JSendError:
      additionalProperties: false
      example:
        message: message
        status: error
      properties:
        status:
          enum:
          - error
          readOnly: true
          type: string
        message:
          readOnly: true
          type: string
      type: object
    JSendFailure:
      additionalProperties: false
      example:
        data:
          key: data
        status: fail
      properties:
        status:
          enum:
          - fail
          readOnly: true
          type: string
        data:
          additionalProperties:
            type: string
          readOnly: true
          type: object
      type: object
    JSendSuccess:
      additionalProperties: false
      example:
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
      type: object
    JToken:
      items: {}
      type: array
    JobExecutionResultDto:
      additionalProperties: false
      example:
        date: 2000-01-23T04:56:07.000+00:00
        duration: duration
        step: step
        message: message
        status: 2
      properties:
        date:
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/ExecutionResult'
        duration:
          format: date-span
          type: string
        message:
          nullable: true
          type: string
        step:
          nullable: true
          type: string
      type: object
    JobExecutionViewModel:
      additionalProperties: false
      example:
        lastRun:
          date: 2000-01-23T04:56:07.000+00:00
          duration: duration
          step: step
          message: message
          status: 2
        name: name
        description: description
        executionCount: 1
        successCount: 5
        category: category
        failureCount: 5
        nextRun: 2000-01-23T04:56:07.000+00:00
      properties:
        category:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        executionCount:
          format: int32
          type: integer
        successCount:
          format: int32
          type: integer
        failureCount:
          format: int32
          type: integer
        nextRun:
          format: date-time
          nullable: true
          type: string
        lastRun:
          $ref: '#/components/schemas/JobExecutionResultDto'
      type: object
    JobFilterInfo:
      additionalProperties: false
      example:
        groups:
        - groups
        - groups
        filterText: filterText
        categories:
        - categories
        - categories
        numberOfDaysHistory: 0
      properties:
        numberOfDaysHistory:
          format: int32
          type: integer
        filterText:
          nullable: true
          type: string
        categories:
          items:
            type: string
          nullable: true
          type: array
        groups:
          items:
            type: string
          nullable: true
          type: array
      type: object
    JobHistoryViewModel:
      additionalProperties: false
      example:
        duration: duration
        dateRun: dateRun
        step: step
        message: message
        serverOverviewUrl: serverOverviewUrl
        status: 0
      properties:
        dateRun:
          nullable: true
          readOnly: true
          type: string
        duration:
          nullable: true
          readOnly: true
          type: string
        status:
          format: int32
          readOnly: true
          type: integer
        step:
          nullable: true
          readOnly: true
          type: string
        message:
          nullable: true
          readOnly: true
          type: string
        serverOverviewUrl:
          nullable: true
          readOnly: true
          type: string
      type: object
    JobsBucketViewModel:
      additionalProperties: false
      example:
        date: 2000-01-23T04:56:07.000+00:00
        successCount: 0
        failureCount: 6
      properties:
        date:
          format: date-time
          type: string
        successCount:
          format: int32
          type: integer
        failureCount:
          format: int32
          type: integer
      type: object
    JobsRowViewModel:
      additionalProperties: false
      example:
        entityName: entityName
        entityType: ""
        baseMonitor: baseMonitor
        clusterName: clusterName
        job:
          lastRun:
            date: 2000-01-23T04:56:07.000+00:00
            duration: duration
            step: step
            message: message
            status: 2
          name: name
          description: description
          executionCount: 1
          successCount: 5
          category: category
          failureCount: 5
          nextRun: 2000-01-23T04:56:07.000+00:00
        cir: ""
        serverOverviewUrl: serverOverviewUrl
        group: group
        tags:
        - name: name
        - name: name
      properties:
        baseMonitor:
          nullable: true
          type: string
        cir:
          format: entity-id
          nullable: true
          readOnly: true
          type: ChannelInstanceRef
        entityName:
          nullable: true
          readOnly: true
          type: string
        group:
          nullable: true
          readOnly: true
          type: string
        job:
          $ref: '#/components/schemas/JobExecutionViewModel'
        serverOverviewUrl:
          nullable: true
          readOnly: true
          type: string
        tags:
          items:
            $ref: '#/components/schemas/TagDto'
          nullable: true
          readOnly: true
          type: array
        clusterName:
          nullable: true
          type: string
        entityType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
      type: object
    JobsViewModel:
      additionalProperties: false
      example:
        summary:
        - date: 2000-01-23T04:56:07.000+00:00
          successCount: 0
          failureCount: 6
        - date: 2000-01-23T04:56:07.000+00:00
          successCount: 0
          failureCount: 6
        jobs:
        - entityName: entityName
          entityType: ""
          baseMonitor: baseMonitor
          clusterName: clusterName
          job:
            lastRun:
              date: 2000-01-23T04:56:07.000+00:00
              duration: duration
              step: step
              message: message
              status: 2
            name: name
            description: description
            executionCount: 1
            successCount: 5
            category: category
            failureCount: 5
            nextRun: 2000-01-23T04:56:07.000+00:00
          cir: ""
          serverOverviewUrl: serverOverviewUrl
          group: group
          tags:
          - name: name
          - name: name
        - entityName: entityName
          entityType: ""
          baseMonitor: baseMonitor
          clusterName: clusterName
          job:
            lastRun:
              date: 2000-01-23T04:56:07.000+00:00
              duration: duration
              step: step
              message: message
              status: 2
            name: name
            description: description
            executionCount: 1
            successCount: 5
            category: category
            failureCount: 5
            nextRun: 2000-01-23T04:56:07.000+00:00
          cir: ""
          serverOverviewUrl: serverOverviewUrl
          group: group
          tags:
          - name: name
          - name: name
        groups:
        - groups
        - groups
        categories:
        - categories
        - categories
        showShortPurgeSettingWarning: true
        jobHistoryDataPurgeLifetime: jobHistoryDataPurgeLifetime
        timeFormatString: timeFormatString
      properties:
        summary:
          items:
            $ref: '#/components/schemas/JobsBucketViewModel'
          nullable: true
          type: array
        jobs:
          items:
            $ref: '#/components/schemas/JobsRowViewModel'
          nullable: true
          type: array
        groups:
          items:
            type: string
          nullable: true
          type: array
        categories:
          items:
            type: string
          nullable: true
          type: array
        timeFormatString:
          nullable: true
          type: string
        showShortPurgeSettingWarning:
          type: boolean
        jobHistoryDataPurgeLifetime:
          nullable: true
          type: string
      type: object
    LatestBackupDto:
      additionalProperties: false
      example:
        duration: 0.8008281904610115
        backedUpByRedgateSqlBackup: true
        nativeBackup: true
        size: 6
        endDate: 2000-01-23T04:56:07.000+00:00
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        duration:
          format: double
          type: number
        size:
          format: int64
          type: integer
        nativeBackup:
          type: boolean
        backedUpByRedgateSqlBackup:
          type: boolean
      type: object
    LatestUpdateViewModel:
      additionalProperties: false
      example:
        servicePackDownloadUrl: servicePackDownloadUrl
        productLevel: productLevel
        releaseDate: 2000-01-23T04:56:07.000+00:00
        downloadUrl: downloadUrl
        versionNumber: versionNumber
      properties:
        productLevel:
          nullable: true
          type: string
        downloadUrl:
          nullable: true
          type: string
        servicePackDownloadUrl:
          nullable: true
          type: string
        releaseDate:
          format: date-time
          type: string
        versionNumber:
          nullable: true
          type: string
      type: object
    LicencedFeatureFlag:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    LicencedFeatureFlagJSendSuccess:
      additionalProperties: false
      example:
        data: 0
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/LicencedFeatureFlag'
      type: object
    LicensingWarningsDto:
      additionalProperties: false
      example:
        licenceText: licenceText
        showPermitExpiringSoon: true
        areUnlicensedServers: true
        isTrialExpired: true
        isTrial: true
        permitText: permitText
      properties:
        licenceText:
          nullable: true
          type: string
        isTrial:
          type: boolean
        isTrialExpired:
          type: boolean
        permitText:
          nullable: true
          type: string
        showPermitExpiringSoon:
          type: boolean
        areUnlicensedServers:
          type: boolean
      type: object
    LinkedEntity:
      additionalProperties: false
      example:
        name: name
        url: url
      properties:
        name:
          nullable: true
          type: string
        url:
          nullable: true
          type: string
      type: object
    LinuxMachineConfiguration:
      additionalProperties: false
      example:
        credentials:
          password: password
          sshAuthenticationType: 0
          decryptionFailed: true
          userName: userName
          sshPrivateKeyId: sshPrivateKeyId
      properties:
        credentials:
          $ref: '#/components/schemas/LinuxMachineCredentialsModel'
      required:
      - credentials
      type: object
    LinuxMachineCredentialsModel:
      additionalProperties: false
      example:
        password: password
        sshAuthenticationType: 0
        decryptionFailed: true
        userName: userName
        sshPrivateKeyId: sshPrivateKeyId
      properties:
        userName:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        decryptionFailed:
          type: boolean
        sshAuthenticationType:
          $ref: '#/components/schemas/SshAuthenticationTypeDto'
        sshPrivateKeyId:
          nullable: true
          type: string
      type: object
    LinuxMachineDto:
      additionalProperties: false
      example:
        monitoredObjectState:
          isMonitored: true
          configurationState: configurationState
          status: status
        displayType: ""
        entityReference: ""
        baseMonitor:
          port: 0
          displayName: displayName
          name: name
          type: type
          isDisconnected: true
        name: name
        fullName: fullName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        cir: ""
        group:
          displayType: ""
          baseMonitor:
            port: 0
            displayName: displayName
            name: name
            type: type
            isDisconnected: true
          name: name
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
          parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        monitoredObjectState:
          $ref: '#/components/schemas/MonitoredObjectStateDto'
        baseMonitor:
          $ref: '#/components/schemas/BaseMonitorDto'
        entityReference:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        type:
          nullable: true
          readOnly: true
          type: string
        displayType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          readOnly: true
          type: EntityType
        fullName:
          nullable: true
          readOnly: true
          type: string
        group:
          $ref: '#/components/schemas/GroupDto'
      type: object
    LogLevelSwitchParamsDto:
      additionalProperties: false
      example:
        isSet: true
        switchName: switchName
      properties:
        switchName:
          type: string
        isSet:
          type: boolean
      type: object
    LoginDto:
      additionalProperties: false
      example:
        accountName: accountName
        name: name
        type: 6
        adMemberships:
        - displayName: displayName
          name: name
          type: null
          adMemberships:
          - null
          - null
          sid: sid
        - displayName: displayName
          name: name
          type: null
          adMemberships:
          - null
          - null
          sid: sid
      properties:
        name:
          type: string
        accountName:
          type: string
        type:
          $ref: '#/components/schemas/LoginTypeDto'
        adMemberships:
          items:
            $ref: '#/components/schemas/AdPrincipalMembershipDto'
          type: array
      type: object
    LoginTypeDto:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - -1
      format: int32
      type: integer
    MachineConfiguration:
      additionalProperties: false
      example:
        windowsConnectionProperties:
          wmiConnectionMethod: 6
          autoDetectClusterName: true
          encodePortInServicePrincipalNameForWinRM: true
        sshAuthenticationType: 1
        credentials:
          password: password
          username: username
        sshPrivateKeyId: sshPrivateKeyId
        useBaseMonitorServiceAccount: true
      properties:
        windowsConnectionProperties:
          $ref: '#/components/schemas/WindowsConnectionPropertiesModel'
        useBaseMonitorServiceAccount:
          type: boolean
        credentials:
          $ref: '#/components/schemas/CredentialsDto'
        sshAuthenticationType:
          $ref: '#/components/schemas/SshAuthenticationTypeDto'
        sshPrivateKeyId:
          nullable: true
          type: string
      type: object
    MachineConfigurationDto:
      additionalProperties: false
      example:
        fipsEnabled: true
        totalMemoryInBytes: 0
        baseMonitor: baseMonitor
        clusterName: clusterName
        name: name
        communicationProtocols:
        - clientDisabledByDefault: true
          protocolVersion: protocolVersion
          clientEnabled: true
          serverDisabledByDefault: true
          serverEnabled: true
        - clientDisabledByDefault: true
          protocolVersion: protocolVersion
          clientEnabled: true
          serverDisabledByDefault: true
          serverEnabled: true
        services:
        - sqlServiceType: 6
          startUserName: startUserName
          startup: startup
          state: state
        - sqlServiceType: 6
          startUserName: startUserName
          startup: startup
          state: state
      properties:
        name:
          type: string
        baseMonitor:
          type: string
        clusterName:
          type: string
        fipsEnabled:
          nullable: true
          type: boolean
        totalMemoryInBytes:
          format: int64
          nullable: true
          type: integer
        communicationProtocols:
          items:
            $ref: '#/components/schemas/CommunicationProtocolDto'
          type: array
        services:
          items:
            $ref: '#/components/schemas/ServiceDto'
          type: array
      type: object
    MachineDto:
      additionalProperties: false
      example:
        monitoredObjectState:
          isMonitored: true
          configurationState: configurationState
          status: status
        displayType: ""
        name: name
        fullName: fullName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        cir: ""
      properties:
        name:
          nullable: true
          type: string
        type:
          nullable: true
          readOnly: true
          type: string
        id:
          format: uuid
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        fullName:
          nullable: true
          readOnly: true
          type: string
        displayType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          readOnly: true
          type: EntityType
        monitoredObjectState:
          $ref: '#/components/schemas/MonitoredObjectStateDto'
      type: object
    MachineInstanceDto:
      additionalProperties: false
      example:
        monitoredObjectState:
          isMonitored: true
          configurationState: configurationState
          status: status
        displayType: ""
        machine:
          monitoredObjectState:
            isMonitored: true
            configurationState: configurationState
            status: status
          displayType: ""
          name: name
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
        entityReference: ""
        name: name
        alias: alias
        fullName: fullName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        cir: ""
        tags:
        - name: name
        - name: name
      properties:
        name:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        displayType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          readOnly: true
          type: EntityType
        monitoredObjectState:
          $ref: '#/components/schemas/MonitoredObjectStateDto'
        alias:
          nullable: true
          type: string
        machine:
          $ref: '#/components/schemas/MachineDto'
        type:
          nullable: true
          readOnly: true
          type: string
        fullName:
          nullable: true
          readOnly: true
          type: string
        entityReference:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        tags:
          items:
            $ref: '#/components/schemas/TagDto'
          nullable: true
          type: array
      type: object
    ManageEntityViewModel:
      additionalProperties: false
      example:
        credentials:
          windowsConnectionProperties:
            wmiConnectionMethod: 6
            autoDetectClusterName: true
            encodePortInServicePrincipalNameForWinRM: true
          postgresCredentials:
            entraServicePrincipalCredentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            password: password
            database: database
            iamRoleArn: iamRoleArn
            decryptionFailed: true
            userName: userName
            iamAccessKey: iamAccessKey
            iamSecretKey: iamSecretKey
            authenticationMode: 1
            iamRegion: iamRegion
          linuxMachineCredentials:
            password: password
            sshAuthenticationType: 0
            decryptionFailed: true
            userName: userName
            sshPrivateKeyId: sshPrivateKeyId
          sqlServerConnectionProperties:
            executionTimeout: 2
            networkPacketSize: 5
            trustServerCertificate: true
            connectionTimeout: 5
            networkProtocol: 6
            portNumber: 1
            encryptConnection: true
          amazonApiCredentials:
            secretKey: secretKey
            accessKey: accessKey
            roleArn: roleArn
            decryptionFailed: true
            region: region
            dbIdentifier: dbIdentifier
            authenticationMode: 6
          sqlServerCredentials:
            password: password
            isBaseMonitorAccount: true
            isSameAsWindowsCredentials: true
            decryptionFailed: true
            userName: userName
            authenticationMode: 6
          azureCredentials:
            password: password
            decryptionFailed: true
            userName: userName
            authenticationMode: 0
          mySqlCredentials:
            password: password
            decryptionFailed: true
            userName: userName
            authenticationMode: 2
          windowsMachineCredentials:
            password: password
            isBaseMonitorAccount: true
            decryptionFailed: true
            userName: userName
          oracleCredentials:
            password: password
            decryptionFailed: true
            userName: userName
            authenticationMode: 5
          azureApiCredentials:
            servicePrincipalCredentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            authenticationMode: 7
          mongoDbCredentials:
            password: password
            decryptionFailed: true
            userName: userName
            authenticationMode: 5
        groupId: groupId
        isClusterNodeInstance: true
        fullyQualifiedName: fullyQualifiedName
        sqlServers:
        - null
        - null
        type: ""
        tags:
        - name: name
        - name: name
        clusterNodeName: clusterNodeName
        childStatuses:
        - entityType: ""
          name: name
          status: null
        - entityType: ""
          name: name
          status: null
        baseMonitorName: baseMonitorName
        userCanSuspendAndResume: true
        entityReference: ""
        hostType: ""
        name: name
        alias: alias
        userCanRetryConnection: true
        id: id
        credentialsDescription: credentialsDescription
        machines:
        - null
        - null
        isRemovable: true
        isCluster: true
        status: 9
      properties:
        isClusterNodeInstance:
          type: boolean
        clusterNodeName:
          nullable: true
          type: string
        id:
          type: string
        fullyQualifiedName:
          type: string
        name:
          type: string
        credentials:
          $ref: '#/components/schemas/AllCredentialsModel'
        credentialsDescription:
          type: string
        alias:
          nullable: true
          type: string
        status:
          $ref: '#/components/schemas/MonitoredEntityStatusDto'
        userCanRetryConnection:
          type: boolean
        userCanSuspendAndResume:
          type: boolean
        machines:
          items:
            $ref: '#/components/schemas/ManageEntityViewModel'
          type: array
        sqlServers:
          items:
            $ref: '#/components/schemas/ManageEntityViewModel'
          type: array
        type:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
        hostType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          nullable: true
          type: EntityType
        isCluster:
          type: boolean
        isRemovable:
          type: boolean
        tags:
          items:
            $ref: '#/components/schemas/TagDto'
          type: array
        entityReference:
          format: entity-id
          type: ChannelInstanceRef
        childStatuses:
          items:
            $ref: '#/components/schemas/ManagedEntityChildStatusViewModel'
          type: array
        groupId:
          nullable: true
          type: string
        baseMonitorName:
          type: string
      required:
      - baseMonitorName
      - credentials
      - credentialsDescription
      - entityReference
      - fullyQualifiedName
      - groupId
      - id
      - name
      - status
      - type
      type: object
    ManageEntityViewModelArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - credentials:
            windowsConnectionProperties:
              wmiConnectionMethod: 6
              autoDetectClusterName: true
              encodePortInServicePrincipalNameForWinRM: true
            postgresCredentials:
              entraServicePrincipalCredentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              password: password
              database: database
              iamRoleArn: iamRoleArn
              decryptionFailed: true
              userName: userName
              iamAccessKey: iamAccessKey
              iamSecretKey: iamSecretKey
              authenticationMode: 1
              iamRegion: iamRegion
            linuxMachineCredentials:
              password: password
              sshAuthenticationType: 0
              decryptionFailed: true
              userName: userName
              sshPrivateKeyId: sshPrivateKeyId
            sqlServerConnectionProperties:
              executionTimeout: 2
              networkPacketSize: 5
              trustServerCertificate: true
              connectionTimeout: 5
              networkProtocol: 6
              portNumber: 1
              encryptConnection: true
            amazonApiCredentials:
              secretKey: secretKey
              accessKey: accessKey
              roleArn: roleArn
              decryptionFailed: true
              region: region
              dbIdentifier: dbIdentifier
              authenticationMode: 6
            sqlServerCredentials:
              password: password
              isBaseMonitorAccount: true
              isSameAsWindowsCredentials: true
              decryptionFailed: true
              userName: userName
              authenticationMode: 6
            azureCredentials:
              password: password
              decryptionFailed: true
              userName: userName
              authenticationMode: 0
            mySqlCredentials:
              password: password
              decryptionFailed: true
              userName: userName
              authenticationMode: 2
            windowsMachineCredentials:
              password: password
              isBaseMonitorAccount: true
              decryptionFailed: true
              userName: userName
            oracleCredentials:
              password: password
              decryptionFailed: true
              userName: userName
              authenticationMode: 5
            azureApiCredentials:
              servicePrincipalCredentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              authenticationMode: 7
            mongoDbCredentials:
              password: password
              decryptionFailed: true
              userName: userName
              authenticationMode: 5
          groupId: groupId
          isClusterNodeInstance: true
          fullyQualifiedName: fullyQualifiedName
          sqlServers:
          - null
          - null
          type: ""
          tags:
          - name: name
          - name: name
          clusterNodeName: clusterNodeName
          childStatuses:
          - entityType: ""
            name: name
            status: null
          - entityType: ""
            name: name
            status: null
          baseMonitorName: baseMonitorName
          userCanSuspendAndResume: true
          entityReference: ""
          hostType: ""
          name: name
          alias: alias
          userCanRetryConnection: true
          id: id
          credentialsDescription: credentialsDescription
          machines:
          - null
          - null
          isRemovable: true
          isCluster: true
          status: 9
        - credentials:
            windowsConnectionProperties:
              wmiConnectionMethod: 6
              autoDetectClusterName: true
              encodePortInServicePrincipalNameForWinRM: true
            postgresCredentials:
              entraServicePrincipalCredentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              password: password
              database: database
              iamRoleArn: iamRoleArn
              decryptionFailed: true
              userName: userName
              iamAccessKey: iamAccessKey
              iamSecretKey: iamSecretKey
              authenticationMode: 1
              iamRegion: iamRegion
            linuxMachineCredentials:
              password: password
              sshAuthenticationType: 0
              decryptionFailed: true
              userName: userName
              sshPrivateKeyId: sshPrivateKeyId
            sqlServerConnectionProperties:
              executionTimeout: 2
              networkPacketSize: 5
              trustServerCertificate: true
              connectionTimeout: 5
              networkProtocol: 6
              portNumber: 1
              encryptConnection: true
            amazonApiCredentials:
              secretKey: secretKey
              accessKey: accessKey
              roleArn: roleArn
              decryptionFailed: true
              region: region
              dbIdentifier: dbIdentifier
              authenticationMode: 6
            sqlServerCredentials:
              password: password
              isBaseMonitorAccount: true
              isSameAsWindowsCredentials: true
              decryptionFailed: true
              userName: userName
              authenticationMode: 6
            azureCredentials:
              password: password
              decryptionFailed: true
              userName: userName
              authenticationMode: 0
            mySqlCredentials:
              password: password
              decryptionFailed: true
              userName: userName
              authenticationMode: 2
            windowsMachineCredentials:
              password: password
              isBaseMonitorAccount: true
              decryptionFailed: true
              userName: userName
            oracleCredentials:
              password: password
              decryptionFailed: true
              userName: userName
              authenticationMode: 5
            azureApiCredentials:
              servicePrincipalCredentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              authenticationMode: 7
            mongoDbCredentials:
              password: password
              decryptionFailed: true
              userName: userName
              authenticationMode: 5
          groupId: groupId
          isClusterNodeInstance: true
          fullyQualifiedName: fullyQualifiedName
          sqlServers:
          - null
          - null
          type: ""
          tags:
          - name: name
          - name: name
          clusterNodeName: clusterNodeName
          childStatuses:
          - entityType: ""
            name: name
            status: null
          - entityType: ""
            name: name
            status: null
          baseMonitorName: baseMonitorName
          userCanSuspendAndResume: true
          entityReference: ""
          hostType: ""
          name: name
          alias: alias
          userCanRetryConnection: true
          id: id
          credentialsDescription: credentialsDescription
          machines:
          - null
          - null
          isRemovable: true
          isCluster: true
          status: 9
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/ManageEntityViewModel'
          type: array
      type: object
    ManagedEntityChildStatusViewModel:
      additionalProperties: false
      example:
        entityType: ""
        name: name
        status: null
      properties:
        name:
          type: string
        status:
          $ref: '#/components/schemas/MonitoredEntityStatusDto'
        entityType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
      required:
      - entityType
      - name
      - status
      type: object
    MetricDto:
      additionalProperties: false
      example:
        metricType:
          name: name
          id: id
        targetName: targetName
        data:
        - dateTime: 2000-01-23T04:56:07.000+00:00
          value: 0.8008281904610115
        - dateTime: 2000-01-23T04:56:07.000+00:00
          value: 0.8008281904610115
        monitoredEntity:
          name: name
          id: id
      properties:
        metricType:
          $ref: '#/components/schemas/MetricTypeDisplayDto'
        targetName:
          nullable: true
          type: string
        monitoredEntity:
          $ref: '#/components/schemas/EntityDto'
        data:
          items:
            $ref: '#/components/schemas/MetricTimeSeriesDto'
          nullable: true
          type: array
      type: object
    MetricDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - metricType:
            name: name
            id: id
          targetName: targetName
          data:
          - dateTime: 2000-01-23T04:56:07.000+00:00
            value: 0.8008281904610115
          - dateTime: 2000-01-23T04:56:07.000+00:00
            value: 0.8008281904610115
          monitoredEntity:
            name: name
            id: id
        - metricType:
            name: name
            id: id
          targetName: targetName
          data:
          - dateTime: 2000-01-23T04:56:07.000+00:00
            value: 0.8008281904610115
          - dateTime: 2000-01-23T04:56:07.000+00:00
            value: 0.8008281904610115
          monitoredEntity:
            name: name
            id: id
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/MetricDto'
          type: array
      type: object
    MetricLine:
      additionalProperties: false
      example:
        tooltipFormatter: tooltipFormatter
        data:
        - - 7.061401241503109
          - 7.061401241503109
        - - 7.061401241503109
          - 7.061401241503109
        color: color
        max: 9.301444243932576
        dashStyle: dashStyle
        markerSymbol: markerSymbol
        lineColor: lineColor
        analysisLinkData:
          serializedTime: serializedTime
          metrics:
          - dataStream: dataStream
            cir: cir
          - dataStream: dataStream
            cir: cir
        lineWidth: 3
        tooltipSuffix: tooltipSuffix
        name: name
        id: id
        yAxisScale:
          min: 2
          max: 4
      properties:
        name:
          type: string
        data:
          items:
            items:
              format: double
              type: number
            type: array
          type: array
        analysisLinkData:
          $ref: '#/components/schemas/AnalysisLinkData'
        id:
          type: string
        max:
          format: double
          type: number
        tooltipFormatter:
          type: string
        tooltipSuffix:
          type: string
        color:
          type: string
        markerSymbol:
          type: string
        dashStyle:
          type: string
        lineWidth:
          format: int32
          type: integer
        lineColor:
          type: string
        yAxisScale:
          $ref: '#/components/schemas/MetricLineYAxisScale'
      type: object
    MetricLineYAxisScale:
      additionalProperties: false
      example:
        min: 2
        max: 4
      properties:
        min:
          format: int32
          type: integer
        max:
          format: int32
          type: integer
      type: object
    MetricTimeSeriesDto:
      additionalProperties: false
      example:
        dateTime: 2000-01-23T04:56:07.000+00:00
        value: 0.8008281904610115
      properties:
        dateTime:
          format: date-time
          type: string
        value:
          format: double
          type: number
      type: object
    MetricTypeDisplayDto:
      additionalProperties: false
      example:
        name: name
        id: id
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    MetricTypeDto:
      additionalProperties: false
      example:
        name: name
        id: id
        category: category
      properties:
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        category:
          nullable: true
          type: string
      type: object
    MetricTypeDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - name: name
          id: id
          category: category
        - name: name
          id: id
          category: category
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/MetricTypeDto'
          type: array
      type: object
    MicrosoftEntraIdDto:
      additionalProperties: false
      example:
        displayType: ""
        baseMonitor:
          port: 0
          displayName: displayName
          name: name
          type: type
          isDisconnected: true
        name: name
        fullName: fullName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        cir: ""
      properties:
        name:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        baseMonitor:
          $ref: '#/components/schemas/BaseMonitorDto'
        type:
          nullable: true
          readOnly: true
          type: string
        displayType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          readOnly: true
          type: EntityType
        fullName:
          nullable: true
          readOnly: true
          type: string
      type: object
    MirroringEndpointDto:
      additionalProperties: false
      example:
        encryptionEnabled: true
        role: role
        name: name
        encryptionAlgorithm: encryptionAlgorithm
      properties:
        name:
          type: string
        role:
          type: string
        encryptionAlgorithm:
          type: string
        encryptionEnabled:
          type: boolean
      type: object
    MongoDbAuthenticationMode:
      enum:
      - 0
      format: int32
      type: integer
    MongoDbCredentialsModel:
      additionalProperties: false
      example:
        password: password
        decryptionFailed: true
        userName: userName
        authenticationMode: 5
      properties:
        userName:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        decryptionFailed:
          type: boolean
        authenticationMode:
          $ref: '#/components/schemas/MongoDbAuthenticationMode'
      type: object
    MongoDbErrorLogDto:
      additionalProperties: false
      example:
        sequenceNumber:
          value: 0
        component: component
        logDate: 2000-01-23T04:56:07.000+00:00
        context: context
        attributes: attributes
        id:
          value: 0
        severityCode: severityCode
        message: message
      properties:
        logDate:
          format: date-time
          type: string
        sequenceNumber:
          $ref: '#/components/schemas/IntegerIdentifier'
        id:
          $ref: '#/components/schemas/IntegerIdentifier'
        context:
          nullable: true
          type: string
        severityCode:
          nullable: true
          type: string
        component:
          nullable: true
          type: string
        message:
          nullable: true
          type: string
        attributes:
          nullable: true
          type: string
      type: object
    MongoDbInstanceChannelInstanceRef:
      additionalProperties: false
      properties:
        channelRef:
          $ref: '#/components/schemas/ChannelRef'
        channelKey:
          $ref: '#/components/schemas/ChannelKey'
        channelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
        rootChannelInstanceRef:
          format: entity-id
          readOnly: true
          type: ChannelInstanceRef
        subChannelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
      type: object
    MongoDbInstanceCredentialsDto:
      additionalProperties: false
      example:
        password: password
        username: username
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
      type: object
    MonitoredEntityDetailsModelDto:
      additionalProperties: false
      example:
        logEvents:
        - date: 2000-01-23T04:56:07.000+00:00
          event: event
          outcome: 0
          group: group
        - date: 2000-01-23T04:56:07.000+00:00
          event: event
          outcome: 0
          group: group
        displayName: displayName
        status: 6
      properties:
        displayName:
          nullable: true
          type: string
        logEvents:
          items:
            $ref: '#/components/schemas/MonitoredEntityLogEvent'
          nullable: true
          type: array
        status:
          $ref: '#/components/schemas/MonitoredEntityStatusDto'
      required:
      - displayName
      - logEvents
      - status
      type: object
    MonitoredEntityDetailsModelDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          logEvents:
          - date: 2000-01-23T04:56:07.000+00:00
            event: event
            outcome: 0
            group: group
          - date: 2000-01-23T04:56:07.000+00:00
            event: event
            outcome: 0
            group: group
          displayName: displayName
          status: 6
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/MonitoredEntityDetailsModelDto'
      type: object
    MonitoredEntityDto:
      additionalProperties: false
      example:
        displayName: displayName
        monitoringStatus: 0
        id: id
        type: ""
        fullyQualifiedName: fullyQualifiedName
        parentId: parentId
        group: group
      properties:
        id:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
        type:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
        fullyQualifiedName:
          nullable: true
          type: string
        group:
          nullable: true
          type: string
        monitoringStatus:
          $ref: '#/components/schemas/MonitoredEntitySeverity'
        parentId:
          nullable: true
          type: string
      type: object
    MonitoredEntityDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - displayName: displayName
          monitoringStatus: 0
          id: id
          type: ""
          fullyQualifiedName: fullyQualifiedName
          parentId: parentId
          group: group
        - displayName: displayName
          monitoringStatus: 0
          id: id
          type: ""
          fullyQualifiedName: fullyQualifiedName
          parentId: parentId
          group: group
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/MonitoredEntityDto'
          type: array
      type: object
    MonitoredEntityInfoDto:
      additionalProperties: false
      example:
        rootMonitoredEntityType: 0
        instanceName: instanceName
        entityType: ""
        displayName: displayName
        monitoredEntityStatusCategory: 6
        overviewUrl: overviewUrl
        cir: ""
        collectionDate: 2000-01-23T04:56:07.000+00:00
        group: group
        tags:
        - name: name
        - name: name
      properties:
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        overviewUrl:
          nullable: true
          type: string
        entityType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
        rootMonitoredEntityType:
          $ref: '#/components/schemas/RootMonitoredEntityType'
        monitoredEntityStatusCategory:
          $ref: '#/components/schemas/MonitoredEntityStatusCategory'
        instanceName:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
        group:
          nullable: true
          type: string
        tags:
          items:
            $ref: '#/components/schemas/TagDto'
          nullable: true
          type: array
        collectionDate:
          format: date-time
          type: string
      type: object
    MonitoredEntityInfoDtoIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - rootMonitoredEntityType: 0
          instanceName: instanceName
          entityType: ""
          displayName: displayName
          monitoredEntityStatusCategory: 6
          overviewUrl: overviewUrl
          cir: ""
          collectionDate: 2000-01-23T04:56:07.000+00:00
          group: group
          tags:
          - name: name
          - name: name
        - rootMonitoredEntityType: 0
          instanceName: instanceName
          entityType: ""
          displayName: displayName
          monitoredEntityStatusCategory: 6
          overviewUrl: overviewUrl
          cir: ""
          collectionDate: 2000-01-23T04:56:07.000+00:00
          group: group
          tags:
          - name: name
          - name: name
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/MonitoredEntityInfoDto'
          type: array
      type: object
    MonitoredEntityLogEvent:
      additionalProperties: false
      example:
        date: 2000-01-23T04:56:07.000+00:00
        event: event
        outcome: 0
        group: group
      properties:
        date:
          format: date-time
          type: string
        group:
          nullable: true
          type: string
        event:
          nullable: true
          type: string
        outcome:
          $ref: '#/components/schemas/StatusCategoryDto'
      required:
      - date
      - event
      - group
      - outcome
      type: object
    MonitoredEntitySeverity:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      format: int32
      type: integer
    MonitoredEntityStatusCategory:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    MonitoredEntityStatusDto:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      format: int32
      type: integer
    MonitoredEntityTreeDto:
      additionalProperties: false
      example:
        children:
        - null
        - null
        name: name
        type: 0
        cir: ""
      properties:
        name:
          nullable: true
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        children:
          items:
            $ref: '#/components/schemas/MonitoredEntityTreeDto'
          nullable: true
          type: array
        type:
          $ref: '#/components/schemas/MonitoredEntityTreeItemType'
      type: object
    MonitoredEntityTreeDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          children:
          - null
          - null
          name: name
          type: 0
          cir: ""
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/MonitoredEntityTreeDto'
      type: object
    MonitoredEntityTreeItemType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      format: int32
      type: integer
    MonitoredEntityType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      format: int32
      type: integer
    MonitoredObjectDto:
      additionalProperties: false
      example:
        name: name
        type: type
      properties:
        name:
          nullable: true
          type: string
        type:
          nullable: true
          readOnly: true
          type: string
      type: object
    MonitoredObjectSeverityDto:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      format: int32
      type: integer
    MonitoredObjectStateDto:
      additionalProperties: false
      example:
        isMonitored: true
        configurationState: configurationState
        status: status
      properties:
        isMonitored:
          type: boolean
        status:
          nullable: true
          type: string
        configurationState:
          nullable: true
          type: string
      type: object
    MonitoredObjectWithIdDto:
      additionalProperties: false
      example:
        displayType: ""
        name: name
        fullName: fullName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        cir: ""
      properties:
        name:
          nullable: true
          type: string
        type:
          nullable: true
          readOnly: true
          type: string
        id:
          format: uuid
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        displayType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          readOnly: true
          type: EntityType
        fullName:
          nullable: true
          readOnly: true
          type: string
      type: object
    MySqlAuthenticationMode:
      enum:
      - 0
      format: int32
      type: integer
    MySqlCredentialsModel:
      additionalProperties: false
      example:
        password: password
        decryptionFailed: true
        userName: userName
        authenticationMode: 2
      properties:
        userName:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        decryptionFailed:
          type: boolean
        authenticationMode:
          $ref: '#/components/schemas/MySqlAuthenticationMode'
      type: object
    MySqlErrorLogDto:
      additionalProperties: false
      example:
        threadId: threadId
        errorText: errorText
        subSystem: subSystem
        logged: 2000-01-23T04:56:07.000+00:00
        errorCode: errorCode
        priority: priority
      properties:
        logged:
          format: date-time
          type: string
        threadId:
          nullable: true
          type: string
        priority:
          nullable: true
          type: string
        errorCode:
          nullable: true
          type: string
        subSystem:
          nullable: true
          type: string
        errorText:
          nullable: true
          type: string
      type: object
    MySqlInstanceChannelInstanceRef:
      additionalProperties: false
      properties:
        channelRef:
          $ref: '#/components/schemas/ChannelRef'
        channelKey:
          $ref: '#/components/schemas/ChannelKey'
        channelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
        rootChannelInstanceRef:
          format: entity-id
          readOnly: true
          type: ChannelInstanceRef
        subChannelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
      type: object
    MySqlInstanceCredentialsDto:
      additionalProperties: false
      example:
        password: password
        username: username
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
      type: object
    MySqlInstance_TopQueriesChannelInstanceRef:
      additionalProperties: false
      properties:
        channelRef:
          $ref: '#/components/schemas/ChannelRef'
        channelKey:
          $ref: '#/components/schemas/ChannelKey'
        channelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
        rootChannelInstanceRef:
          format: entity-id
          readOnly: true
          type: ChannelInstanceRef
        subChannelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
      type: object
    MySqlTopQueriesDto:
      additionalProperties: false
      example:
        topQueries:
        - schema: schema
          duration: 0
          queryHash: queryHash
          channelInstanceRef: ""
          cpuTime: 1
          rowsReads: 5
          rowsWritten: 5
          queryText: queryText
          executionCount: 6
          maxMemory: 2
          errorCount: 7
        - schema: schema
          duration: 0
          queryHash: queryHash
          channelInstanceRef: ""
          cpuTime: 1
          rowsReads: 5
          rowsWritten: 5
          queryText: queryText
          executionCount: 6
          maxMemory: 2
          errorCount: 7
      properties:
        topQueries:
          items:
            $ref: '#/components/schemas/MySqlTopQueryDto'
          nullable: true
          type: array
      type: object
    MySqlTopQueriesDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          topQueries:
          - schema: schema
            duration: 0
            queryHash: queryHash
            channelInstanceRef: ""
            cpuTime: 1
            rowsReads: 5
            rowsWritten: 5
            queryText: queryText
            executionCount: 6
            maxMemory: 2
            errorCount: 7
          - schema: schema
            duration: 0
            queryHash: queryHash
            channelInstanceRef: ""
            cpuTime: 1
            rowsReads: 5
            rowsWritten: 5
            queryText: queryText
            executionCount: 6
            maxMemory: 2
            errorCount: 7
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/MySqlTopQueriesDto'
      type: object
    MySqlTopQueryDto:
      additionalProperties: false
      example:
        schema: schema
        duration: 0
        queryHash: queryHash
        channelInstanceRef: ""
        cpuTime: 1
        rowsReads: 5
        rowsWritten: 5
        queryText: queryText
        executionCount: 6
        maxMemory: 2
        errorCount: 7
      properties:
        channelInstanceRef:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        schema:
          nullable: true
          type: string
        queryHash:
          nullable: true
          type: string
        queryText:
          nullable: true
          type: string
        duration:
          format: int64
          type: integer
        executionCount:
          format: int64
          type: integer
        cpuTime:
          format: int64
          type: integer
        rowsReads:
          format: int64
          type: integer
        rowsWritten:
          format: int64
          type: integer
        maxMemory:
          format: int64
          type: integer
        errorCount:
          format: int64
          type: integer
      type: object
    MySqlTopQueryProperty:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      format: int32
      type: integer
    MySqlTopQueryPropertyQueryHistorySeriesDto:
      additionalProperties: false
      example:
        values:
        - date: 2000-01-23T04:56:07.000+00:00
          value: 6.027456183070403
        - date: 2000-01-23T04:56:07.000+00:00
          value: 6.027456183070403
        name: 0
      properties:
        name:
          $ref: '#/components/schemas/MySqlTopQueryProperty'
        values:
          items:
            $ref: '#/components/schemas/QueryHistoryPointDto'
          type: array
      type: object
    MySqlTopQueryPropertyQueryHistoryWithoutPlanKeyDto:
      additionalProperties: false
      example:
        maxTime: 2000-01-23T04:56:07.000+00:00
        queryHistorySeries:
        - values:
          - date: 2000-01-23T04:56:07.000+00:00
            value: 6.027456183070403
          - date: 2000-01-23T04:56:07.000+00:00
            value: 6.027456183070403
          name: 0
        - values:
          - date: 2000-01-23T04:56:07.000+00:00
            value: 6.027456183070403
          - date: 2000-01-23T04:56:07.000+00:00
            value: 6.027456183070403
          name: 0
        minTime: 2000-01-23T04:56:07.000+00:00
      properties:
        minTime:
          format: date-time
          type: string
        maxTime:
          format: date-time
          type: string
        queryHistorySeries:
          items:
            $ref: '#/components/schemas/MySqlTopQueryPropertyQueryHistorySeriesDto'
          type: array
      type: object
    MySqlTopQueryPropertyQueryHistoryWithoutPlanKeyDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          maxTime: 2000-01-23T04:56:07.000+00:00
          queryHistorySeries:
          - values:
            - date: 2000-01-23T04:56:07.000+00:00
              value: 6.027456183070403
            - date: 2000-01-23T04:56:07.000+00:00
              value: 6.027456183070403
            name: 0
          - values:
            - date: 2000-01-23T04:56:07.000+00:00
              value: 6.027456183070403
            - date: 2000-01-23T04:56:07.000+00:00
              value: 6.027456183070403
            name: 0
          minTime: 2000-01-23T04:56:07.000+00:00
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/MySqlTopQueryPropertyQueryHistoryWithoutPlanKeyDto'
      type: object
    NetworkDto:
      additionalProperties: false
      example:
        sharedMemoryEnabled: true
        tcpListenAll: true
        tcpIpEnabled: true
        namedPipesEnabled: true
        tcpEndpoints:
        - dynamicPorts: 5
          port: 5
          endpointId: endpointId
          ipAddress: ipAddress
          active: true
          enabled: true
        - dynamicPorts: 5
          port: 5
          endpointId: endpointId
          ipAddress: ipAddress
          active: true
          enabled: true
      properties:
        namedPipesEnabled:
          nullable: true
          readOnly: true
          type: boolean
        sharedMemoryEnabled:
          nullable: true
          readOnly: true
          type: boolean
        tcpIpEnabled:
          nullable: true
          readOnly: true
          type: boolean
        tcpListenAll:
          nullable: true
          readOnly: true
          type: boolean
        tcpEndpoints:
          items:
            $ref: '#/components/schemas/TcpEndpointDto'
          readOnly: true
          type: array
      type: object
    NetworkProtocolEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      format: int32
      type: integer
    NotificationLevel:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    NotificationSettingsDto:
      additionalProperties: false
      example:
        slackSettings:
          enable: true
          channel: channel
          alertOnEnded: true
          webhookUrl: webhookUrl
          username: username
        webhookSettings:
          template: template
          headers: headers
          notificationLevel: null
          integrationType: 2
          ignoreSslErrors: true
          enable: true
          url: url
        emailServerSettings:
          server: server
          password: password
          ignoreSslErrors: true
          port: 0
          useAuthentication: true
          secureConnectionSecurity: true
          connectionSecurityMode: 6
          emailFrom: emailFrom
          hasDecryptionError: true
          username: username
        snmpSettings:
          snmpAllAddress: snmpAllAddress
          enable: true
          alertOnEnded: true
          snmpAllCommunityString: snmpAllCommunityString
          snmpAllPort: 5
        emailSettings:
          emailOnBaseMonitorError: true
          notificationLevel: 5
          globalAlertsEnabled: true
          alertOnEnded: true
          defaultToAddresses: defaultToAddresses
          baseMonitorErrorEmailAddresses: baseMonitorErrorEmailAddresses
          alertLimit: 1
        scriptSettings:
          enable: true
          scriptType: 7
          scriptText: scriptText
        webUiPrefix: webUiPrefix
      properties:
        emailServerSettings:
          $ref: '#/components/schemas/EmailServerSettingsDto'
        emailSettings:
          $ref: '#/components/schemas/EmailSettingsDto'
        slackSettings:
          $ref: '#/components/schemas/SlackSettingsDto'
        snmpSettings:
          $ref: '#/components/schemas/SnmpSettingsDto'
        webhookSettings:
          $ref: '#/components/schemas/WebhookSettingsDto'
        scriptSettings:
          $ref: '#/components/schemas/ScriptSettingsDto'
        webUiPrefix:
          nullable: true
          type: string
      type: object
    OldDatabaseDto:
      additionalProperties: false
      example:
        owner: owner
        created: 2000-01-23T04:56:07.000+00:00
        roles:
        - principalPermissions:
          - majorId:
              value: 0
            granteeId:
              value: 0
            minorId:
              value: 0
            objectName: objectName
            state: state
            grantorId:
              value: 0
            type: type
            class:
              value: 0
          - majorId:
              value: 0
            granteeId:
              value: 0
            minorId:
              value: 0
            objectName: objectName
            state: state
            grantorId:
              value: 0
            type: type
            class:
              value: 0
          permissions:
          - permissions
          - permissions
          members:
          - members
          - members
          name: name
          type: type
          sid: sid
        - principalPermissions:
          - majorId:
              value: 0
            granteeId:
              value: 0
            minorId:
              value: 0
            objectName: objectName
            state: state
            grantorId:
              value: 0
            type: type
            class:
              value: 0
          - majorId:
              value: 0
            granteeId:
              value: 0
            minorId:
              value: 0
            objectName: objectName
            state: state
            grantorId:
              value: 0
            type: type
            class:
              value: 0
          permissions:
          - permissions
          - permissions
          members:
          - members
          - members
          name: name
          type: type
          sid: sid
        name: name
        totalActiveUsers: 1
        state: state
        collectionDate: 2000-01-23T04:56:07.000+00:00
        users:
        - serverPrincipalId:
            value: 0
          adAccount: adAccount
          roles:
          - roles
          - roles
          name: name
          defaultSchemaName: defaultSchemaName
          principalId:
            value: 0
          owningPrincipalId:
            value: 0
          type: 5
          login: login
          sid: sid
        - serverPrincipalId:
            value: 0
          adAccount: adAccount
          roles:
          - roles
          - roles
          name: name
          defaultSchemaName: defaultSchemaName
          principalId:
            value: 0
          owningPrincipalId:
            value: 0
          type: 5
          login: login
          sid: sid
      properties:
        name:
          nullable: true
          type: string
        owner:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        created:
          format: date-time
          type: string
        collectionDate:
          format: date-time
          type: string
        totalActiveUsers:
          format: int64
          type: integer
        users:
          items:
            $ref: '#/components/schemas/OldDatabaseUserDto'
          nullable: true
          type: array
        roles:
          items:
            $ref: '#/components/schemas/OldDatabaseRoleDto'
          nullable: true
          type: array
      type: object
    OldDatabasePermissionsDto:
      additionalProperties: false
      example:
        databases:
        - owner: owner
          created: 2000-01-23T04:56:07.000+00:00
          roles:
          - principalPermissions:
            - majorId:
                value: 0
              granteeId:
                value: 0
              minorId:
                value: 0
              objectName: objectName
              state: state
              grantorId:
                value: 0
              type: type
              class:
                value: 0
            - majorId:
                value: 0
              granteeId:
                value: 0
              minorId:
                value: 0
              objectName: objectName
              state: state
              grantorId:
                value: 0
              type: type
              class:
                value: 0
            permissions:
            - permissions
            - permissions
            members:
            - members
            - members
            name: name
            type: type
            sid: sid
          - principalPermissions:
            - majorId:
                value: 0
              granteeId:
                value: 0
              minorId:
                value: 0
              objectName: objectName
              state: state
              grantorId:
                value: 0
              type: type
              class:
                value: 0
            - majorId:
                value: 0
              granteeId:
                value: 0
              minorId:
                value: 0
              objectName: objectName
              state: state
              grantorId:
                value: 0
              type: type
              class:
                value: 0
            permissions:
            - permissions
            - permissions
            members:
            - members
            - members
            name: name
            type: type
            sid: sid
          name: name
          totalActiveUsers: 1
          state: state
          collectionDate: 2000-01-23T04:56:07.000+00:00
          users:
          - serverPrincipalId:
              value: 0
            adAccount: adAccount
            roles:
            - roles
            - roles
            name: name
            defaultSchemaName: defaultSchemaName
            principalId:
              value: 0
            owningPrincipalId:
              value: 0
            type: 5
            login: login
            sid: sid
          - serverPrincipalId:
              value: 0
            adAccount: adAccount
            roles:
            - roles
            - roles
            name: name
            defaultSchemaName: defaultSchemaName
            principalId:
              value: 0
            owningPrincipalId:
              value: 0
            type: 5
            login: login
            sid: sid
        - owner: owner
          created: 2000-01-23T04:56:07.000+00:00
          roles:
          - principalPermissions:
            - majorId:
                value: 0
              granteeId:
                value: 0
              minorId:
                value: 0
              objectName: objectName
              state: state
              grantorId:
                value: 0
              type: type
              class:
                value: 0
            - majorId:
                value: 0
              granteeId:
                value: 0
              minorId:
                value: 0
              objectName: objectName
              state: state
              grantorId:
                value: 0
              type: type
              class:
                value: 0
            permissions:
            - permissions
            - permissions
            members:
            - members
            - members
            name: name
            type: type
            sid: sid
          - principalPermissions:
            - majorId:
                value: 0
              granteeId:
                value: 0
              minorId:
                value: 0
              objectName: objectName
              state: state
              grantorId:
                value: 0
              type: type
              class:
                value: 0
            - majorId:
                value: 0
              granteeId:
                value: 0
              minorId:
                value: 0
              objectName: objectName
              state: state
              grantorId:
                value: 0
              type: type
              class:
                value: 0
            permissions:
            - permissions
            - permissions
            members:
            - members
            - members
            name: name
            type: type
            sid: sid
          name: name
          totalActiveUsers: 1
          state: state
          collectionDate: 2000-01-23T04:56:07.000+00:00
          users:
          - serverPrincipalId:
              value: 0
            adAccount: adAccount
            roles:
            - roles
            - roles
            name: name
            defaultSchemaName: defaultSchemaName
            principalId:
              value: 0
            owningPrincipalId:
              value: 0
            type: 5
            login: login
            sid: sid
          - serverPrincipalId:
              value: 0
            adAccount: adAccount
            roles:
            - roles
            - roles
            name: name
            defaultSchemaName: defaultSchemaName
            principalId:
              value: 0
            owningPrincipalId:
              value: 0
            type: 5
            login: login
            sid: sid
        serverInfo:
          rootMonitoredEntityType: 0
          instanceName: instanceName
          entityType: ""
          displayName: displayName
          monitoredEntityStatusCategory: 6
          overviewUrl: overviewUrl
          cir: ""
          collectionDate: 2000-01-23T04:56:07.000+00:00
          group: group
          tags:
          - name: name
          - name: name
        id: id
      properties:
        id:
          nullable: true
          type: string
        serverInfo:
          $ref: '#/components/schemas/MonitoredEntityInfoDto'
        databases:
          items:
            $ref: '#/components/schemas/OldDatabaseDto'
          nullable: true
          type: array
      type: object
    OldDatabasePermissionsDtoIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - databases:
          - owner: owner
            created: 2000-01-23T04:56:07.000+00:00
            roles:
            - principalPermissions:
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              permissions:
              - permissions
              - permissions
              members:
              - members
              - members
              name: name
              type: type
              sid: sid
            - principalPermissions:
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              permissions:
              - permissions
              - permissions
              members:
              - members
              - members
              name: name
              type: type
              sid: sid
            name: name
            totalActiveUsers: 1
            state: state
            collectionDate: 2000-01-23T04:56:07.000+00:00
            users:
            - serverPrincipalId:
                value: 0
              adAccount: adAccount
              roles:
              - roles
              - roles
              name: name
              defaultSchemaName: defaultSchemaName
              principalId:
                value: 0
              owningPrincipalId:
                value: 0
              type: 5
              login: login
              sid: sid
            - serverPrincipalId:
                value: 0
              adAccount: adAccount
              roles:
              - roles
              - roles
              name: name
              defaultSchemaName: defaultSchemaName
              principalId:
                value: 0
              owningPrincipalId:
                value: 0
              type: 5
              login: login
              sid: sid
          - owner: owner
            created: 2000-01-23T04:56:07.000+00:00
            roles:
            - principalPermissions:
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              permissions:
              - permissions
              - permissions
              members:
              - members
              - members
              name: name
              type: type
              sid: sid
            - principalPermissions:
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              permissions:
              - permissions
              - permissions
              members:
              - members
              - members
              name: name
              type: type
              sid: sid
            name: name
            totalActiveUsers: 1
            state: state
            collectionDate: 2000-01-23T04:56:07.000+00:00
            users:
            - serverPrincipalId:
                value: 0
              adAccount: adAccount
              roles:
              - roles
              - roles
              name: name
              defaultSchemaName: defaultSchemaName
              principalId:
                value: 0
              owningPrincipalId:
                value: 0
              type: 5
              login: login
              sid: sid
            - serverPrincipalId:
                value: 0
              adAccount: adAccount
              roles:
              - roles
              - roles
              name: name
              defaultSchemaName: defaultSchemaName
              principalId:
                value: 0
              owningPrincipalId:
                value: 0
              type: 5
              login: login
              sid: sid
          serverInfo:
            rootMonitoredEntityType: 0
            instanceName: instanceName
            entityType: ""
            displayName: displayName
            monitoredEntityStatusCategory: 6
            overviewUrl: overviewUrl
            cir: ""
            collectionDate: 2000-01-23T04:56:07.000+00:00
            group: group
            tags:
            - name: name
            - name: name
          id: id
        - databases:
          - owner: owner
            created: 2000-01-23T04:56:07.000+00:00
            roles:
            - principalPermissions:
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              permissions:
              - permissions
              - permissions
              members:
              - members
              - members
              name: name
              type: type
              sid: sid
            - principalPermissions:
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              permissions:
              - permissions
              - permissions
              members:
              - members
              - members
              name: name
              type: type
              sid: sid
            name: name
            totalActiveUsers: 1
            state: state
            collectionDate: 2000-01-23T04:56:07.000+00:00
            users:
            - serverPrincipalId:
                value: 0
              adAccount: adAccount
              roles:
              - roles
              - roles
              name: name
              defaultSchemaName: defaultSchemaName
              principalId:
                value: 0
              owningPrincipalId:
                value: 0
              type: 5
              login: login
              sid: sid
            - serverPrincipalId:
                value: 0
              adAccount: adAccount
              roles:
              - roles
              - roles
              name: name
              defaultSchemaName: defaultSchemaName
              principalId:
                value: 0
              owningPrincipalId:
                value: 0
              type: 5
              login: login
              sid: sid
          - owner: owner
            created: 2000-01-23T04:56:07.000+00:00
            roles:
            - principalPermissions:
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              permissions:
              - permissions
              - permissions
              members:
              - members
              - members
              name: name
              type: type
              sid: sid
            - principalPermissions:
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              permissions:
              - permissions
              - permissions
              members:
              - members
              - members
              name: name
              type: type
              sid: sid
            name: name
            totalActiveUsers: 1
            state: state
            collectionDate: 2000-01-23T04:56:07.000+00:00
            users:
            - serverPrincipalId:
                value: 0
              adAccount: adAccount
              roles:
              - roles
              - roles
              name: name
              defaultSchemaName: defaultSchemaName
              principalId:
                value: 0
              owningPrincipalId:
                value: 0
              type: 5
              login: login
              sid: sid
            - serverPrincipalId:
                value: 0
              adAccount: adAccount
              roles:
              - roles
              - roles
              name: name
              defaultSchemaName: defaultSchemaName
              principalId:
                value: 0
              owningPrincipalId:
                value: 0
              type: 5
              login: login
              sid: sid
          serverInfo:
            rootMonitoredEntityType: 0
            instanceName: instanceName
            entityType: ""
            displayName: displayName
            monitoredEntityStatusCategory: 6
            overviewUrl: overviewUrl
            cir: ""
            collectionDate: 2000-01-23T04:56:07.000+00:00
            group: group
            tags:
            - name: name
            - name: name
          id: id
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/OldDatabasePermissionsDto'
          type: array
      type: object
    OldDatabasePermissionsDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          databases:
          - owner: owner
            created: 2000-01-23T04:56:07.000+00:00
            roles:
            - principalPermissions:
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              permissions:
              - permissions
              - permissions
              members:
              - members
              - members
              name: name
              type: type
              sid: sid
            - principalPermissions:
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              permissions:
              - permissions
              - permissions
              members:
              - members
              - members
              name: name
              type: type
              sid: sid
            name: name
            totalActiveUsers: 1
            state: state
            collectionDate: 2000-01-23T04:56:07.000+00:00
            users:
            - serverPrincipalId:
                value: 0
              adAccount: adAccount
              roles:
              - roles
              - roles
              name: name
              defaultSchemaName: defaultSchemaName
              principalId:
                value: 0
              owningPrincipalId:
                value: 0
              type: 5
              login: login
              sid: sid
            - serverPrincipalId:
                value: 0
              adAccount: adAccount
              roles:
              - roles
              - roles
              name: name
              defaultSchemaName: defaultSchemaName
              principalId:
                value: 0
              owningPrincipalId:
                value: 0
              type: 5
              login: login
              sid: sid
          - owner: owner
            created: 2000-01-23T04:56:07.000+00:00
            roles:
            - principalPermissions:
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              permissions:
              - permissions
              - permissions
              members:
              - members
              - members
              name: name
              type: type
              sid: sid
            - principalPermissions:
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              permissions:
              - permissions
              - permissions
              members:
              - members
              - members
              name: name
              type: type
              sid: sid
            name: name
            totalActiveUsers: 1
            state: state
            collectionDate: 2000-01-23T04:56:07.000+00:00
            users:
            - serverPrincipalId:
                value: 0
              adAccount: adAccount
              roles:
              - roles
              - roles
              name: name
              defaultSchemaName: defaultSchemaName
              principalId:
                value: 0
              owningPrincipalId:
                value: 0
              type: 5
              login: login
              sid: sid
            - serverPrincipalId:
                value: 0
              adAccount: adAccount
              roles:
              - roles
              - roles
              name: name
              defaultSchemaName: defaultSchemaName
              principalId:
                value: 0
              owningPrincipalId:
                value: 0
              type: 5
              login: login
              sid: sid
          serverInfo:
            rootMonitoredEntityType: 0
            instanceName: instanceName
            entityType: ""
            displayName: displayName
            monitoredEntityStatusCategory: 6
            overviewUrl: overviewUrl
            cir: ""
            collectionDate: 2000-01-23T04:56:07.000+00:00
            group: group
            tags:
            - name: name
            - name: name
          id: id
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/OldDatabasePermissionsDto'
      type: object
    OldDatabaseRoleDto:
      additionalProperties: false
      example:
        principalPermissions:
        - majorId:
            value: 0
          granteeId:
            value: 0
          minorId:
            value: 0
          objectName: objectName
          state: state
          grantorId:
            value: 0
          type: type
          class:
            value: 0
        - majorId:
            value: 0
          granteeId:
            value: 0
          minorId:
            value: 0
          objectName: objectName
          state: state
          grantorId:
            value: 0
          type: type
          class:
            value: 0
        permissions:
        - permissions
        - permissions
        members:
        - members
        - members
        name: name
        type: type
        sid: sid
      properties:
        sid:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        type:
          nullable: true
          type: string
        members:
          items:
            type: string
          nullable: true
          type: array
        permissions:
          items:
            type: string
          nullable: true
          type: array
        principalPermissions:
          items:
            $ref: '#/components/schemas/PrincipalPermissionDto'
          nullable: true
          type: array
      type: object
    OldDatabaseUserDto:
      additionalProperties: false
      example:
        serverPrincipalId:
          value: 0
        adAccount: adAccount
        roles:
        - roles
        - roles
        name: name
        defaultSchemaName: defaultSchemaName
        principalId:
          value: 0
        owningPrincipalId:
          value: 0
        type: 5
        login: login
        sid: sid
      properties:
        serverPrincipalId:
          $ref: '#/components/schemas/IntegerIdentifier'
        name:
          nullable: true
          type: string
        sid:
          nullable: true
          type: string
        principalId:
          $ref: '#/components/schemas/IntegerIdentifier'
        owningPrincipalId:
          $ref: '#/components/schemas/IntegerIdentifier'
        defaultSchemaName:
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/DatabasePrincipalType'
        login:
          nullable: true
          type: string
        adAccount:
          nullable: true
          type: string
        roles:
          items:
            type: string
          nullable: true
          type: array
      type: object
    OldServerDatabasePermissionsDto:
      additionalProperties: false
      example:
        databaseName: databaseName
        databaseOwner: databaseOwner
        roles:
        - roles
        - roles
        login: login
        cir: ""
        sid: sid
        username: username
      properties:
        sid:
          nullable: true
          type: string
        login:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        databaseName:
          nullable: true
          type: string
        databaseOwner:
          nullable: true
          type: string
        roles:
          items:
            type: string
          nullable: true
          type: array
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
      type: object
    OldServerLoginPermissionsDto:
      additionalProperties: false
      example:
        serverRoles:
        - serverRoles
        - serverRoles
        login: login
        cir: ""
      properties:
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        login:
          nullable: true
          type: string
        serverRoles:
          items:
            type: string
          nullable: true
          type: array
      type: object
    OldServerPermissionsDto:
      additionalProperties: false
      example:
        userServerRoles:
        - createdDate: 2000-01-23T04:56:07.000+00:00
          accountName: accountName
          roles:
          - null
          - null
          name: name
          sid: sid
        - createdDate: 2000-01-23T04:56:07.000+00:00
          accountName: accountName
          roles:
          - null
          - null
          name: name
          sid: sid
        databases:
        - owner: owner
          created: 2000-01-23T04:56:07.000+00:00
          roles:
          - principalPermissions:
            - majorId:
                value: 0
              granteeId:
                value: 0
              minorId:
                value: 0
              objectName: objectName
              state: state
              grantorId:
                value: 0
              type: type
              class:
                value: 0
            - majorId:
                value: 0
              granteeId:
                value: 0
              minorId:
                value: 0
              objectName: objectName
              state: state
              grantorId:
                value: 0
              type: type
              class:
                value: 0
            permissions:
            - permissions
            - permissions
            members:
            - members
            - members
            name: name
            type: type
            sid: sid
          - principalPermissions:
            - majorId:
                value: 0
              granteeId:
                value: 0
              minorId:
                value: 0
              objectName: objectName
              state: state
              grantorId:
                value: 0
              type: type
              class:
                value: 0
            - majorId:
                value: 0
              granteeId:
                value: 0
              minorId:
                value: 0
              objectName: objectName
              state: state
              grantorId:
                value: 0
              type: type
              class:
                value: 0
            permissions:
            - permissions
            - permissions
            members:
            - members
            - members
            name: name
            type: type
            sid: sid
          name: name
          totalActiveUsers: 1
          state: state
          collectionDate: 2000-01-23T04:56:07.000+00:00
          users:
          - serverPrincipalId:
              value: 0
            adAccount: adAccount
            roles:
            - roles
            - roles
            name: name
            defaultSchemaName: defaultSchemaName
            principalId:
              value: 0
            owningPrincipalId:
              value: 0
            type: 5
            login: login
            sid: sid
          - serverPrincipalId:
              value: 0
            adAccount: adAccount
            roles:
            - roles
            - roles
            name: name
            defaultSchemaName: defaultSchemaName
            principalId:
              value: 0
            owningPrincipalId:
              value: 0
            type: 5
            login: login
            sid: sid
        - owner: owner
          created: 2000-01-23T04:56:07.000+00:00
          roles:
          - principalPermissions:
            - majorId:
                value: 0
              granteeId:
                value: 0
              minorId:
                value: 0
              objectName: objectName
              state: state
              grantorId:
                value: 0
              type: type
              class:
                value: 0
            - majorId:
                value: 0
              granteeId:
                value: 0
              minorId:
                value: 0
              objectName: objectName
              state: state
              grantorId:
                value: 0
              type: type
              class:
                value: 0
            permissions:
            - permissions
            - permissions
            members:
            - members
            - members
            name: name
            type: type
            sid: sid
          - principalPermissions:
            - majorId:
                value: 0
              granteeId:
                value: 0
              minorId:
                value: 0
              objectName: objectName
              state: state
              grantorId:
                value: 0
              type: type
              class:
                value: 0
            - majorId:
                value: 0
              granteeId:
                value: 0
              minorId:
                value: 0
              objectName: objectName
              state: state
              grantorId:
                value: 0
              type: type
              class:
                value: 0
            permissions:
            - permissions
            - permissions
            members:
            - members
            - members
            name: name
            type: type
            sid: sid
          name: name
          totalActiveUsers: 1
          state: state
          collectionDate: 2000-01-23T04:56:07.000+00:00
          users:
          - serverPrincipalId:
              value: 0
            adAccount: adAccount
            roles:
            - roles
            - roles
            name: name
            defaultSchemaName: defaultSchemaName
            principalId:
              value: 0
            owningPrincipalId:
              value: 0
            type: 5
            login: login
            sid: sid
          - serverPrincipalId:
              value: 0
            adAccount: adAccount
            roles:
            - roles
            - roles
            name: name
            defaultSchemaName: defaultSchemaName
            principalId:
              value: 0
            owningPrincipalId:
              value: 0
            type: 5
            login: login
            sid: sid
        serverInfo:
          rootMonitoredEntityType: 0
          instanceName: instanceName
          entityType: ""
          displayName: displayName
          monitoredEntityStatusCategory: 6
          overviewUrl: overviewUrl
          cir: ""
          collectionDate: 2000-01-23T04:56:07.000+00:00
          group: group
          tags:
          - name: name
          - name: name
        serverRecommendations:
          orphanedUserRecommendations:
          - databaseUserType: 1
            databaseUserSid: databaseUserSid
            databaseUserName: databaseUserName
          - databaseUserType: 1
            databaseUserSid: databaseUserSid
            databaseUserName: databaseUserName
          isSaEnabled: true
        serverRoleLoginMap:
        - role: 0
          loginDtos:
          - accountName: accountName
            name: name
            type: 6
            adMemberships:
            - displayName: displayName
              name: name
              type: null
              adMemberships:
              - null
              - null
              sid: sid
            - displayName: displayName
              name: name
              type: null
              adMemberships:
              - null
              - null
              sid: sid
          - accountName: accountName
            name: name
            type: 6
            adMemberships:
            - displayName: displayName
              name: name
              type: null
              adMemberships:
              - null
              - null
              sid: sid
            - displayName: displayName
              name: name
              type: null
              adMemberships:
              - null
              - null
              sid: sid
          roleName: roleName
        - role: 0
          loginDtos:
          - accountName: accountName
            name: name
            type: 6
            adMemberships:
            - displayName: displayName
              name: name
              type: null
              adMemberships:
              - null
              - null
              sid: sid
            - displayName: displayName
              name: name
              type: null
              adMemberships:
              - null
              - null
              sid: sid
          - accountName: accountName
            name: name
            type: 6
            adMemberships:
            - displayName: displayName
              name: name
              type: null
              adMemberships:
              - null
              - null
              sid: sid
            - displayName: displayName
              name: name
              type: null
              adMemberships:
              - null
              - null
              sid: sid
          roleName: roleName
        id: id
      properties:
        id:
          nullable: true
          type: string
        serverInfo:
          $ref: '#/components/schemas/MonitoredEntityInfoDto'
        serverRoleLoginMap:
          items:
            $ref: '#/components/schemas/ServerRoleLoginDto'
          nullable: true
          type: array
        userServerRoles:
          items:
            $ref: '#/components/schemas/UserServerRolesDto'
          nullable: true
          type: array
        serverRecommendations:
          $ref: '#/components/schemas/ServerRecommendationsDto'
        databases:
          items:
            $ref: '#/components/schemas/OldDatabaseDto'
          nullable: true
          type: array
      type: object
    OldServerPermissionsDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          userServerRoles:
          - createdDate: 2000-01-23T04:56:07.000+00:00
            accountName: accountName
            roles:
            - null
            - null
            name: name
            sid: sid
          - createdDate: 2000-01-23T04:56:07.000+00:00
            accountName: accountName
            roles:
            - null
            - null
            name: name
            sid: sid
          databases:
          - owner: owner
            created: 2000-01-23T04:56:07.000+00:00
            roles:
            - principalPermissions:
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              permissions:
              - permissions
              - permissions
              members:
              - members
              - members
              name: name
              type: type
              sid: sid
            - principalPermissions:
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              permissions:
              - permissions
              - permissions
              members:
              - members
              - members
              name: name
              type: type
              sid: sid
            name: name
            totalActiveUsers: 1
            state: state
            collectionDate: 2000-01-23T04:56:07.000+00:00
            users:
            - serverPrincipalId:
                value: 0
              adAccount: adAccount
              roles:
              - roles
              - roles
              name: name
              defaultSchemaName: defaultSchemaName
              principalId:
                value: 0
              owningPrincipalId:
                value: 0
              type: 5
              login: login
              sid: sid
            - serverPrincipalId:
                value: 0
              adAccount: adAccount
              roles:
              - roles
              - roles
              name: name
              defaultSchemaName: defaultSchemaName
              principalId:
                value: 0
              owningPrincipalId:
                value: 0
              type: 5
              login: login
              sid: sid
          - owner: owner
            created: 2000-01-23T04:56:07.000+00:00
            roles:
            - principalPermissions:
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              permissions:
              - permissions
              - permissions
              members:
              - members
              - members
              name: name
              type: type
              sid: sid
            - principalPermissions:
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              - majorId:
                  value: 0
                granteeId:
                  value: 0
                minorId:
                  value: 0
                objectName: objectName
                state: state
                grantorId:
                  value: 0
                type: type
                class:
                  value: 0
              permissions:
              - permissions
              - permissions
              members:
              - members
              - members
              name: name
              type: type
              sid: sid
            name: name
            totalActiveUsers: 1
            state: state
            collectionDate: 2000-01-23T04:56:07.000+00:00
            users:
            - serverPrincipalId:
                value: 0
              adAccount: adAccount
              roles:
              - roles
              - roles
              name: name
              defaultSchemaName: defaultSchemaName
              principalId:
                value: 0
              owningPrincipalId:
                value: 0
              type: 5
              login: login
              sid: sid
            - serverPrincipalId:
                value: 0
              adAccount: adAccount
              roles:
              - roles
              - roles
              name: name
              defaultSchemaName: defaultSchemaName
              principalId:
                value: 0
              owningPrincipalId:
                value: 0
              type: 5
              login: login
              sid: sid
          serverInfo:
            rootMonitoredEntityType: 0
            instanceName: instanceName
            entityType: ""
            displayName: displayName
            monitoredEntityStatusCategory: 6
            overviewUrl: overviewUrl
            cir: ""
            collectionDate: 2000-01-23T04:56:07.000+00:00
            group: group
            tags:
            - name: name
            - name: name
          serverRecommendations:
            orphanedUserRecommendations:
            - databaseUserType: 1
              databaseUserSid: databaseUserSid
              databaseUserName: databaseUserName
            - databaseUserType: 1
              databaseUserSid: databaseUserSid
              databaseUserName: databaseUserName
            isSaEnabled: true
          serverRoleLoginMap:
          - role: 0
            loginDtos:
            - accountName: accountName
              name: name
              type: 6
              adMemberships:
              - displayName: displayName
                name: name
                type: null
                adMemberships:
                - null
                - null
                sid: sid
              - displayName: displayName
                name: name
                type: null
                adMemberships:
                - null
                - null
                sid: sid
            - accountName: accountName
              name: name
              type: 6
              adMemberships:
              - displayName: displayName
                name: name
                type: null
                adMemberships:
                - null
                - null
                sid: sid
              - displayName: displayName
                name: name
                type: null
                adMemberships:
                - null
                - null
                sid: sid
            roleName: roleName
          - role: 0
            loginDtos:
            - accountName: accountName
              name: name
              type: 6
              adMemberships:
              - displayName: displayName
                name: name
                type: null
                adMemberships:
                - null
                - null
                sid: sid
              - displayName: displayName
                name: name
                type: null
                adMemberships:
                - null
                - null
                sid: sid
            - accountName: accountName
              name: name
              type: 6
              adMemberships:
              - displayName: displayName
                name: name
                type: null
                adMemberships:
                - null
                - null
                sid: sid
              - displayName: displayName
                name: name
                type: null
                adMemberships:
                - null
                - null
                sid: sid
            roleName: roleName
          id: id
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/OldServerPermissionsDto'
      type: object
    OldSummarizedServerPermissionsDto:
      additionalProperties: false
      example:
        totalGroupsCount: 9
        serverAdminGroupsCount: 5
        securityAdminGroupsCount: 2
        serverInfo:
          rootMonitoredEntityType: 0
          instanceName: instanceName
          entityType: ""
          displayName: displayName
          monitoredEntityStatusCategory: 6
          overviewUrl: overviewUrl
          cir: ""
          collectionDate: 2000-01-23T04:56:07.000+00:00
          group: group
          tags:
          - name: name
          - name: name
        totalUsersCount: 7
        sysAdminUsersCount: 0
        sysAdminGroupsCount: 6
        serverAdminUsersCount: 1
        id: id
        securityAdminUsersCount: 5
      properties:
        id:
          nullable: true
          type: string
        serverInfo:
          $ref: '#/components/schemas/MonitoredEntityInfoDto'
        sysAdminUsersCount:
          format: int64
          type: integer
        sysAdminGroupsCount:
          format: int64
          type: integer
        serverAdminUsersCount:
          format: int64
          type: integer
        serverAdminGroupsCount:
          format: int64
          type: integer
        securityAdminUsersCount:
          format: int64
          type: integer
        securityAdminGroupsCount:
          format: int64
          type: integer
        totalUsersCount:
          format: int64
          type: integer
        totalGroupsCount:
          format: int64
          type: integer
      type: object
    OldSummarizedServerPermissionsDtoIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - totalGroupsCount: 9
          serverAdminGroupsCount: 5
          securityAdminGroupsCount: 2
          serverInfo:
            rootMonitoredEntityType: 0
            instanceName: instanceName
            entityType: ""
            displayName: displayName
            monitoredEntityStatusCategory: 6
            overviewUrl: overviewUrl
            cir: ""
            collectionDate: 2000-01-23T04:56:07.000+00:00
            group: group
            tags:
            - name: name
            - name: name
          totalUsersCount: 7
          sysAdminUsersCount: 0
          sysAdminGroupsCount: 6
          serverAdminUsersCount: 1
          id: id
          securityAdminUsersCount: 5
        - totalGroupsCount: 9
          serverAdminGroupsCount: 5
          securityAdminGroupsCount: 2
          serverInfo:
            rootMonitoredEntityType: 0
            instanceName: instanceName
            entityType: ""
            displayName: displayName
            monitoredEntityStatusCategory: 6
            overviewUrl: overviewUrl
            cir: ""
            collectionDate: 2000-01-23T04:56:07.000+00:00
            group: group
            tags:
            - name: name
            - name: name
          totalUsersCount: 7
          sysAdminUsersCount: 0
          sysAdminGroupsCount: 6
          serverAdminUsersCount: 1
          id: id
          securityAdminUsersCount: 5
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/OldSummarizedServerPermissionsDto'
          type: array
      type: object
    OldUserPermissionAndMonitoredEntityDto:
      additionalProperties: false
      example:
        userPermissions:
        - serverAdmins: 6
          accountName: accountName
          totalDatabases: 9
          sysAdmins: 0
          dbSecurityAdmins: 7
          serverLoginPermissions:
          - serverRoles:
            - serverRoles
            - serverRoles
            login: login
            cir: ""
          - serverRoles:
            - serverRoles
            - serverRoles
            login: login
            cir: ""
          sid: sid
          securityAdmins: 1
          totalServers: 5
          dbAccessAdmins: 2
          serverDatabasePermissions:
          - databaseName: databaseName
            databaseOwner: databaseOwner
            roles:
            - roles
            - roles
            login: login
            cir: ""
            sid: sid
            username: username
          - databaseName: databaseName
            databaseOwner: databaseOwner
            roles:
            - roles
            - roles
            login: login
            cir: ""
            sid: sid
            username: username
          name: name
          dbOwners: 5
        - serverAdmins: 6
          accountName: accountName
          totalDatabases: 9
          sysAdmins: 0
          dbSecurityAdmins: 7
          serverLoginPermissions:
          - serverRoles:
            - serverRoles
            - serverRoles
            login: login
            cir: ""
          - serverRoles:
            - serverRoles
            - serverRoles
            login: login
            cir: ""
          sid: sid
          securityAdmins: 1
          totalServers: 5
          dbAccessAdmins: 2
          serverDatabasePermissions:
          - databaseName: databaseName
            databaseOwner: databaseOwner
            roles:
            - roles
            - roles
            login: login
            cir: ""
            sid: sid
            username: username
          - databaseName: databaseName
            databaseOwner: databaseOwner
            roles:
            - roles
            - roles
            login: login
            cir: ""
            sid: sid
            username: username
          name: name
          dbOwners: 5
        monitoredEntityInfo:
        - rootMonitoredEntityType: 0
          instanceName: instanceName
          entityType: ""
          displayName: displayName
          monitoredEntityStatusCategory: 6
          overviewUrl: overviewUrl
          cir: ""
          collectionDate: 2000-01-23T04:56:07.000+00:00
          group: group
          tags:
          - name: name
          - name: name
        - rootMonitoredEntityType: 0
          instanceName: instanceName
          entityType: ""
          displayName: displayName
          monitoredEntityStatusCategory: 6
          overviewUrl: overviewUrl
          cir: ""
          collectionDate: 2000-01-23T04:56:07.000+00:00
          group: group
          tags:
          - name: name
          - name: name
      properties:
        userPermissions:
          items:
            $ref: '#/components/schemas/OldUserPermissionsDto'
          nullable: true
          type: array
        monitoredEntityInfo:
          items:
            $ref: '#/components/schemas/MonitoredEntityInfoDto'
          nullable: true
          type: array
      type: object
    OldUserPermissionAndMonitoredEntityDtoIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - userPermissions:
          - serverAdmins: 6
            accountName: accountName
            totalDatabases: 9
            sysAdmins: 0
            dbSecurityAdmins: 7
            serverLoginPermissions:
            - serverRoles:
              - serverRoles
              - serverRoles
              login: login
              cir: ""
            - serverRoles:
              - serverRoles
              - serverRoles
              login: login
              cir: ""
            sid: sid
            securityAdmins: 1
            totalServers: 5
            dbAccessAdmins: 2
            serverDatabasePermissions:
            - databaseName: databaseName
              databaseOwner: databaseOwner
              roles:
              - roles
              - roles
              login: login
              cir: ""
              sid: sid
              username: username
            - databaseName: databaseName
              databaseOwner: databaseOwner
              roles:
              - roles
              - roles
              login: login
              cir: ""
              sid: sid
              username: username
            name: name
            dbOwners: 5
          - serverAdmins: 6
            accountName: accountName
            totalDatabases: 9
            sysAdmins: 0
            dbSecurityAdmins: 7
            serverLoginPermissions:
            - serverRoles:
              - serverRoles
              - serverRoles
              login: login
              cir: ""
            - serverRoles:
              - serverRoles
              - serverRoles
              login: login
              cir: ""
            sid: sid
            securityAdmins: 1
            totalServers: 5
            dbAccessAdmins: 2
            serverDatabasePermissions:
            - databaseName: databaseName
              databaseOwner: databaseOwner
              roles:
              - roles
              - roles
              login: login
              cir: ""
              sid: sid
              username: username
            - databaseName: databaseName
              databaseOwner: databaseOwner
              roles:
              - roles
              - roles
              login: login
              cir: ""
              sid: sid
              username: username
            name: name
            dbOwners: 5
          monitoredEntityInfo:
          - rootMonitoredEntityType: 0
            instanceName: instanceName
            entityType: ""
            displayName: displayName
            monitoredEntityStatusCategory: 6
            overviewUrl: overviewUrl
            cir: ""
            collectionDate: 2000-01-23T04:56:07.000+00:00
            group: group
            tags:
            - name: name
            - name: name
          - rootMonitoredEntityType: 0
            instanceName: instanceName
            entityType: ""
            displayName: displayName
            monitoredEntityStatusCategory: 6
            overviewUrl: overviewUrl
            cir: ""
            collectionDate: 2000-01-23T04:56:07.000+00:00
            group: group
            tags:
            - name: name
            - name: name
        - userPermissions:
          - serverAdmins: 6
            accountName: accountName
            totalDatabases: 9
            sysAdmins: 0
            dbSecurityAdmins: 7
            serverLoginPermissions:
            - serverRoles:
              - serverRoles
              - serverRoles
              login: login
              cir: ""
            - serverRoles:
              - serverRoles
              - serverRoles
              login: login
              cir: ""
            sid: sid
            securityAdmins: 1
            totalServers: 5
            dbAccessAdmins: 2
            serverDatabasePermissions:
            - databaseName: databaseName
              databaseOwner: databaseOwner
              roles:
              - roles
              - roles
              login: login
              cir: ""
              sid: sid
              username: username
            - databaseName: databaseName
              databaseOwner: databaseOwner
              roles:
              - roles
              - roles
              login: login
              cir: ""
              sid: sid
              username: username
            name: name
            dbOwners: 5
          - serverAdmins: 6
            accountName: accountName
            totalDatabases: 9
            sysAdmins: 0
            dbSecurityAdmins: 7
            serverLoginPermissions:
            - serverRoles:
              - serverRoles
              - serverRoles
              login: login
              cir: ""
            - serverRoles:
              - serverRoles
              - serverRoles
              login: login
              cir: ""
            sid: sid
            securityAdmins: 1
            totalServers: 5
            dbAccessAdmins: 2
            serverDatabasePermissions:
            - databaseName: databaseName
              databaseOwner: databaseOwner
              roles:
              - roles
              - roles
              login: login
              cir: ""
              sid: sid
              username: username
            - databaseName: databaseName
              databaseOwner: databaseOwner
              roles:
              - roles
              - roles
              login: login
              cir: ""
              sid: sid
              username: username
            name: name
            dbOwners: 5
          monitoredEntityInfo:
          - rootMonitoredEntityType: 0
            instanceName: instanceName
            entityType: ""
            displayName: displayName
            monitoredEntityStatusCategory: 6
            overviewUrl: overviewUrl
            cir: ""
            collectionDate: 2000-01-23T04:56:07.000+00:00
            group: group
            tags:
            - name: name
            - name: name
          - rootMonitoredEntityType: 0
            instanceName: instanceName
            entityType: ""
            displayName: displayName
            monitoredEntityStatusCategory: 6
            overviewUrl: overviewUrl
            cir: ""
            collectionDate: 2000-01-23T04:56:07.000+00:00
            group: group
            tags:
            - name: name
            - name: name
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/OldUserPermissionAndMonitoredEntityDto'
          type: array
      type: object
    OldUserPermissionAndMonitoredEntityDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          userPermissions:
          - serverAdmins: 6
            accountName: accountName
            totalDatabases: 9
            sysAdmins: 0
            dbSecurityAdmins: 7
            serverLoginPermissions:
            - serverRoles:
              - serverRoles
              - serverRoles
              login: login
              cir: ""
            - serverRoles:
              - serverRoles
              - serverRoles
              login: login
              cir: ""
            sid: sid
            securityAdmins: 1
            totalServers: 5
            dbAccessAdmins: 2
            serverDatabasePermissions:
            - databaseName: databaseName
              databaseOwner: databaseOwner
              roles:
              - roles
              - roles
              login: login
              cir: ""
              sid: sid
              username: username
            - databaseName: databaseName
              databaseOwner: databaseOwner
              roles:
              - roles
              - roles
              login: login
              cir: ""
              sid: sid
              username: username
            name: name
            dbOwners: 5
          - serverAdmins: 6
            accountName: accountName
            totalDatabases: 9
            sysAdmins: 0
            dbSecurityAdmins: 7
            serverLoginPermissions:
            - serverRoles:
              - serverRoles
              - serverRoles
              login: login
              cir: ""
            - serverRoles:
              - serverRoles
              - serverRoles
              login: login
              cir: ""
            sid: sid
            securityAdmins: 1
            totalServers: 5
            dbAccessAdmins: 2
            serverDatabasePermissions:
            - databaseName: databaseName
              databaseOwner: databaseOwner
              roles:
              - roles
              - roles
              login: login
              cir: ""
              sid: sid
              username: username
            - databaseName: databaseName
              databaseOwner: databaseOwner
              roles:
              - roles
              - roles
              login: login
              cir: ""
              sid: sid
              username: username
            name: name
            dbOwners: 5
          monitoredEntityInfo:
          - rootMonitoredEntityType: 0
            instanceName: instanceName
            entityType: ""
            displayName: displayName
            monitoredEntityStatusCategory: 6
            overviewUrl: overviewUrl
            cir: ""
            collectionDate: 2000-01-23T04:56:07.000+00:00
            group: group
            tags:
            - name: name
            - name: name
          - rootMonitoredEntityType: 0
            instanceName: instanceName
            entityType: ""
            displayName: displayName
            monitoredEntityStatusCategory: 6
            overviewUrl: overviewUrl
            cir: ""
            collectionDate: 2000-01-23T04:56:07.000+00:00
            group: group
            tags:
            - name: name
            - name: name
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/OldUserPermissionAndMonitoredEntityDto'
      type: object
    OldUserPermissionsDto:
      additionalProperties: false
      example:
        serverAdmins: 6
        accountName: accountName
        totalDatabases: 9
        sysAdmins: 0
        dbSecurityAdmins: 7
        serverLoginPermissions:
        - serverRoles:
          - serverRoles
          - serverRoles
          login: login
          cir: ""
        - serverRoles:
          - serverRoles
          - serverRoles
          login: login
          cir: ""
        sid: sid
        securityAdmins: 1
        totalServers: 5
        dbAccessAdmins: 2
        serverDatabasePermissions:
        - databaseName: databaseName
          databaseOwner: databaseOwner
          roles:
          - roles
          - roles
          login: login
          cir: ""
          sid: sid
          username: username
        - databaseName: databaseName
          databaseOwner: databaseOwner
          roles:
          - roles
          - roles
          login: login
          cir: ""
          sid: sid
          username: username
        name: name
        dbOwners: 5
      properties:
        name:
          nullable: true
          type: string
        accountName:
          nullable: true
          type: string
        sid:
          nullable: true
          type: string
        sysAdmins:
          format: int32
          type: integer
        serverAdmins:
          format: int32
          type: integer
        securityAdmins:
          format: int32
          type: integer
        totalServers:
          format: int32
          type: integer
        dbOwners:
          format: int32
          type: integer
        dbAccessAdmins:
          format: int32
          type: integer
        dbSecurityAdmins:
          format: int32
          type: integer
        totalDatabases:
          format: int32
          type: integer
        serverLoginPermissions:
          items:
            $ref: '#/components/schemas/OldServerLoginPermissionsDto'
          nullable: true
          type: array
        serverDatabasePermissions:
          items:
            $ref: '#/components/schemas/OldServerDatabasePermissionsDto'
          nullable: true
          type: array
      type: object
    OpenIdConnectSettingsDto:
      additionalProperties: false
      example:
        groupClaimName: groupClaimName
        clientId: clientId
        adminUser: adminUser
        adminPrincipalType: 6
        authority: authority
        sendIdTokenOnLogout: true
        clientSecret: clientSecret
        usernameClaimName: usernameClaimName
        flowType: 0
      properties:
        authority:
          minLength: 1
          type: string
        clientId:
          minLength: 1
          type: string
        flowType:
          $ref: '#/components/schemas/FlowType'
        clientSecret:
          nullable: true
          type: string
        usernameClaimName:
          minLength: 1
          type: string
        groupClaimName:
          minLength: 1
          type: string
        adminUser:
          nullable: true
          type: string
        adminPrincipalType:
          $ref: '#/components/schemas/PrincipalTypeDto'
        sendIdTokenOnLogout:
          type: boolean
      required:
      - adminPrincipalType
      - adminUser
      - authority
      - clientId
      - flowType
      - groupClaimName
      - sendIdTokenOnLogout
      - usernameClaimName
      type: object
    OpenIdConnectSettingsDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          groupClaimName: groupClaimName
          clientId: clientId
          adminUser: adminUser
          adminPrincipalType: 6
          authority: authority
          sendIdTokenOnLogout: true
          clientSecret: clientSecret
          usernameClaimName: usernameClaimName
          flowType: 0
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/OpenIdConnectSettingsDto'
      type: object
    OracleAuthenticationMode:
      enum:
      - 0
      format: int32
      type: integer
    OracleCredentialsModel:
      additionalProperties: false
      example:
        password: password
        decryptionFailed: true
        userName: userName
        authenticationMode: 5
      properties:
        userName:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        decryptionFailed:
          type: boolean
        authenticationMode:
          $ref: '#/components/schemas/OracleAuthenticationMode'
      type: object
    OracleErrorLogDto:
      additionalProperties: false
      example:
        messageText: messageText
        logDate: 2000-01-23T04:56:07.000+00:00
        messageType: messageType
        processId: processId
        containerName: containerName
        messageLevel: messageLevel
      properties:
        logDate:
          format: date-time
          type: string
        containerName:
          nullable: true
          type: string
        processId:
          nullable: true
          type: string
        messageType:
          nullable: true
          type: string
        messageLevel:
          nullable: true
          type: string
        messageText:
          nullable: true
          type: string
      type: object
    OracleInstanceChannelInstanceRef:
      additionalProperties: false
      properties:
        channelRef:
          $ref: '#/components/schemas/ChannelRef'
        channelKey:
          $ref: '#/components/schemas/ChannelKey'
        channelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
        rootChannelInstanceRef:
          format: entity-id
          readOnly: true
          type: ChannelInstanceRef
        subChannelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
      type: object
    OracleInstanceCredentialsDto:
      additionalProperties: false
      example:
        password: password
        username: username
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
      type: object
    OracleInstance_TopQueriesChannelInstanceRef:
      additionalProperties: false
      properties:
        channelRef:
          $ref: '#/components/schemas/ChannelRef'
        channelKey:
          $ref: '#/components/schemas/ChannelKey'
        channelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
        rootChannelInstanceRef:
          format: entity-id
          readOnly: true
          type: ChannelInstanceRef
        subChannelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
      type: object
    OracleLongRunningQueriesDto:
      additionalProperties: false
      example:
        queries:
        - duration: 0.8008281904610115
          sqlText: sqlText
          sqlExecutionStart: 2000-01-23T04:56:07.000+00:00
          machine: machine
          logOnTime: 2000-01-23T04:56:07.000+00:00
          osUser: osUser
          sessionId:
            value: 0
          program: program
          sessionSerialNumber:
            value: 0
          username: username
        - duration: 0.8008281904610115
          sqlText: sqlText
          sqlExecutionStart: 2000-01-23T04:56:07.000+00:00
          machine: machine
          logOnTime: 2000-01-23T04:56:07.000+00:00
          osUser: osUser
          sessionId:
            value: 0
          program: program
          sessionSerialNumber:
            value: 0
          username: username
      properties:
        queries:
          items:
            $ref: '#/components/schemas/OracleLongRunningQueryDto'
          nullable: true
          type: array
      type: object
    OracleLongRunningQueriesDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          queries:
          - duration: 0.8008281904610115
            sqlText: sqlText
            sqlExecutionStart: 2000-01-23T04:56:07.000+00:00
            machine: machine
            logOnTime: 2000-01-23T04:56:07.000+00:00
            osUser: osUser
            sessionId:
              value: 0
            program: program
            sessionSerialNumber:
              value: 0
            username: username
          - duration: 0.8008281904610115
            sqlText: sqlText
            sqlExecutionStart: 2000-01-23T04:56:07.000+00:00
            machine: machine
            logOnTime: 2000-01-23T04:56:07.000+00:00
            osUser: osUser
            sessionId:
              value: 0
            program: program
            sessionSerialNumber:
              value: 0
            username: username
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/OracleLongRunningQueriesDto'
      type: object
    OracleLongRunningQueryDto:
      additionalProperties: false
      example:
        duration: 0.8008281904610115
        sqlText: sqlText
        sqlExecutionStart: 2000-01-23T04:56:07.000+00:00
        machine: machine
        logOnTime: 2000-01-23T04:56:07.000+00:00
        osUser: osUser
        sessionId:
          value: 0
        program: program
        sessionSerialNumber:
          value: 0
        username: username
      properties:
        sessionId:
          $ref: '#/components/schemas/IntegerIdentifier'
        sessionSerialNumber:
          $ref: '#/components/schemas/IntegerIdentifier'
        logOnTime:
          format: date-time
          type: string
        sqlExecutionStart:
          format: date-time
          type: string
        username:
          nullable: true
          type: string
        osUser:
          nullable: true
          type: string
        machine:
          nullable: true
          type: string
        program:
          nullable: true
          type: string
        sqlText:
          nullable: true
          type: string
        duration:
          format: double
          type: number
      type: object
    OracleTopQueriesDto:
      additionalProperties: false
      example:
        topQueries:
        - sqlId: sqlId
          planHashValue: planHashValue
          sqlText: sqlText
          shareableMemory: 5
          channelInstanceRef: ""
          userIoWait: 5
          cpuTime: 1
          containerName: containerName
          executionCount: 0
          optimizerCost: 2
          elapsedTime: 6
        - sqlId: sqlId
          planHashValue: planHashValue
          sqlText: sqlText
          shareableMemory: 5
          channelInstanceRef: ""
          userIoWait: 5
          cpuTime: 1
          containerName: containerName
          executionCount: 0
          optimizerCost: 2
          elapsedTime: 6
      properties:
        topQueries:
          items:
            $ref: '#/components/schemas/OracleTopQueryDto'
          nullable: true
          type: array
      type: object
    OracleTopQueriesDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          topQueries:
          - sqlId: sqlId
            planHashValue: planHashValue
            sqlText: sqlText
            shareableMemory: 5
            channelInstanceRef: ""
            userIoWait: 5
            cpuTime: 1
            containerName: containerName
            executionCount: 0
            optimizerCost: 2
            elapsedTime: 6
          - sqlId: sqlId
            planHashValue: planHashValue
            sqlText: sqlText
            shareableMemory: 5
            channelInstanceRef: ""
            userIoWait: 5
            cpuTime: 1
            containerName: containerName
            executionCount: 0
            optimizerCost: 2
            elapsedTime: 6
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/OracleTopQueriesDto'
      type: object
    OracleTopQueryDto:
      additionalProperties: false
      example:
        sqlId: sqlId
        planHashValue: planHashValue
        sqlText: sqlText
        shareableMemory: 5
        channelInstanceRef: ""
        userIoWait: 5
        cpuTime: 1
        containerName: containerName
        executionCount: 0
        optimizerCost: 2
        elapsedTime: 6
      properties:
        channelInstanceRef:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        sqlId:
          nullable: true
          type: string
        sqlText:
          nullable: true
          type: string
        executionCount:
          format: int64
          type: integer
        elapsedTime:
          format: int64
          type: integer
        cpuTime:
          format: int64
          type: integer
        userIoWait:
          format: int64
          type: integer
        shareableMemory:
          format: int64
          type: integer
        optimizerCost:
          format: int64
          type: integer
        planHashValue:
          nullable: true
          type: string
        containerName:
          nullable: true
          type: string
      type: object
    OracleTopQueryProperty:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      format: int32
      type: integer
    OracleTopQueryPropertyQueryHistorySeriesDto:
      additionalProperties: false
      example:
        values:
        - date: 2000-01-23T04:56:07.000+00:00
          value: 6.027456183070403
        - date: 2000-01-23T04:56:07.000+00:00
          value: 6.027456183070403
        name: 0
      properties:
        name:
          $ref: '#/components/schemas/OracleTopQueryProperty'
        values:
          items:
            $ref: '#/components/schemas/QueryHistoryPointDto'
          type: array
      type: object
    OracleTopQueryPropertyQueryHistoryWithoutPlanKeyDto:
      additionalProperties: false
      example:
        maxTime: 2000-01-23T04:56:07.000+00:00
        queryHistorySeries:
        - values:
          - date: 2000-01-23T04:56:07.000+00:00
            value: 6.027456183070403
          - date: 2000-01-23T04:56:07.000+00:00
            value: 6.027456183070403
          name: 0
        - values:
          - date: 2000-01-23T04:56:07.000+00:00
            value: 6.027456183070403
          - date: 2000-01-23T04:56:07.000+00:00
            value: 6.027456183070403
          name: 0
        minTime: 2000-01-23T04:56:07.000+00:00
      properties:
        minTime:
          format: date-time
          type: string
        maxTime:
          format: date-time
          type: string
        queryHistorySeries:
          items:
            $ref: '#/components/schemas/OracleTopQueryPropertyQueryHistorySeriesDto'
          type: array
      type: object
    OracleTopQueryPropertyQueryHistoryWithoutPlanKeyDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          maxTime: 2000-01-23T04:56:07.000+00:00
          queryHistorySeries:
          - values:
            - date: 2000-01-23T04:56:07.000+00:00
              value: 6.027456183070403
            - date: 2000-01-23T04:56:07.000+00:00
              value: 6.027456183070403
            name: 0
          - values:
            - date: 2000-01-23T04:56:07.000+00:00
              value: 6.027456183070403
            - date: 2000-01-23T04:56:07.000+00:00
              value: 6.027456183070403
            name: 0
          minTime: 2000-01-23T04:56:07.000+00:00
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/OracleTopQueryPropertyQueryHistoryWithoutPlanKeyDto'
      type: object
    OrphanedUserRecommendationDto:
      additionalProperties: false
      example:
        databaseUserType: 1
        databaseUserSid: databaseUserSid
        databaseUserName: databaseUserName
      properties:
        databaseUserSid:
          nullable: true
          readOnly: true
          type: string
        databaseUserName:
          nullable: true
          type: string
        databaseUserType:
          $ref: '#/components/schemas/OrphanedUserTypeDto'
      type: object
    OrphanedUserTypeDto:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    ParsedRelOpDto:
      additionalProperties: false
      example:
        cost: 5.962133916683182
        name: name
        difference: 1.4658129805029452
        id:
          value: 0
        actualRows: 6.027456183070403
        estimatedRows: 0.8008281904610115
      properties:
        id:
          $ref: '#/components/schemas/IntegerIdentifier'
        name:
          nullable: true
          type: string
        estimatedRows:
          format: double
          type: number
        actualRows:
          format: double
          type: number
        difference:
          format: double
          type: number
        cost:
          format: double
          type: number
      required:
      - actualRows
      - cost
      - difference
      - estimatedRows
      - id
      - name
      type: object
    PermissionChangeDto:
      additionalProperties: false
      example:
        permissionType: permissionType
        majorId:
          value: 0
        databaseName: databaseName
        permissionChangeType: 0
        serverName: serverName
        cir: ""
        previousState: previousState
        principal: principal
        dateOfChange: 2000-01-23T04:56:07.000+00:00
        changedBy: changedBy
        additionalInfo: additionalInfo
        objectName: objectName
        currentState: currentState
        principalType: principalType
      properties:
        cir:
          format: entity-id
          type: ChannelInstanceRef
        permissionType:
          type: string
        dateOfChange:
          format: date-time
          type: string
        serverName:
          type: string
        databaseName:
          type: string
        principal:
          type: string
        principalType:
          type: string
        objectName:
          type: string
        currentState:
          type: string
        previousState:
          nullable: true
          type: string
        changedBy:
          type: string
        permissionChangeType:
          $ref: '#/components/schemas/PermissionChangeType'
        majorId:
          $ref: '#/components/schemas/IntegerIdentifier'
        additionalInfo:
          type: string
      type: object
    PermissionChangeDtoIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - permissionType: permissionType
          majorId:
            value: 0
          databaseName: databaseName
          permissionChangeType: 0
          serverName: serverName
          cir: ""
          previousState: previousState
          principal: principal
          dateOfChange: 2000-01-23T04:56:07.000+00:00
          changedBy: changedBy
          additionalInfo: additionalInfo
          objectName: objectName
          currentState: currentState
          principalType: principalType
        - permissionType: permissionType
          majorId:
            value: 0
          databaseName: databaseName
          permissionChangeType: 0
          serverName: serverName
          cir: ""
          previousState: previousState
          principal: principal
          dateOfChange: 2000-01-23T04:56:07.000+00:00
          changedBy: changedBy
          additionalInfo: additionalInfo
          objectName: objectName
          currentState: currentState
          principalType: principalType
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/PermissionChangeDto'
          type: array
      type: object
    PermissionChangeType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      format: int32
      type: integer
    PlatformDto:
      enum:
      - 0
      - 1
      - 2
      - 3
      - -1
      format: int32
      type: integer
    PostgresAuthenticationMode:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      format: int32
      type: integer
    PostgresConfigurationOptionDto:
      additionalProperties: false
      type: object
    PostgresConfigurationOptionsDto:
      additionalProperties: false
      example:
        options:
          key: null
      properties:
        options:
          additionalProperties:
            $ref: '#/components/schemas/PostgresConfigurationOptionDto'
          nullable: true
          type: object
      type: object
    PostgresCredentialsModel:
      additionalProperties: false
      example:
        entraServicePrincipalCredentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        password: password
        database: database
        iamRoleArn: iamRoleArn
        decryptionFailed: true
        userName: userName
        iamAccessKey: iamAccessKey
        iamSecretKey: iamSecretKey
        authenticationMode: 1
        iamRegion: iamRegion
      properties:
        authenticationMode:
          $ref: '#/components/schemas/PostgresAuthenticationMode'
        userName:
          type: string
        password:
          nullable: true
          type: string
        decryptionFailed:
          type: boolean
        database:
          nullable: true
          type: string
        iamAccessKey:
          nullable: true
          type: string
        iamSecretKey:
          nullable: true
          type: string
        iamRoleArn:
          nullable: true
          type: string
        iamRegion:
          nullable: true
          type: string
        entraServicePrincipalCredentialsId:
          format: uuid
          nullable: true
          type: string
      type: object
    PostgresErrorLogDto:
      additionalProperties: false
      example:
        processId:
          value: 0
        errorSeverity: errorSeverity
        message: message
        logTime: 2000-01-23T04:56:07.000+00:00
      properties:
        logTime:
          format: date-time
          type: string
        processId:
          $ref: '#/components/schemas/IntegerIdentifier'
        errorSeverity:
          nullable: true
          type: string
        message:
          nullable: true
          type: string
      type: object
    PostgresInstanceChannelInstanceRef:
      additionalProperties: false
      example:
        rootChannelInstanceRef: ""
        channelKey:
          keys:
            key: ""
          propertyNames:
          - name: name
          - name: name
          count: 1
        channelRef:
          parent: ""
          depth: 0
          isRoot: true
          leadingChannelRefs:
          - null
          - null
          qualifiedChannelName:
            parent: null
            tailQualifiedChannelName: null
            depth: 6
            isRoot: true
            qualifiedSubChannelNames:
            - null
            - null
            headChannelName:
              name: name
            subChannelNames:
            - name: name
            - name: name
            channelName:
              name: name
            qualifiedChannelNames:
            - null
            - null
          channelName:
            name: name
        channelInstanceRefs:
        - ""
        - ""
        subChannelInstanceRefs:
        - ""
        - ""
      properties:
        channelRef:
          $ref: '#/components/schemas/ChannelRef'
        channelKey:
          $ref: '#/components/schemas/ChannelKey'
        channelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
        rootChannelInstanceRef:
          format: entity-id
          readOnly: true
          type: ChannelInstanceRef
        subChannelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
      type: object
    PostgresInstanceCredentialsDto:
      additionalProperties: false
      example:
        password: password
        entraServicePrincipalCredentialId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        iamRoleArn: iamRoleArn
        iamAccessKey: iamAccessKey
        iamSecretKey: iamSecretKey
        authenticationMode: 6
        iamRegion: iamRegion
        username: username
      properties:
        authenticationMode:
          $ref: '#/components/schemas/SimplifiedPostgresAuthenticationMode'
        username:
          type: string
        password:
          type: string
        iamAccessKey:
          type: string
        iamSecretKey:
          type: string
        iamRegion:
          nullable: true
          type: string
        iamRoleArn:
          nullable: true
          type: string
        entraServicePrincipalCredentialId:
          format: uuid
          nullable: true
          type: string
      required:
      - authenticationMode
      - username
      type: object
    PostgresInstance_DatabaseChannelInstanceRef:
      additionalProperties: false
      properties:
        channelRef:
          $ref: '#/components/schemas/ChannelRef'
        channelKey:
          $ref: '#/components/schemas/ChannelKey'
        channelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
        rootChannelInstanceRef:
          format: entity-id
          readOnly: true
          type: ChannelInstanceRef
        subChannelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
      type: object
    PostgresInstance_Database_TableChannelInstanceRef:
      additionalProperties: false
      properties:
        channelRef:
          $ref: '#/components/schemas/ChannelRef'
        channelKey:
          $ref: '#/components/schemas/ChannelKey'
        channelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
        rootChannelInstanceRef:
          format: entity-id
          readOnly: true
          type: ChannelInstanceRef
        subChannelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
      type: object
    PostgresInstance_TopQueriesChannelInstanceRef:
      additionalProperties: false
      properties:
        channelRef:
          $ref: '#/components/schemas/ChannelRef'
        channelKey:
          $ref: '#/components/schemas/ChannelKey'
        channelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
        rootChannelInstanceRef:
          format: entity-id
          readOnly: true
          type: ChannelInstanceRef
        subChannelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
      type: object
    PostgresMetricPresentationDto:
      additionalProperties: false
      example:
        color: color
        property: property
        name: name
        style: style
        units: units
      properties:
        property:
          type: string
        name:
          type: string
        color:
          type: string
        units:
          type: string
        style:
          type: string
      type: object
    PostgresQueryHistoryPlanKeyDto:
      additionalProperties: false
      example:
        queryHash: queryHash
        databaseName: databaseName
        planHash: planHash
        queryId:
          value: 0
      properties:
        queryHash:
          type: string
        databaseName:
          type: string
        queryId:
          $ref: '#/components/schemas/IntegerIdentifier'
        planHash:
          type: string
      type: object
    PostgresQueryHistoryPlanKeyDtoQueryHistoryPlanChangePointDto:
      additionalProperties: false
      example:
        date: 2000-01-23T04:56:07.000+00:00
        planKey:
          queryHash: queryHash
          databaseName: databaseName
          planHash: planHash
          queryId:
            value: 0
      properties:
        date:
          format: date-time
          type: string
        planKey:
          $ref: '#/components/schemas/PostgresQueryHistoryPlanKeyDto'
      type: object
    PostgresQueryPlanKeysDto:
      additionalProperties: false
      example:
        queryHash: queryHash
        databaseName: databaseName
        topLevel: true
        databaseId:
          value: 0
        planHash: planHash
        userId:
          value: 0
        queryId:
          value: 0
      properties:
        queryHash:
          nullable: true
          type: string
        databaseName:
          nullable: true
          type: string
        queryId:
          $ref: '#/components/schemas/IntegerIdentifier'
        userId:
          $ref: '#/components/schemas/IntegerIdentifier'
        databaseId:
          $ref: '#/components/schemas/IntegerIdentifier'
        topLevel:
          type: boolean
        planHash:
          nullable: true
          type: string
      type: object
    PostgresQueryRecommendationDto:
      additionalProperties: false
      example:
        score: 0
        queryRecommendationType: 6
        engineType: ""
      properties:
        engineType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
        score:
          format: int32
          readOnly: true
          type: integer
        queryRecommendationType:
          $ref: '#/components/schemas/PostgresQueryRecommendationType'
      type: object
    PostgresQueryRecommendationDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - score: 0
          queryRecommendationType: 6
          engineType: ""
        - score: 0
          queryRecommendationType: 6
          engineType: ""
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/PostgresQueryRecommendationDto'
          type: array
      type: object
    PostgresQueryRecommendationDtoPostgresQueryRecommendationCollectionDto:
      additionalProperties: false
      example:
        queryHash: queryHash
        databaseName: databaseName
        queryId: queryId
        queryRecommendations:
        - score: 0
          queryRecommendationType: 6
          engineType: ""
        - score: 0
          queryRecommendationType: 6
          engineType: ""
      properties:
        queryHash:
          type: string
        databaseName:
          type: string
        queryId:
          type: string
        queryRecommendations:
          items:
            $ref: '#/components/schemas/PostgresQueryRecommendationDto'
          type: array
      type: object
    PostgresQueryRecommendationDtoPostgresQueryRecommendationCollectionDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - queryHash: queryHash
          databaseName: databaseName
          queryId: queryId
          queryRecommendations:
          - score: 0
            queryRecommendationType: 6
            engineType: ""
          - score: 0
            queryRecommendationType: 6
            engineType: ""
        - queryHash: queryHash
          databaseName: databaseName
          queryId: queryId
          queryRecommendations:
          - score: 0
            queryRecommendationType: 6
            engineType: ""
          - score: 0
            queryRecommendationType: 6
            engineType: ""
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/PostgresQueryRecommendationDtoPostgresQueryRecommendationCollectionDto'
          type: array
      type: object
    PostgresQueryRecommendationType:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    PostgresQueryRecommendationsRequestDto:
      additionalProperties: false
      example:
        queryRecommendationKeys:
        - queryHash: queryHash
          databaseName: databaseName
          topLevel: true
          databaseId:
            value: 0
          planHash: planHash
          userId:
            value: 0
          queryId:
            value: 0
        - queryHash: queryHash
          databaseName: databaseName
          topLevel: true
          databaseId:
            value: 0
          planHash: planHash
          userId:
            value: 0
          queryId:
            value: 0
        endDate: 2000-01-23T04:56:07.000+00:00
        cir:
          rootChannelInstanceRef: ""
          channelKey:
            keys:
              key: ""
            propertyNames:
            - name: name
            - name: name
            count: 1
          channelRef:
            parent: ""
            depth: 0
            isRoot: true
            leadingChannelRefs:
            - null
            - null
            qualifiedChannelName:
              parent: null
              tailQualifiedChannelName: null
              depth: 6
              isRoot: true
              qualifiedSubChannelNames:
              - null
              - null
              headChannelName:
                name: name
              subChannelNames:
              - name: name
              - name: name
              channelName:
                name: name
              qualifiedChannelNames:
              - null
              - null
            channelName:
              name: name
          channelInstanceRefs:
          - ""
          - ""
          subChannelInstanceRefs:
          - ""
          - ""
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        cir:
          $ref: '#/components/schemas/PostgresInstanceChannelInstanceRef'
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        queryRecommendationKeys:
          items:
            $ref: '#/components/schemas/PostgresQueryPlanKeysDto'
          nullable: true
          type: array
      type: object
    PostgresReplicaDto:
      additionalProperties: false
      example:
        walSenderPid:
          value: 0
        address: address
        writeLag: 1
        syncState: syncState
        pendingLag: 6
        startedAt: 2000-01-23T04:56:07.000+00:00
        flushLag: 5
        overviewUrl: overviewUrl
        replayLag: 5
        slotName: slotName
        channelInstanceRef: ""
        baseMonitorName: baseMonitorName
        isMonitored: true
        applicationName: applicationName
        status: status
      properties:
        walSenderPid:
          $ref: '#/components/schemas/IntegerIdentifier'
        address:
          type: string
        applicationName:
          type: string
        slotName:
          type: string
        startedAt:
          format: date-time
          type: string
        status:
          type: string
        syncState:
          type: string
        pendingLag:
          format: int64
          type: integer
        writeLag:
          format: int64
          type: integer
        flushLag:
          format: int64
          type: integer
        replayLag:
          format: int64
          type: integer
        isMonitored:
          type: boolean
        channelInstanceRef:
          format: entity-id
          type: ChannelInstanceRef
        baseMonitorName:
          type: string
        overviewUrl:
          type: string
      type: object
    PostgresReplicationDataDto:
      additionalProperties: false
      example:
        role: 0
        standbyReplicas:
        - walSenderPid:
            value: 0
          address: address
          writeLag: 1
          syncState: syncState
          pendingLag: 6
          startedAt: 2000-01-23T04:56:07.000+00:00
          flushLag: 5
          overviewUrl: overviewUrl
          replayLag: 5
          slotName: slotName
          channelInstanceRef: ""
          baseMonitorName: baseMonitorName
          isMonitored: true
          applicationName: applicationName
          status: status
        - walSenderPid:
            value: 0
          address: address
          writeLag: 1
          syncState: syncState
          pendingLag: 6
          startedAt: 2000-01-23T04:56:07.000+00:00
          flushLag: 5
          overviewUrl: overviewUrl
          replayLag: 5
          slotName: slotName
          channelInstanceRef: ""
          baseMonitorName: baseMonitorName
          isMonitored: true
          applicationName: applicationName
          status: status
        clusterName: clusterName
        metricPresentations:
        - color: color
          property: property
          name: name
          style: style
          units: units
        - color: color
          property: property
          name: name
          style: style
          units: units
        walReceiver:
          slotName: slotName
          senderPort: 2
          senderHost: senderHost
        lineGroups:
        - max: 7.386281948385884
          name: name
          lines:
          - tooltipFormatter: tooltipFormatter
            data:
            - - 7.061401241503109
              - 7.061401241503109
            - - 7.061401241503109
              - 7.061401241503109
            color: color
            max: 9.301444243932576
            dashStyle: dashStyle
            markerSymbol: markerSymbol
            lineColor: lineColor
            analysisLinkData:
              serializedTime: serializedTime
              metrics:
              - dataStream: dataStream
                cir: cir
              - dataStream: dataStream
                cir: cir
            lineWidth: 3
            tooltipSuffix: tooltipSuffix
            name: name
            id: id
            yAxisScale:
              min: 2
              max: 4
          - tooltipFormatter: tooltipFormatter
            data:
            - - 7.061401241503109
              - 7.061401241503109
            - - 7.061401241503109
              - 7.061401241503109
            color: color
            max: 9.301444243932576
            dashStyle: dashStyle
            markerSymbol: markerSymbol
            lineColor: lineColor
            analysisLinkData:
              serializedTime: serializedTime
              metrics:
              - dataStream: dataStream
                cir: cir
              - dataStream: dataStream
                cir: cir
            lineWidth: 3
            tooltipSuffix: tooltipSuffix
            name: name
            id: id
            yAxisScale:
              min: 2
              max: 4
          analysisLinkData:
            serializedTime: serializedTime
            metrics:
            - dataStream: dataStream
              cir: cir
            - dataStream: dataStream
              cir: cir
        - max: 7.386281948385884
          name: name
          lines:
          - tooltipFormatter: tooltipFormatter
            data:
            - - 7.061401241503109
              - 7.061401241503109
            - - 7.061401241503109
              - 7.061401241503109
            color: color
            max: 9.301444243932576
            dashStyle: dashStyle
            markerSymbol: markerSymbol
            lineColor: lineColor
            analysisLinkData:
              serializedTime: serializedTime
              metrics:
              - dataStream: dataStream
                cir: cir
              - dataStream: dataStream
                cir: cir
            lineWidth: 3
            tooltipSuffix: tooltipSuffix
            name: name
            id: id
            yAxisScale:
              min: 2
              max: 4
          - tooltipFormatter: tooltipFormatter
            data:
            - - 7.061401241503109
              - 7.061401241503109
            - - 7.061401241503109
              - 7.061401241503109
            color: color
            max: 9.301444243932576
            dashStyle: dashStyle
            markerSymbol: markerSymbol
            lineColor: lineColor
            analysisLinkData:
              serializedTime: serializedTime
              metrics:
              - dataStream: dataStream
                cir: cir
              - dataStream: dataStream
                cir: cir
            lineWidth: 3
            tooltipSuffix: tooltipSuffix
            name: name
            id: id
            yAxisScale:
              min: 2
              max: 4
          analysisLinkData:
            serializedTime: serializedTime
            metrics:
            - dataStream: dataStream
              cir: cir
            - dataStream: dataStream
              cir: cir
      properties:
        role:
          $ref: '#/components/schemas/PostgresReplicationRole'
        standbyReplicas:
          items:
            $ref: '#/components/schemas/PostgresReplicaDto'
          type: array
        walReceiver:
          $ref: '#/components/schemas/PostgresWalReceiverDto'
        clusterName:
          nullable: true
          type: string
        lineGroups:
          items:
            $ref: '#/components/schemas/InstanceMetricLineGroup'
          type: array
        metricPresentations:
          items:
            $ref: '#/components/schemas/PostgresMetricPresentationDto'
          type: array
      type: object
    PostgresReplicationDataDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          role: 0
          standbyReplicas:
          - walSenderPid:
              value: 0
            address: address
            writeLag: 1
            syncState: syncState
            pendingLag: 6
            startedAt: 2000-01-23T04:56:07.000+00:00
            flushLag: 5
            overviewUrl: overviewUrl
            replayLag: 5
            slotName: slotName
            channelInstanceRef: ""
            baseMonitorName: baseMonitorName
            isMonitored: true
            applicationName: applicationName
            status: status
          - walSenderPid:
              value: 0
            address: address
            writeLag: 1
            syncState: syncState
            pendingLag: 6
            startedAt: 2000-01-23T04:56:07.000+00:00
            flushLag: 5
            overviewUrl: overviewUrl
            replayLag: 5
            slotName: slotName
            channelInstanceRef: ""
            baseMonitorName: baseMonitorName
            isMonitored: true
            applicationName: applicationName
            status: status
          clusterName: clusterName
          metricPresentations:
          - color: color
            property: property
            name: name
            style: style
            units: units
          - color: color
            property: property
            name: name
            style: style
            units: units
          walReceiver:
            slotName: slotName
            senderPort: 2
            senderHost: senderHost
          lineGroups:
          - max: 7.386281948385884
            name: name
            lines:
            - tooltipFormatter: tooltipFormatter
              data:
              - - 7.061401241503109
                - 7.061401241503109
              - - 7.061401241503109
                - 7.061401241503109
              color: color
              max: 9.301444243932576
              dashStyle: dashStyle
              markerSymbol: markerSymbol
              lineColor: lineColor
              analysisLinkData:
                serializedTime: serializedTime
                metrics:
                - dataStream: dataStream
                  cir: cir
                - dataStream: dataStream
                  cir: cir
              lineWidth: 3
              tooltipSuffix: tooltipSuffix
              name: name
              id: id
              yAxisScale:
                min: 2
                max: 4
            - tooltipFormatter: tooltipFormatter
              data:
              - - 7.061401241503109
                - 7.061401241503109
              - - 7.061401241503109
                - 7.061401241503109
              color: color
              max: 9.301444243932576
              dashStyle: dashStyle
              markerSymbol: markerSymbol
              lineColor: lineColor
              analysisLinkData:
                serializedTime: serializedTime
                metrics:
                - dataStream: dataStream
                  cir: cir
                - dataStream: dataStream
                  cir: cir
              lineWidth: 3
              tooltipSuffix: tooltipSuffix
              name: name
              id: id
              yAxisScale:
                min: 2
                max: 4
            analysisLinkData:
              serializedTime: serializedTime
              metrics:
              - dataStream: dataStream
                cir: cir
              - dataStream: dataStream
                cir: cir
          - max: 7.386281948385884
            name: name
            lines:
            - tooltipFormatter: tooltipFormatter
              data:
              - - 7.061401241503109
                - 7.061401241503109
              - - 7.061401241503109
                - 7.061401241503109
              color: color
              max: 9.301444243932576
              dashStyle: dashStyle
              markerSymbol: markerSymbol
              lineColor: lineColor
              analysisLinkData:
                serializedTime: serializedTime
                metrics:
                - dataStream: dataStream
                  cir: cir
                - dataStream: dataStream
                  cir: cir
              lineWidth: 3
              tooltipSuffix: tooltipSuffix
              name: name
              id: id
              yAxisScale:
                min: 2
                max: 4
            - tooltipFormatter: tooltipFormatter
              data:
              - - 7.061401241503109
                - 7.061401241503109
              - - 7.061401241503109
                - 7.061401241503109
              color: color
              max: 9.301444243932576
              dashStyle: dashStyle
              markerSymbol: markerSymbol
              lineColor: lineColor
              analysisLinkData:
                serializedTime: serializedTime
                metrics:
                - dataStream: dataStream
                  cir: cir
                - dataStream: dataStream
                  cir: cir
              lineWidth: 3
              tooltipSuffix: tooltipSuffix
              name: name
              id: id
              yAxisScale:
                min: 2
                max: 4
            analysisLinkData:
              serializedTime: serializedTime
              metrics:
              - dataStream: dataStream
                cir: cir
              - dataStream: dataStream
                cir: cir
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/PostgresReplicationDataDto'
      type: object
    PostgresReplicationRole:
      enum:
      - 0
      - 1
      - 2
      - 3
      format: int32
      type: integer
    PostgresReplicationSlotDto:
      additionalProperties: false
      example:
        temporary: true
        walStatus: walStatus
        slotSize: 6
        processId:
          value: 0
        name: name
        active: true
        safeWalSize: 1
      properties:
        name:
          nullable: true
          type: string
        active:
          type: boolean
        processId:
          $ref: '#/components/schemas/IntegerIdentifier'
        temporary:
          type: boolean
        slotSize:
          format: int64
          type: integer
        walStatus:
          nullable: true
          type: string
        safeWalSize:
          format: int64
          nullable: true
          type: integer
      type: object
    PostgresReplicationSlotsDataDto:
      additionalProperties: false
      example:
        maxSlotWalKeepSize: 0
        replicationSlots:
        - temporary: true
          walStatus: walStatus
          slotSize: 6
          processId:
            value: 0
          name: name
          active: true
          safeWalSize: 1
        - temporary: true
          walStatus: walStatus
          slotSize: 6
          processId:
            value: 0
          name: name
          active: true
          safeWalSize: 1
      properties:
        maxSlotWalKeepSize:
          format: int64
          type: integer
        replicationSlots:
          items:
            $ref: '#/components/schemas/PostgresReplicationSlotDto'
          nullable: true
          type: array
      type: object
    PostgresReplicationSlotsDataDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          maxSlotWalKeepSize: 0
          replicationSlots:
          - temporary: true
            walStatus: walStatus
            slotSize: 6
            processId:
              value: 0
            name: name
            active: true
            safeWalSize: 1
          - temporary: true
            walStatus: walStatus
            slotSize: 6
            processId:
              value: 0
            name: name
            active: true
            safeWalSize: 1
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/PostgresReplicationSlotsDataDto'
      type: object
    PostgresSecondaryReplicationDataDto:
      additionalProperties: false
      example:
        aggregatedLags:
        - writeLag: 1
          pendingLag: 6
          flushLag: 5
          collectionDate: 0
          replayLag: 5
        - writeLag: 1
          pendingLag: 6
          flushLag: 5
          collectionDate: 0
          replayLag: 5
        metricPresentations:
        - color: color
          property: property
          name: name
          style: style
          units: units
        - color: color
          property: property
          name: name
          style: style
          units: units
        lineGroups:
        - max: 7.386281948385884
          name: name
          lines:
          - tooltipFormatter: tooltipFormatter
            data:
            - - 7.061401241503109
              - 7.061401241503109
            - - 7.061401241503109
              - 7.061401241503109
            color: color
            max: 9.301444243932576
            dashStyle: dashStyle
            markerSymbol: markerSymbol
            lineColor: lineColor
            analysisLinkData:
              serializedTime: serializedTime
              metrics:
              - dataStream: dataStream
                cir: cir
              - dataStream: dataStream
                cir: cir
            lineWidth: 3
            tooltipSuffix: tooltipSuffix
            name: name
            id: id
            yAxisScale:
              min: 2
              max: 4
          - tooltipFormatter: tooltipFormatter
            data:
            - - 7.061401241503109
              - 7.061401241503109
            - - 7.061401241503109
              - 7.061401241503109
            color: color
            max: 9.301444243932576
            dashStyle: dashStyle
            markerSymbol: markerSymbol
            lineColor: lineColor
            analysisLinkData:
              serializedTime: serializedTime
              metrics:
              - dataStream: dataStream
                cir: cir
              - dataStream: dataStream
                cir: cir
            lineWidth: 3
            tooltipSuffix: tooltipSuffix
            name: name
            id: id
            yAxisScale:
              min: 2
              max: 4
          analysisLinkData:
            serializedTime: serializedTime
            metrics:
            - dataStream: dataStream
              cir: cir
            - dataStream: dataStream
              cir: cir
        - max: 7.386281948385884
          name: name
          lines:
          - tooltipFormatter: tooltipFormatter
            data:
            - - 7.061401241503109
              - 7.061401241503109
            - - 7.061401241503109
              - 7.061401241503109
            color: color
            max: 9.301444243932576
            dashStyle: dashStyle
            markerSymbol: markerSymbol
            lineColor: lineColor
            analysisLinkData:
              serializedTime: serializedTime
              metrics:
              - dataStream: dataStream
                cir: cir
              - dataStream: dataStream
                cir: cir
            lineWidth: 3
            tooltipSuffix: tooltipSuffix
            name: name
            id: id
            yAxisScale:
              min: 2
              max: 4
          - tooltipFormatter: tooltipFormatter
            data:
            - - 7.061401241503109
              - 7.061401241503109
            - - 7.061401241503109
              - 7.061401241503109
            color: color
            max: 9.301444243932576
            dashStyle: dashStyle
            markerSymbol: markerSymbol
            lineColor: lineColor
            analysisLinkData:
              serializedTime: serializedTime
              metrics:
              - dataStream: dataStream
                cir: cir
              - dataStream: dataStream
                cir: cir
            lineWidth: 3
            tooltipSuffix: tooltipSuffix
            name: name
            id: id
            yAxisScale:
              min: 2
              max: 4
          analysisLinkData:
            serializedTime: serializedTime
            metrics:
            - dataStream: dataStream
              cir: cir
            - dataStream: dataStream
              cir: cir
      properties:
        lineGroups:
          items:
            $ref: '#/components/schemas/InstanceMetricLineGroup'
          type: array
        metricPresentations:
          items:
            $ref: '#/components/schemas/PostgresMetricPresentationDto'
          type: array
        aggregatedLags:
          items:
            $ref: '#/components/schemas/AggregatedLagDto'
          type: array
      type: object
    PostgresSecondaryReplicationDataDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          aggregatedLags:
          - writeLag: 1
            pendingLag: 6
            flushLag: 5
            collectionDate: 0
            replayLag: 5
          - writeLag: 1
            pendingLag: 6
            flushLag: 5
            collectionDate: 0
            replayLag: 5
          metricPresentations:
          - color: color
            property: property
            name: name
            style: style
            units: units
          - color: color
            property: property
            name: name
            style: style
            units: units
          lineGroups:
          - max: 7.386281948385884
            name: name
            lines:
            - tooltipFormatter: tooltipFormatter
              data:
              - - 7.061401241503109
                - 7.061401241503109
              - - 7.061401241503109
                - 7.061401241503109
              color: color
              max: 9.301444243932576
              dashStyle: dashStyle
              markerSymbol: markerSymbol
              lineColor: lineColor
              analysisLinkData:
                serializedTime: serializedTime
                metrics:
                - dataStream: dataStream
                  cir: cir
                - dataStream: dataStream
                  cir: cir
              lineWidth: 3
              tooltipSuffix: tooltipSuffix
              name: name
              id: id
              yAxisScale:
                min: 2
                max: 4
            - tooltipFormatter: tooltipFormatter
              data:
              - - 7.061401241503109
                - 7.061401241503109
              - - 7.061401241503109
                - 7.061401241503109
              color: color
              max: 9.301444243932576
              dashStyle: dashStyle
              markerSymbol: markerSymbol
              lineColor: lineColor
              analysisLinkData:
                serializedTime: serializedTime
                metrics:
                - dataStream: dataStream
                  cir: cir
                - dataStream: dataStream
                  cir: cir
              lineWidth: 3
              tooltipSuffix: tooltipSuffix
              name: name
              id: id
              yAxisScale:
                min: 2
                max: 4
            analysisLinkData:
              serializedTime: serializedTime
              metrics:
              - dataStream: dataStream
                cir: cir
              - dataStream: dataStream
                cir: cir
          - max: 7.386281948385884
            name: name
            lines:
            - tooltipFormatter: tooltipFormatter
              data:
              - - 7.061401241503109
                - 7.061401241503109
              - - 7.061401241503109
                - 7.061401241503109
              color: color
              max: 9.301444243932576
              dashStyle: dashStyle
              markerSymbol: markerSymbol
              lineColor: lineColor
              analysisLinkData:
                serializedTime: serializedTime
                metrics:
                - dataStream: dataStream
                  cir: cir
                - dataStream: dataStream
                  cir: cir
              lineWidth: 3
              tooltipSuffix: tooltipSuffix
              name: name
              id: id
              yAxisScale:
                min: 2
                max: 4
            - tooltipFormatter: tooltipFormatter
              data:
              - - 7.061401241503109
                - 7.061401241503109
              - - 7.061401241503109
                - 7.061401241503109
              color: color
              max: 9.301444243932576
              dashStyle: dashStyle
              markerSymbol: markerSymbol
              lineColor: lineColor
              analysisLinkData:
                serializedTime: serializedTime
                metrics:
                - dataStream: dataStream
                  cir: cir
                - dataStream: dataStream
                  cir: cir
              lineWidth: 3
              tooltipSuffix: tooltipSuffix
              name: name
              id: id
              yAxisScale:
                min: 2
                max: 4
            analysisLinkData:
              serializedTime: serializedTime
              metrics:
              - dataStream: dataStream
                cir: cir
              - dataStream: dataStream
                cir: cir
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/PostgresSecondaryReplicationDataDto'
      type: object
    PostgresServerAliasUpdateDto:
      additionalProperties: false
      example:
        alias: alias
      properties:
        alias:
          type: string
      type: object
    PostgresTopQueriesDto:
      additionalProperties: false
      example:
        topQueries:
        - blocksWritten: 5
          ioTime: 2.3021358869347655
          databaseName: databaseName
          blocksRead: 5
          planHash: planHash
          userId:
            value: 0
          queryId:
            value: 0
          duration: 0.8008281904610115
          queryCir: ""
          queryHash: queryHash
          cacheBlocksHit: 1
          queryPlanExists: true
          topLevel: true
          queryText: queryText
          executionCount: 6
          databaseId:
            value: 0
        - blocksWritten: 5
          ioTime: 2.3021358869347655
          databaseName: databaseName
          blocksRead: 5
          planHash: planHash
          userId:
            value: 0
          queryId:
            value: 0
          duration: 0.8008281904610115
          queryCir: ""
          queryHash: queryHash
          cacheBlocksHit: 1
          queryPlanExists: true
          topLevel: true
          queryText: queryText
          executionCount: 6
          databaseId:
            value: 0
      properties:
        topQueries:
          items:
            $ref: '#/components/schemas/PostgresTopQueryDto'
          nullable: true
          type: array
      type: object
    PostgresTopQueriesDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          topQueries:
          - blocksWritten: 5
            ioTime: 2.3021358869347655
            databaseName: databaseName
            blocksRead: 5
            planHash: planHash
            userId:
              value: 0
            queryId:
              value: 0
            duration: 0.8008281904610115
            queryCir: ""
            queryHash: queryHash
            cacheBlocksHit: 1
            queryPlanExists: true
            topLevel: true
            queryText: queryText
            executionCount: 6
            databaseId:
              value: 0
          - blocksWritten: 5
            ioTime: 2.3021358869347655
            databaseName: databaseName
            blocksRead: 5
            planHash: planHash
            userId:
              value: 0
            queryId:
              value: 0
            duration: 0.8008281904610115
            queryCir: ""
            queryHash: queryHash
            cacheBlocksHit: 1
            queryPlanExists: true
            topLevel: true
            queryText: queryText
            executionCount: 6
            databaseId:
              value: 0
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/PostgresTopQueriesDto'
      type: object
    PostgresTopQueryDto:
      additionalProperties: false
      example:
        blocksWritten: 5
        ioTime: 2.3021358869347655
        databaseName: databaseName
        blocksRead: 5
        planHash: planHash
        userId:
          value: 0
        queryId:
          value: 0
        duration: 0.8008281904610115
        queryCir: ""
        queryHash: queryHash
        cacheBlocksHit: 1
        queryPlanExists: true
        topLevel: true
        queryText: queryText
        executionCount: 6
        databaseId:
          value: 0
      properties:
        queryId:
          $ref: '#/components/schemas/IntegerIdentifier'
        queryCir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        databaseName:
          nullable: true
          type: string
        databaseId:
          $ref: '#/components/schemas/IntegerIdentifier'
        userId:
          $ref: '#/components/schemas/IntegerIdentifier'
        topLevel:
          type: boolean
        queryText:
          nullable: true
          type: string
        queryHash:
          nullable: true
          type: string
        duration:
          format: double
          type: number
        executionCount:
          format: int64
          type: integer
        cacheBlocksHit:
          format: int64
          type: integer
        blocksRead:
          format: int64
          type: integer
        blocksWritten:
          format: int64
          type: integer
        ioTime:
          format: double
          type: number
        queryPlanExists:
          type: boolean
        planHash:
          nullable: true
          type: string
      type: object
    PostgresTopQueryProperty:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      format: int32
      type: integer
    PostgresTopQueryPropertyPostgresQueryHistoryPlanKeyDtoQueryHistoryDto:
      additionalProperties: false
      example:
        maxTime: 2000-01-23T04:56:07.000+00:00
        queryHistorySeries:
        - values:
          - date: 2000-01-23T04:56:07.000+00:00
            value: 6.027456183070403
          - date: 2000-01-23T04:56:07.000+00:00
            value: 6.027456183070403
          name: 0
        - values:
          - date: 2000-01-23T04:56:07.000+00:00
            value: 6.027456183070403
          - date: 2000-01-23T04:56:07.000+00:00
            value: 6.027456183070403
          name: 0
        minTime: 2000-01-23T04:56:07.000+00:00
        planChanges:
        - date: 2000-01-23T04:56:07.000+00:00
          planKey:
            queryHash: queryHash
            databaseName: databaseName
            planHash: planHash
            queryId:
              value: 0
        - date: 2000-01-23T04:56:07.000+00:00
          planKey:
            queryHash: queryHash
            databaseName: databaseName
            planHash: planHash
            queryId:
              value: 0
      properties:
        minTime:
          format: date-time
          type: string
        maxTime:
          format: date-time
          type: string
        queryHistorySeries:
          items:
            $ref: '#/components/schemas/PostgresTopQueryPropertyQueryHistorySeriesDto'
          type: array
        planChanges:
          items:
            $ref: '#/components/schemas/PostgresQueryHistoryPlanKeyDtoQueryHistoryPlanChangePointDto'
          nullable: true
          type: array
      type: object
    PostgresTopQueryPropertyPostgresQueryHistoryPlanKeyDtoQueryHistoryDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          maxTime: 2000-01-23T04:56:07.000+00:00
          queryHistorySeries:
          - values:
            - date: 2000-01-23T04:56:07.000+00:00
              value: 6.027456183070403
            - date: 2000-01-23T04:56:07.000+00:00
              value: 6.027456183070403
            name: 0
          - values:
            - date: 2000-01-23T04:56:07.000+00:00
              value: 6.027456183070403
            - date: 2000-01-23T04:56:07.000+00:00
              value: 6.027456183070403
            name: 0
          minTime: 2000-01-23T04:56:07.000+00:00
          planChanges:
          - date: 2000-01-23T04:56:07.000+00:00
            planKey:
              queryHash: queryHash
              databaseName: databaseName
              planHash: planHash
              queryId:
                value: 0
          - date: 2000-01-23T04:56:07.000+00:00
            planKey:
              queryHash: queryHash
              databaseName: databaseName
              planHash: planHash
              queryId:
                value: 0
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/PostgresTopQueryPropertyPostgresQueryHistoryPlanKeyDtoQueryHistoryDto'
      type: object
    PostgresTopQueryPropertyQueryHistorySeriesDto:
      additionalProperties: false
      example:
        values:
        - date: 2000-01-23T04:56:07.000+00:00
          value: 6.027456183070403
        - date: 2000-01-23T04:56:07.000+00:00
          value: 6.027456183070403
        name: 0
      properties:
        name:
          $ref: '#/components/schemas/PostgresTopQueryProperty'
        values:
          items:
            $ref: '#/components/schemas/QueryHistoryPointDto'
          type: array
      type: object
    PostgresWalReceiverDto:
      additionalProperties: false
      example:
        slotName: slotName
        senderPort: 2
        senderHost: senderHost
      properties:
        senderHost:
          type: string
        senderPort:
          format: int64
          type: integer
        slotName:
          type: string
      type: object
    PrincipalDto:
      additionalProperties: false
      example:
        isLastAdministrator: true
        role: role
        access: access
        name: name
        id:
          value: 0
        type: type
        allAccess: true
      properties:
        name:
          type: string
        type:
          type: string
        role:
          type: string
        access:
          type: string
        allAccess:
          type: boolean
        id:
          $ref: '#/components/schemas/IntegerIdentifier'
        isLastAdministrator:
          type: boolean
      type: object
    PrincipalDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - isLastAdministrator: true
          role: role
          access: access
          name: name
          id:
            value: 0
          type: type
          allAccess: true
        - isLastAdministrator: true
          role: role
          access: access
          name: name
          id:
            value: 0
          type: type
          allAccess: true
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/PrincipalDto'
          type: array
      type: object
    PrincipalEditorDto:
      additionalProperties: false
      example:
        role: role
        id:
          value: 0
        accessRights:
          name: name
          azureManagedInstances:
          - entityType: 0
            isAzureSqlServer: true
            isAzureManagedInstance: true
            isSqlServerInstance: true
            cir: ""
            isPostgresInstance: true
            baseMonitorName: baseMonitorName
            isAmazonRdsSqlServer: true
            childEntities:
            - null
            - null
            isLinuxMachine: true
            name: name
            isCluster: true
            selected: true
            isMachine: true
          - entityType: 0
            isAzureSqlServer: true
            isAzureManagedInstance: true
            isSqlServerInstance: true
            cir: ""
            isPostgresInstance: true
            baseMonitorName: baseMonitorName
            isAmazonRdsSqlServer: true
            childEntities:
            - null
            - null
            isLinuxMachine: true
            name: name
            isCluster: true
            selected: true
            isMachine: true
          groups:
          - null
          - null
          amazonRdsSqlServers:
          - entityType: 0
            isAzureSqlServer: true
            isAzureManagedInstance: true
            isSqlServerInstance: true
            cir: ""
            isPostgresInstance: true
            baseMonitorName: baseMonitorName
            isAmazonRdsSqlServer: true
            childEntities:
            - null
            - null
            isLinuxMachine: true
            name: name
            isCluster: true
            selected: true
            isMachine: true
          - entityType: 0
            isAzureSqlServer: true
            isAzureManagedInstance: true
            isSqlServerInstance: true
            cir: ""
            isPostgresInstance: true
            baseMonitorName: baseMonitorName
            isAmazonRdsSqlServer: true
            childEntities:
            - null
            - null
            isLinuxMachine: true
            name: name
            isCluster: true
            selected: true
            isMachine: true
          id: id
          azureSqlServers:
          - entityType: 0
            isAzureSqlServer: true
            isAzureManagedInstance: true
            isSqlServerInstance: true
            cir: ""
            isPostgresInstance: true
            baseMonitorName: baseMonitorName
            isAmazonRdsSqlServer: true
            childEntities:
            - null
            - null
            isLinuxMachine: true
            name: name
            isCluster: true
            selected: true
            isMachine: true
          - entityType: 0
            isAzureSqlServer: true
            isAzureManagedInstance: true
            isSqlServerInstance: true
            cir: ""
            isPostgresInstance: true
            baseMonitorName: baseMonitorName
            isAmazonRdsSqlServer: true
            childEntities:
            - null
            - null
            isLinuxMachine: true
            name: name
            isCluster: true
            selected: true
            isMachine: true
          baseMonitorNames:
          - baseMonitorNames
          - baseMonitorNames
          selected: true
          clusters:
          - entityType: 0
            isAzureSqlServer: true
            isAzureManagedInstance: true
            isSqlServerInstance: true
            cir: ""
            isPostgresInstance: true
            baseMonitorName: baseMonitorName
            isAmazonRdsSqlServer: true
            childEntities:
            - null
            - null
            isLinuxMachine: true
            name: name
            isCluster: true
            selected: true
            isMachine: true
          - entityType: 0
            isAzureSqlServer: true
            isAzureManagedInstance: true
            isSqlServerInstance: true
            cir: ""
            isPostgresInstance: true
            baseMonitorName: baseMonitorName
            isAmazonRdsSqlServer: true
            childEntities:
            - null
            - null
            isLinuxMachine: true
            name: name
            isCluster: true
            selected: true
            isMachine: true
          linuxMachines:
          - entityType: 0
            isAzureSqlServer: true
            isAzureManagedInstance: true
            isSqlServerInstance: true
            cir: ""
            isPostgresInstance: true
            baseMonitorName: baseMonitorName
            isAmazonRdsSqlServer: true
            childEntities:
            - null
            - null
            isLinuxMachine: true
            name: name
            isCluster: true
            selected: true
            isMachine: true
          - entityType: 0
            isAzureSqlServer: true
            isAzureManagedInstance: true
            isSqlServerInstance: true
            cir: ""
            isPostgresInstance: true
            baseMonitorName: baseMonitorName
            isAmazonRdsSqlServer: true
            childEntities:
            - null
            - null
            isLinuxMachine: true
            name: name
            isCluster: true
            selected: true
            isMachine: true
          postgreSqlInstances:
          - entityType: 0
            isAzureSqlServer: true
            isAzureManagedInstance: true
            isSqlServerInstance: true
            cir: ""
            isPostgresInstance: true
            baseMonitorName: baseMonitorName
            isAmazonRdsSqlServer: true
            childEntities:
            - null
            - null
            isLinuxMachine: true
            name: name
            isCluster: true
            selected: true
            isMachine: true
          - entityType: 0
            isAzureSqlServer: true
            isAzureManagedInstance: true
            isSqlServerInstance: true
            cir: ""
            isPostgresInstance: true
            baseMonitorName: baseMonitorName
            isAmazonRdsSqlServer: true
            childEntities:
            - null
            - null
            isLinuxMachine: true
            name: name
            isCluster: true
            selected: true
            isMachine: true
        type: 6
        username: username
      properties:
        id:
          $ref: '#/components/schemas/IntegerIdentifier'
        username:
          nullable: true
          type: string
        role:
          nullable: true
          type: string
        accessRights:
          $ref: '#/components/schemas/PrincipalEditorGroupDto'
        type:
          $ref: '#/components/schemas/PrincipalType'
      type: object
    PrincipalEditorDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          role: role
          id:
            value: 0
          accessRights:
            name: name
            azureManagedInstances:
            - entityType: 0
              isAzureSqlServer: true
              isAzureManagedInstance: true
              isSqlServerInstance: true
              cir: ""
              isPostgresInstance: true
              baseMonitorName: baseMonitorName
              isAmazonRdsSqlServer: true
              childEntities:
              - null
              - null
              isLinuxMachine: true
              name: name
              isCluster: true
              selected: true
              isMachine: true
            - entityType: 0
              isAzureSqlServer: true
              isAzureManagedInstance: true
              isSqlServerInstance: true
              cir: ""
              isPostgresInstance: true
              baseMonitorName: baseMonitorName
              isAmazonRdsSqlServer: true
              childEntities:
              - null
              - null
              isLinuxMachine: true
              name: name
              isCluster: true
              selected: true
              isMachine: true
            groups:
            - null
            - null
            amazonRdsSqlServers:
            - entityType: 0
              isAzureSqlServer: true
              isAzureManagedInstance: true
              isSqlServerInstance: true
              cir: ""
              isPostgresInstance: true
              baseMonitorName: baseMonitorName
              isAmazonRdsSqlServer: true
              childEntities:
              - null
              - null
              isLinuxMachine: true
              name: name
              isCluster: true
              selected: true
              isMachine: true
            - entityType: 0
              isAzureSqlServer: true
              isAzureManagedInstance: true
              isSqlServerInstance: true
              cir: ""
              isPostgresInstance: true
              baseMonitorName: baseMonitorName
              isAmazonRdsSqlServer: true
              childEntities:
              - null
              - null
              isLinuxMachine: true
              name: name
              isCluster: true
              selected: true
              isMachine: true
            id: id
            azureSqlServers:
            - entityType: 0
              isAzureSqlServer: true
              isAzureManagedInstance: true
              isSqlServerInstance: true
              cir: ""
              isPostgresInstance: true
              baseMonitorName: baseMonitorName
              isAmazonRdsSqlServer: true
              childEntities:
              - null
              - null
              isLinuxMachine: true
              name: name
              isCluster: true
              selected: true
              isMachine: true
            - entityType: 0
              isAzureSqlServer: true
              isAzureManagedInstance: true
              isSqlServerInstance: true
              cir: ""
              isPostgresInstance: true
              baseMonitorName: baseMonitorName
              isAmazonRdsSqlServer: true
              childEntities:
              - null
              - null
              isLinuxMachine: true
              name: name
              isCluster: true
              selected: true
              isMachine: true
            baseMonitorNames:
            - baseMonitorNames
            - baseMonitorNames
            selected: true
            clusters:
            - entityType: 0
              isAzureSqlServer: true
              isAzureManagedInstance: true
              isSqlServerInstance: true
              cir: ""
              isPostgresInstance: true
              baseMonitorName: baseMonitorName
              isAmazonRdsSqlServer: true
              childEntities:
              - null
              - null
              isLinuxMachine: true
              name: name
              isCluster: true
              selected: true
              isMachine: true
            - entityType: 0
              isAzureSqlServer: true
              isAzureManagedInstance: true
              isSqlServerInstance: true
              cir: ""
              isPostgresInstance: true
              baseMonitorName: baseMonitorName
              isAmazonRdsSqlServer: true
              childEntities:
              - null
              - null
              isLinuxMachine: true
              name: name
              isCluster: true
              selected: true
              isMachine: true
            linuxMachines:
            - entityType: 0
              isAzureSqlServer: true
              isAzureManagedInstance: true
              isSqlServerInstance: true
              cir: ""
              isPostgresInstance: true
              baseMonitorName: baseMonitorName
              isAmazonRdsSqlServer: true
              childEntities:
              - null
              - null
              isLinuxMachine: true
              name: name
              isCluster: true
              selected: true
              isMachine: true
            - entityType: 0
              isAzureSqlServer: true
              isAzureManagedInstance: true
              isSqlServerInstance: true
              cir: ""
              isPostgresInstance: true
              baseMonitorName: baseMonitorName
              isAmazonRdsSqlServer: true
              childEntities:
              - null
              - null
              isLinuxMachine: true
              name: name
              isCluster: true
              selected: true
              isMachine: true
            postgreSqlInstances:
            - entityType: 0
              isAzureSqlServer: true
              isAzureManagedInstance: true
              isSqlServerInstance: true
              cir: ""
              isPostgresInstance: true
              baseMonitorName: baseMonitorName
              isAmazonRdsSqlServer: true
              childEntities:
              - null
              - null
              isLinuxMachine: true
              name: name
              isCluster: true
              selected: true
              isMachine: true
            - entityType: 0
              isAzureSqlServer: true
              isAzureManagedInstance: true
              isSqlServerInstance: true
              cir: ""
              isPostgresInstance: true
              baseMonitorName: baseMonitorName
              isAmazonRdsSqlServer: true
              childEntities:
              - null
              - null
              isLinuxMachine: true
              name: name
              isCluster: true
              selected: true
              isMachine: true
          type: 6
          username: username
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/PrincipalEditorDto'
      type: object
    PrincipalEditorEntityTypeDto:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      format: int32
      type: integer
    PrincipalEditorGroupDto:
      additionalProperties: false
      example:
        name: name
        azureManagedInstances:
        - entityType: 0
          isAzureSqlServer: true
          isAzureManagedInstance: true
          isSqlServerInstance: true
          cir: ""
          isPostgresInstance: true
          baseMonitorName: baseMonitorName
          isAmazonRdsSqlServer: true
          childEntities:
          - null
          - null
          isLinuxMachine: true
          name: name
          isCluster: true
          selected: true
          isMachine: true
        - entityType: 0
          isAzureSqlServer: true
          isAzureManagedInstance: true
          isSqlServerInstance: true
          cir: ""
          isPostgresInstance: true
          baseMonitorName: baseMonitorName
          isAmazonRdsSqlServer: true
          childEntities:
          - null
          - null
          isLinuxMachine: true
          name: name
          isCluster: true
          selected: true
          isMachine: true
        groups:
        - null
        - null
        amazonRdsSqlServers:
        - entityType: 0
          isAzureSqlServer: true
          isAzureManagedInstance: true
          isSqlServerInstance: true
          cir: ""
          isPostgresInstance: true
          baseMonitorName: baseMonitorName
          isAmazonRdsSqlServer: true
          childEntities:
          - null
          - null
          isLinuxMachine: true
          name: name
          isCluster: true
          selected: true
          isMachine: true
        - entityType: 0
          isAzureSqlServer: true
          isAzureManagedInstance: true
          isSqlServerInstance: true
          cir: ""
          isPostgresInstance: true
          baseMonitorName: baseMonitorName
          isAmazonRdsSqlServer: true
          childEntities:
          - null
          - null
          isLinuxMachine: true
          name: name
          isCluster: true
          selected: true
          isMachine: true
        id: id
        azureSqlServers:
        - entityType: 0
          isAzureSqlServer: true
          isAzureManagedInstance: true
          isSqlServerInstance: true
          cir: ""
          isPostgresInstance: true
          baseMonitorName: baseMonitorName
          isAmazonRdsSqlServer: true
          childEntities:
          - null
          - null
          isLinuxMachine: true
          name: name
          isCluster: true
          selected: true
          isMachine: true
        - entityType: 0
          isAzureSqlServer: true
          isAzureManagedInstance: true
          isSqlServerInstance: true
          cir: ""
          isPostgresInstance: true
          baseMonitorName: baseMonitorName
          isAmazonRdsSqlServer: true
          childEntities:
          - null
          - null
          isLinuxMachine: true
          name: name
          isCluster: true
          selected: true
          isMachine: true
        baseMonitorNames:
        - baseMonitorNames
        - baseMonitorNames
        selected: true
        clusters:
        - entityType: 0
          isAzureSqlServer: true
          isAzureManagedInstance: true
          isSqlServerInstance: true
          cir: ""
          isPostgresInstance: true
          baseMonitorName: baseMonitorName
          isAmazonRdsSqlServer: true
          childEntities:
          - null
          - null
          isLinuxMachine: true
          name: name
          isCluster: true
          selected: true
          isMachine: true
        - entityType: 0
          isAzureSqlServer: true
          isAzureManagedInstance: true
          isSqlServerInstance: true
          cir: ""
          isPostgresInstance: true
          baseMonitorName: baseMonitorName
          isAmazonRdsSqlServer: true
          childEntities:
          - null
          - null
          isLinuxMachine: true
          name: name
          isCluster: true
          selected: true
          isMachine: true
        linuxMachines:
        - entityType: 0
          isAzureSqlServer: true
          isAzureManagedInstance: true
          isSqlServerInstance: true
          cir: ""
          isPostgresInstance: true
          baseMonitorName: baseMonitorName
          isAmazonRdsSqlServer: true
          childEntities:
          - null
          - null
          isLinuxMachine: true
          name: name
          isCluster: true
          selected: true
          isMachine: true
        - entityType: 0
          isAzureSqlServer: true
          isAzureManagedInstance: true
          isSqlServerInstance: true
          cir: ""
          isPostgresInstance: true
          baseMonitorName: baseMonitorName
          isAmazonRdsSqlServer: true
          childEntities:
          - null
          - null
          isLinuxMachine: true
          name: name
          isCluster: true
          selected: true
          isMachine: true
        postgreSqlInstances:
        - entityType: 0
          isAzureSqlServer: true
          isAzureManagedInstance: true
          isSqlServerInstance: true
          cir: ""
          isPostgresInstance: true
          baseMonitorName: baseMonitorName
          isAmazonRdsSqlServer: true
          childEntities:
          - null
          - null
          isLinuxMachine: true
          name: name
          isCluster: true
          selected: true
          isMachine: true
        - entityType: 0
          isAzureSqlServer: true
          isAzureManagedInstance: true
          isSqlServerInstance: true
          cir: ""
          isPostgresInstance: true
          baseMonitorName: baseMonitorName
          isAmazonRdsSqlServer: true
          childEntities:
          - null
          - null
          isLinuxMachine: true
          name: name
          isCluster: true
          selected: true
          isMachine: true
      properties:
        name:
          nullable: true
          type: string
        selected:
          nullable: true
          type: boolean
        groups:
          items:
            $ref: '#/components/schemas/PrincipalEditorGroupDto'
          nullable: true
          type: array
        clusters:
          items:
            $ref: '#/components/schemas/PrincipalEditorMonitoredEntityDto'
          nullable: true
          type: array
        azureSqlServers:
          items:
            $ref: '#/components/schemas/PrincipalEditorMonitoredEntityDto'
          nullable: true
          type: array
        amazonRdsSqlServers:
          items:
            $ref: '#/components/schemas/PrincipalEditorMonitoredEntityDto'
          nullable: true
          type: array
        azureManagedInstances:
          items:
            $ref: '#/components/schemas/PrincipalEditorMonitoredEntityDto'
          nullable: true
          type: array
        linuxMachines:
          items:
            $ref: '#/components/schemas/PrincipalEditorMonitoredEntityDto'
          nullable: true
          type: array
        postgreSqlInstances:
          items:
            $ref: '#/components/schemas/PrincipalEditorMonitoredEntityDto'
          nullable: true
          type: array
        id:
          nullable: true
          type: string
        baseMonitorNames:
          items:
            type: string
          nullable: true
          type: array
      type: object
    PrincipalEditorMonitoredEntityDto:
      additionalProperties: false
      example:
        entityType: 0
        isAzureSqlServer: true
        isAzureManagedInstance: true
        isSqlServerInstance: true
        cir: ""
        isPostgresInstance: true
        baseMonitorName: baseMonitorName
        isAmazonRdsSqlServer: true
        childEntities:
        - null
        - null
        isLinuxMachine: true
        name: name
        isCluster: true
        selected: true
        isMachine: true
      properties:
        name:
          nullable: true
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        selected:
          nullable: true
          type: boolean
        entityType:
          $ref: '#/components/schemas/PrincipalEditorEntityTypeDto'
        baseMonitorName:
          nullable: true
          type: string
        childEntities:
          items:
            $ref: '#/components/schemas/PrincipalEditorMonitoredEntityDto'
          nullable: true
          type: array
        isMachine:
          readOnly: true
          type: boolean
        isCluster:
          readOnly: true
          type: boolean
        isAzureSqlServer:
          readOnly: true
          type: boolean
        isAzureManagedInstance:
          readOnly: true
          type: boolean
        isAmazonRdsSqlServer:
          readOnly: true
          type: boolean
        isLinuxMachine:
          readOnly: true
          type: boolean
        isSqlServerInstance:
          readOnly: true
          type: boolean
        isPostgresInstance:
          readOnly: true
          type: boolean
      type: object
    PrincipalPermissionDto:
      additionalProperties: false
      example:
        majorId:
          value: 0
        granteeId:
          value: 0
        minorId:
          value: 0
        objectName: objectName
        state: state
        grantorId:
          value: 0
        type: type
        class:
          value: 0
      properties:
        class:
          $ref: '#/components/schemas/IntegerIdentifier'
        majorId:
          $ref: '#/components/schemas/IntegerIdentifier'
        minorId:
          $ref: '#/components/schemas/IntegerIdentifier'
        granteeId:
          $ref: '#/components/schemas/IntegerIdentifier'
        grantorId:
          $ref: '#/components/schemas/IntegerIdentifier'
        type:
          type: string
        state:
          type: string
        objectName:
          nullable: true
          type: string
      required:
      - state
      - type
      type: object
    PrincipalRole:
      enum:
      - 1
      - 2
      - 3
      - 4
      format: int32
      type: integer
    PrincipalType:
      enum:
      - 1
      - 2
      format: int32
      type: integer
    PrincipalTypeDto:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    ProblemDetails:
      additionalProperties: {}
      example:
        instance: instance
        detail: detail
        type: type
        title: title
        status: 0
      properties:
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
      type: object
    PropertiesDto:
      additionalProperties: false
      example:
        installationDirectory: installationDirectory
        maxNumberErrorLogFiles: 2
        auditLevel: 7
        forceEncryption: true
        customerExperienceFeedbackEnabled: true
        customerExperienceAuditDirectory: customerExperienceAuditDirectory
        edition: edition
        customerExperienceErrorReportingEnabled: true
        hideInstance: true
        productVersionNumber: productVersionNumber
        productVersion: productVersion
        productLevel: productLevel
        isClustered: true
        certificateThumbprint: certificateThumbprint
        isSingleUser: true
      properties:
        forceEncryption:
          nullable: true
          type: boolean
        certificateThumbprint:
          nullable: true
          type: string
        installationDirectory:
          nullable: true
          type: string
        customerExperienceFeedbackEnabled:
          nullable: true
          type: boolean
        customerExperienceErrorReportingEnabled:
          nullable: true
          type: boolean
        customerExperienceAuditDirectory:
          nullable: true
          type: string
        isClustered:
          nullable: true
          type: boolean
        isSingleUser:
          nullable: true
          type: boolean
        hideInstance:
          nullable: true
          type: boolean
        productLevel:
          nullable: true
          type: string
        productVersion:
          nullable: true
          type: string
        productVersionNumber:
          nullable: true
          type: string
        edition:
          nullable: true
          type: string
        maxNumberErrorLogFiles:
          format: int64
          nullable: true
          type: integer
        auditLevel:
          format: int64
          nullable: true
          type: integer
      type: object
    PropertyName:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    QualifiedAlertIdDto:
      additionalProperties: false
      example:
        baseMonitorName: baseMonitorName
        alertId:
          value: 0
      properties:
        alertId:
          $ref: '#/components/schemas/IntegerIdentifier'
        baseMonitorName:
          nullable: true
          type: string
      type: object
    QualifiedChannelName:
      additionalProperties: false
      example:
        parent: null
        tailQualifiedChannelName: null
        depth: 6
        isRoot: true
        qualifiedSubChannelNames:
        - null
        - null
        headChannelName:
          name: name
        subChannelNames:
        - name: name
        - name: name
        channelName:
          name: name
        qualifiedChannelNames:
        - null
        - null
      properties:
        isRoot:
          readOnly: true
          type: boolean
        depth:
          format: int32
          readOnly: true
          type: integer
        parent:
          $ref: '#/components/schemas/QualifiedChannelName'
        channelName:
          $ref: '#/components/schemas/ChannelName'
        headChannelName:
          $ref: '#/components/schemas/ChannelName'
        tailQualifiedChannelName:
          $ref: '#/components/schemas/QualifiedChannelName'
        qualifiedChannelNames:
          items:
            $ref: '#/components/schemas/QualifiedChannelName'
          readOnly: true
          type: array
        qualifiedSubChannelNames:
          items:
            $ref: '#/components/schemas/QualifiedChannelName'
          readOnly: true
          type: array
        subChannelNames:
          items:
            $ref: '#/components/schemas/ChannelName'
          readOnly: true
          type: array
      type: object
    QueryHistoryPointDto:
      additionalProperties: false
      example:
        date: 2000-01-23T04:56:07.000+00:00
        value: 6.027456183070403
      properties:
        date:
          format: date-time
          type: string
        value:
          format: double
          type: number
      type: object
    QueryInstanceDto:
      additionalProperties: false
      example:
        databaseName: databaseName
        programName: programName
        loginName: loginName
        queryText: queryText
        eventName: eventName
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
        logicalReads: 0
        writes: 6
      properties:
        startTime:
          format: date-time
          type: string
        endTime:
          format: date-time
          type: string
        queryText:
          nullable: true
          type: string
        programName:
          nullable: true
          type: string
        loginName:
          nullable: true
          type: string
        databaseName:
          nullable: true
          type: string
        logicalReads:
          format: int64
          type: integer
        writes:
          format: int64
          type: integer
        eventName:
          nullable: true
          type: string
      type: object
    QueryInstanceDtoIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - databaseName: databaseName
          programName: programName
          loginName: loginName
          queryText: queryText
          eventName: eventName
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          logicalReads: 0
          writes: 6
        - databaseName: databaseName
          programName: programName
          loginName: loginName
          queryText: queryText
          eventName: eventName
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
          logicalReads: 0
          writes: 6
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/QueryInstanceDto'
          type: array
      type: object
    QueryPlanKeysDto:
      additionalProperties: false
      example:
        databaseName: databaseName
        planHandle: planHandle
        createDate: 2000-01-23T04:56:07.000+00:00
      properties:
        planHandle:
          nullable: true
          type: string
        createDate:
          format: date-time
          type: string
        databaseName:
          nullable: true
          type: string
      type: object
    QueryRecommendationDto:
      additionalProperties: false
      example:
        score: 6
        queryRecommendationType: 0
      properties:
        queryRecommendationType:
          $ref: '#/components/schemas/QueryRecommendationType'
        score:
          format: int32
          readOnly: true
          type: integer
      type: object
    QueryRecommendationDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - score: 6
          queryRecommendationType: 0
        - score: 6
          queryRecommendationType: 0
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/QueryRecommendationDto'
          type: array
      type: object
    QueryRecommendationDtoQueryRecommendationCollectionDto:
      additionalProperties: false
      example:
        planHandle: planHandle
        createDate: 2000-01-23T04:56:07.000+00:00
        queryRecommendations:
        - score: 6
          queryRecommendationType: 0
        - score: 6
          queryRecommendationType: 0
      properties:
        planHandle:
          type: string
        createDate:
          format: date-time
          type: string
        queryRecommendations:
          items:
            $ref: '#/components/schemas/QueryRecommendationDto'
          type: array
      type: object
    QueryRecommendationDtoQueryRecommendationCollectionDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - planHandle: planHandle
          createDate: 2000-01-23T04:56:07.000+00:00
          queryRecommendations:
          - score: 6
            queryRecommendationType: 0
          - score: 6
            queryRecommendationType: 0
        - planHandle: planHandle
          createDate: 2000-01-23T04:56:07.000+00:00
          queryRecommendations:
          - score: 6
            queryRecommendationType: 0
          - score: 6
            queryRecommendationType: 0
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/QueryRecommendationDtoQueryRecommendationCollectionDto'
          type: array
      type: object
    QueryRecommendationType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      format: int32
      type: integer
    QueryRecommendationsRequestDto:
      additionalProperties: false
      example:
        queryRecommendationKeys:
        - databaseName: databaseName
          planHandle: planHandle
          createDate: 2000-01-23T04:56:07.000+00:00
        - databaseName: databaseName
          planHandle: planHandle
          createDate: 2000-01-23T04:56:07.000+00:00
        endDate: 2000-01-23T04:56:07.000+00:00
        cir:
          rootChannelInstanceRef: ""
          channelKey:
            keys:
              key: ""
            propertyNames:
            - name: name
            - name: name
            count: 1
          channelRef:
            parent: ""
            depth: 0
            isRoot: true
            leadingChannelRefs:
            - null
            - null
            qualifiedChannelName:
              parent: null
              tailQualifiedChannelName: null
              depth: 6
              isRoot: true
              qualifiedSubChannelNames:
              - null
              - null
              headChannelName:
                name: name
              subChannelNames:
              - name: name
              - name: name
              channelName:
                name: name
              qualifiedChannelNames:
              - null
              - null
            channelName:
              name: name
          channelInstanceRefs:
          - ""
          - ""
          subChannelInstanceRefs:
          - ""
          - ""
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        cir:
          $ref: '#/components/schemas/_SqlInstanceChannelInstanceRef'
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        queryRecommendationKeys:
          items:
            $ref: '#/components/schemas/QueryPlanKeysDto'
          nullable: true
          type: array
      type: object
    RdsDetectionOptionsDto:
      additionalProperties: false
      example:
        secretKey: secretKey
        accessKey: accessKey
        region: region
      properties:
        accessKey:
          nullable: true
          type: string
        secretKey:
          nullable: true
          type: string
        region:
          nullable: true
          type: string
      type: object
    RecentAlertCommentDto:
      additionalProperties: false
      example:
        author: author
        commentId:
          value: 0
        alertId:
          value: 0
        datePosted: 6
        commentText: commentText
      properties:
        alertId:
          $ref: '#/components/schemas/IntegerIdentifier'
        commentId:
          $ref: '#/components/schemas/IntegerIdentifier'
        author:
          nullable: true
          type: string
        commentText:
          nullable: true
          type: string
        datePosted:
          format: int64
          type: integer
      type: object
    RecentAlertDetailsDto:
      additionalProperties: false
      example:
        occurrences:
        - displayName: displayName
          startTime: 1
          alertId:
            value: 0
          status: status
          commentCount: 5
        - displayName: displayName
          startTime: 1
          alertId:
            value: 0
          status: status
          commentCount: 5
        fullAlertTypeSerialised: fullAlertTypeSerialised
        comments:
        - author: author
          commentId:
            value: 0
          alertId:
            value: 0
          datePosted: 6
          commentText: commentText
        - author: author
          commentId:
            value: 0
          alertId:
            value: 0
          datePosted: 6
          commentText: commentText
        startTimeTicks: 0
        alertCir: ""
        descriptionUrl: descriptionUrl
        detailsHtml: detailsHtml
        alertId:
          value: 0
        text: text
        cleared: true
        status: status
      properties:
        alertId:
          $ref: '#/components/schemas/IntegerIdentifier'
        startTimeTicks:
          format: int64
          type: integer
        status:
          nullable: true
          type: string
        text:
          nullable: true
          type: string
        alertCir:
          format: group-or-entity-id
          nullable: true
          type: GroupOrCir
        fullAlertTypeSerialised:
          nullable: true
          type: string
        cleared:
          type: boolean
        detailsHtml:
          nullable: true
          type: string
        descriptionUrl:
          nullable: true
          type: string
        comments:
          items:
            $ref: '#/components/schemas/RecentAlertCommentDto'
          nullable: true
          type: array
        occurrences:
          items:
            $ref: '#/components/schemas/RecentAlertOccurrenceDto'
          nullable: true
          type: array
      type: object
    RecentAlertDetailsDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          occurrences:
          - displayName: displayName
            startTime: 1
            alertId:
              value: 0
            status: status
            commentCount: 5
          - displayName: displayName
            startTime: 1
            alertId:
              value: 0
            status: status
            commentCount: 5
          fullAlertTypeSerialised: fullAlertTypeSerialised
          comments:
          - author: author
            commentId:
              value: 0
            alertId:
              value: 0
            datePosted: 6
            commentText: commentText
          - author: author
            commentId:
              value: 0
            alertId:
              value: 0
            datePosted: 6
            commentText: commentText
          startTimeTicks: 0
          alertCir: ""
          descriptionUrl: descriptionUrl
          detailsHtml: detailsHtml
          alertId:
            value: 0
          text: text
          cleared: true
          status: status
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/RecentAlertDetailsDto'
      type: object
    RecentAlertDto:
      additionalProperties: false
      example:
        owner: owner
        startTime: 6
        worstLevel: 5
        alertId:
          value: 0
        text: text
        endTime: 1
        alertState: alertState
        alertTime: 5
        cleared: true
        cir: cir
        subText: subText
        status: status
      properties:
        alertId:
          $ref: '#/components/schemas/IntegerIdentifier'
        status:
          nullable: true
          type: string
        text:
          nullable: true
          type: string
        cleared:
          type: boolean
        startTime:
          format: int64
          type: integer
        endTime:
          format: int64
          nullable: true
          type: integer
        worstLevel:
          $ref: '#/components/schemas/Severity'
        cir:
          nullable: true
          type: string
        owner:
          nullable: true
          type: string
        alertState:
          nullable: true
          type: string
        alertTime:
          format: int64
          type: integer
        subText:
          nullable: true
          type: string
      type: object
    RecentAlertOccurrenceDto:
      additionalProperties: false
      example:
        displayName: displayName
        startTime: 1
        alertId:
          value: 0
        status: status
        commentCount: 5
      properties:
        alertId:
          $ref: '#/components/schemas/IntegerIdentifier'
        displayName:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        startTime:
          format: int64
          type: integer
        commentCount:
          format: int32
          type: integer
      type: object
    ReleaseTimelineViewModel:
      additionalProperties: false
      example:
        latestUpdateDownloadUrl: latestUpdateDownloadUrl
        releases:
        - notes:
          - notes
          - notes
          version: version
          versionStatus: versionStatus
        - notes:
          - notes
          - notes
          version: version
          versionStatus: versionStatus
      properties:
        releases:
          items:
            $ref: '#/components/schemas/ReleaseViewModel'
          type: array
        latestUpdateDownloadUrl:
          type: string
      required:
      - latestUpdateDownloadUrl
      - releases
      type: object
    ReleaseTimelineViewModelJSendSuccess:
      additionalProperties: false
      example:
        data:
          latestUpdateDownloadUrl: latestUpdateDownloadUrl
          releases:
          - notes:
            - notes
            - notes
            version: version
            versionStatus: versionStatus
          - notes:
            - notes
            - notes
            version: version
            versionStatus: versionStatus
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/ReleaseTimelineViewModel'
      type: object
    ReleaseViewModel:
      additionalProperties: false
      example:
        notes:
        - notes
        - notes
        version: version
        versionStatus: versionStatus
      properties:
        version:
          type: string
        notes:
          items:
            type: string
          type: array
        versionStatus:
          type: string
      required:
      - notes
      - version
      - versionStatus
      type: object
    RemoveEntityRequest:
      additionalProperties: false
      example:
        fullyQualifiedNames:
        - fullyQualifiedNames
        - fullyQualifiedNames
        ids:
        - ids
        - ids
        deleteAllAssociatedData: true
      properties:
        ids:
          items:
            type: string
          nullable: true
          type: array
        fullyQualifiedNames:
          items:
            type: string
          nullable: true
          type: array
        deleteAllAssociatedData:
          type: boolean
      type: object
    RemoveUninstalledInstanceRequest:
      additionalProperties: false
      example:
        fullyQualifiedNames:
        - fullyQualifiedNames
        - fullyQualifiedNames
        ids:
        - ids
        - ids
        deleteAllAssociatedData: true
      properties:
        ids:
          items:
            type: string
          nullable: true
          type: array
        fullyQualifiedNames:
          items:
            type: string
          nullable: true
          type: array
        deleteAllAssociatedData:
          type: boolean
      type: object
    RetryEntityRequest:
      additionalProperties: false
      example:
        entityIds:
        - entityIds
        - entityIds
      properties:
        entityIds:
          items:
            type: string
          nullable: true
          type: array
      type: object
    RootMonitoredEntityType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15
      format: int32
      type: integer
    RpcStatusDto:
      additionalProperties: false
      example:
        isEnabled: true
      properties:
        isEnabled:
          type: boolean
      type: object
    RpcStatusDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          isEnabled: true
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/RpcStatusDto'
      type: object
    SaveAliasRequest:
      additionalProperties: false
      example:
        channelInstanceRef: ""
        alias: alias
      properties:
        alias:
          nullable: true
          type: string
        channelInstanceRef:
          format: entity-id
          type: ChannelInstanceRef
      required:
      - alias
      - channelInstanceRef
      type: object
    ScheduleFrequencyDto:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    ScheduleSetPositionDto:
      enum:
      - 1
      - 2
      - 3
      - 4
      - -1
      format: int32
      type: integer
    ScriptExecutorType:
      enum:
      - 1
      format: int32
      type: integer
    ScriptSettingsDto:
      additionalProperties: false
      example:
        enable: true
        scriptType: 7
        scriptText: scriptText
      properties:
        enable:
          type: boolean
        scriptText:
          nullable: true
          type: string
        scriptType:
          $ref: '#/components/schemas/ScriptExecutorType'
      type: object
    SelectDatabasesAzureSqlServerModel:
      additionalProperties: false
      example:
        sqlServerConnectionProperties:
          executionTimeout: 2
          networkPacketSize: 5
          trustServerCertificate: true
          connectionTimeout: 5
          networkProtocol: 6
          portNumber: 1
          encryptConnection: true
        azureSqlServerName: azureSqlServerName
        azureCredentials:
          password: password
          decryptionFailed: true
          userName: userName
          authenticationMode: 0
      properties:
        azureSqlServerName:
          nullable: true
          type: string
        azureCredentials:
          $ref: '#/components/schemas/AzureCredentialsModel'
        sqlServerConnectionProperties:
          $ref: '#/components/schemas/SqlServerConnectionPropertiesModel'
      type: object
    SentEditCredentialsRequest:
      additionalProperties: false
      example:
        credentials:
          windowsConnectionProperties:
            wmiConnectionMethod: 6
            autoDetectClusterName: true
            encodePortInServicePrincipalNameForWinRM: true
          postgresCredentials:
            entraServicePrincipalCredentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            password: password
            database: database
            iamRoleArn: iamRoleArn
            decryptionFailed: true
            userName: userName
            iamAccessKey: iamAccessKey
            iamSecretKey: iamSecretKey
            authenticationMode: 1
            iamRegion: iamRegion
          linuxMachineCredentials:
            password: password
            sshAuthenticationType: 0
            decryptionFailed: true
            userName: userName
            sshPrivateKeyId: sshPrivateKeyId
          sqlServerConnectionProperties:
            executionTimeout: 2
            networkPacketSize: 5
            trustServerCertificate: true
            connectionTimeout: 5
            networkProtocol: 6
            portNumber: 1
            encryptConnection: true
          amazonApiCredentials:
            secretKey: secretKey
            accessKey: accessKey
            roleArn: roleArn
            decryptionFailed: true
            region: region
            dbIdentifier: dbIdentifier
            authenticationMode: 6
          sqlServerCredentials:
            password: password
            isBaseMonitorAccount: true
            isSameAsWindowsCredentials: true
            decryptionFailed: true
            userName: userName
            authenticationMode: 6
          azureCredentials:
            password: password
            decryptionFailed: true
            userName: userName
            authenticationMode: 0
          mySqlCredentials:
            password: password
            decryptionFailed: true
            userName: userName
            authenticationMode: 2
          windowsMachineCredentials:
            password: password
            isBaseMonitorAccount: true
            decryptionFailed: true
            userName: userName
          oracleCredentials:
            password: password
            decryptionFailed: true
            userName: userName
            authenticationMode: 5
          azureApiCredentials:
            servicePrincipalCredentialsId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            authenticationMode: 7
          mongoDbCredentials:
            password: password
            decryptionFailed: true
            userName: userName
            authenticationMode: 5
        editEntityType: ""
        entityIds:
        - entityIds
        - entityIds
        sqlServerIds:
        - sqlServerIds
        - sqlServerIds
      properties:
        entityIds:
          items:
            type: string
          nullable: true
          type: array
        sqlServerIds:
          items:
            type: string
          nullable: true
          type: array
        editEntityType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
        credentials:
          $ref: '#/components/schemas/AllCredentialsModel'
      type: object
    ServerConfigResult:
      additionalProperties: false
      example:
        lastRestart: lastRestart
        agent:
          running: 0
          total: 6
        memory: memory
        dataUnavailableMessage: dataUnavailableMessage
        clustered: clustered
        edition: edition
        sqlService:
          running: 0
          total: 6
        availability: availability
        monitoring: monitoring
        operatingSystem: operatingSystem
        sqlServerVersion: sqlServerVersion
        monitoringClass: monitoringClass
        virtualized: virtualized
        clusterName: clusterName
        browser: browser
        integration: integration
        collation: collation
      properties:
        clusterName:
          nullable: true
          type: string
        sqlServerVersion:
          nullable: true
          type: string
        edition:
          nullable: true
          type: string
        collation:
          nullable: true
          type: string
        operatingSystem:
          nullable: true
          type: string
        memory:
          nullable: true
          type: string
        clustered:
          nullable: true
          type: string
        virtualized:
          nullable: true
          type: string
        monitoring:
          nullable: true
          type: string
        monitoringClass:
          nullable: true
          type: string
        availability:
          nullable: true
          type: string
        lastRestart:
          nullable: true
          type: string
        integration:
          nullable: true
          type: string
        browser:
          nullable: true
          type: string
        sqlService:
          $ref: '#/components/schemas/ServiceCountSummaryDto'
        agent:
          $ref: '#/components/schemas/ServiceCountSummaryDto'
        dataUnavailableMessage:
          nullable: true
          type: string
      type: object
    ServerConfigResultJSendSuccess:
      additionalProperties: false
      example:
        data:
          lastRestart: lastRestart
          agent:
            running: 0
            total: 6
          memory: memory
          dataUnavailableMessage: dataUnavailableMessage
          clustered: clustered
          edition: edition
          sqlService:
            running: 0
            total: 6
          availability: availability
          monitoring: monitoring
          operatingSystem: operatingSystem
          sqlServerVersion: sqlServerVersion
          monitoringClass: monitoringClass
          virtualized: virtualized
          clusterName: clusterName
          browser: browser
          integration: integration
          collation: collation
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/ServerConfigResult'
      type: object
    ServerConfigurationDto:
      additionalProperties: false
      example:
        traceFlags:
        - value: 9
        - value: 9
        displayName: displayName
        entityType: ""
        mirroringEndpoints:
        - encryptionEnabled: true
          role: role
          name: name
          encryptionAlgorithm: encryptionAlgorithm
        - encryptionEnabled: true
          role: role
          name: name
          encryptionAlgorithm: encryptionAlgorithm
        overviewUrl: overviewUrl
        configurationOptions:
          options:
            key: null
        monitoredEntityState: 1
        services:
        - sqlServiceType: 6
          startUserName: startUserName
          startup: startup
          state: state
        - sqlServiceType: 6
          startUserName: startUserName
          startup: startup
          state: state
        machineName: machineName
        network:
          sharedMemoryEnabled: true
          tcpListenAll: true
          tcpIpEnabled: true
          namedPipesEnabled: true
          tcpEndpoints:
          - dynamicPorts: 5
            port: 5
            endpointId: endpointId
            ipAddress: ipAddress
            active: true
            enabled: true
          - dynamicPorts: 5
            port: 5
            endpointId: endpointId
            ipAddress: ipAddress
            active: true
            enabled: true
        tags:
        - name: name
        - name: name
        baseMonitorName: baseMonitorName
        serverCir: serverCir
        clusterName: clusterName
        name: name
        machineNames:
        - machineNames
        - machineNames
        properties:
          installationDirectory: installationDirectory
          maxNumberErrorLogFiles: 2
          auditLevel: 7
          forceEncryption: true
          customerExperienceFeedbackEnabled: true
          customerExperienceAuditDirectory: customerExperienceAuditDirectory
          edition: edition
          customerExperienceErrorReportingEnabled: true
          hideInstance: true
          productVersionNumber: productVersionNumber
          productVersion: productVersion
          productLevel: productLevel
          isClustered: true
          certificateThumbprint: certificateThumbprint
          isSingleUser: true
        group: group
      properties:
        name:
          type: string
        group:
          type: string
        clusterName:
          type: string
        machineName:
          type: string
        displayName:
          type: string
        baseMonitorName:
          type: string
        serverCir:
          type: string
        overviewUrl:
          nullable: true
          type: string
        monitoredEntityState:
          $ref: '#/components/schemas/MonitoredEntityStatusCategory'
        entityType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
        configurationOptions:
          $ref: '#/components/schemas/ConfigurationOptionsDto'
        services:
          items:
            $ref: '#/components/schemas/ServiceDto'
          type: array
        network:
          $ref: '#/components/schemas/NetworkDto'
        properties:
          $ref: '#/components/schemas/PropertiesDto'
        mirroringEndpoints:
          items:
            $ref: '#/components/schemas/MirroringEndpointDto'
          type: array
        traceFlags:
          items:
            $ref: '#/components/schemas/TraceFlagDto'
          type: array
        machineNames:
          items:
            type: string
          type: array
        tags:
          items:
            $ref: '#/components/schemas/TagDto'
          type: array
      type: object
    ServerNameAndUrlDto:
      additionalProperties: false
      example:
        severity: null
        displayName: displayName
        entityType: ""
        fullName: fullName
        cir: ""
      properties:
        fullName:
          nullable: true
          type: string
        displayName:
          nullable: true
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        severity:
          $ref: '#/components/schemas/MonitoredObjectSeverityDto'
        entityType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
      type: object
    ServerOverviewAlertsFeedModelDto:
      additionalProperties: false
      example:
        graphAlerts:
        - owner: owner
          startTime: 6
          worstLevel: 5
          alertId:
            value: 0
          text: text
          endTime: 1
          alertState: alertState
          alertTime: 5
          cleared: true
          cir: cir
          subText: subText
          status: status
        - owner: owner
          startTime: 6
          worstLevel: 5
          alertId:
            value: 0
          text: text
          endTime: 1
          alertState: alertState
          alertTime: 5
          cleared: true
          cir: cir
          subText: subText
          status: status
      properties:
        graphAlerts:
          items:
            $ref: '#/components/schemas/RecentAlertDto'
          nullable: true
          type: array
      type: object
    ServerOverviewAlertsFeedModelDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          graphAlerts:
          - owner: owner
            startTime: 6
            worstLevel: 5
            alertId:
              value: 0
            text: text
            endTime: 1
            alertState: alertState
            alertTime: 5
            cleared: true
            cir: cir
            subText: subText
            status: status
          - owner: owner
            startTime: 6
            worstLevel: 5
            alertId:
              value: 0
            text: text
            endTime: 1
            alertState: alertState
            alertTime: 5
            cleared: true
            cir: cir
            subText: subText
            status: status
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/ServerOverviewAlertsFeedModelDto'
      type: object
    ServerOverviewErrorLogModel:
      additionalProperties: false
      example:
        total: 0
        errorLogs:
        - date: 2000-01-23T04:56:07.000+00:00
          process: process
          text: text
        - date: 2000-01-23T04:56:07.000+00:00
          process: process
          text: text
      properties:
        errorLogs:
          items:
            $ref: '#/components/schemas/ErrorLog'
          nullable: true
          type: array
        total:
          format: int32
          type: integer
      type: object
    ServerOverviewErrorLogModelJSendSuccess:
      additionalProperties: false
      example:
        data:
          total: 0
          errorLogs:
          - date: 2000-01-23T04:56:07.000+00:00
            process: process
            text: text
          - date: 2000-01-23T04:56:07.000+00:00
            process: process
            text: text
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/ServerOverviewErrorLogModel'
      type: object
    ServerOverviewMongoDbErrorLogDto:
      additionalProperties: false
      example:
        total: 0
        errorLogs:
        - sequenceNumber:
            value: 0
          component: component
          logDate: 2000-01-23T04:56:07.000+00:00
          context: context
          attributes: attributes
          id:
            value: 0
          severityCode: severityCode
          message: message
        - sequenceNumber:
            value: 0
          component: component
          logDate: 2000-01-23T04:56:07.000+00:00
          context: context
          attributes: attributes
          id:
            value: 0
          severityCode: severityCode
          message: message
      properties:
        errorLogs:
          items:
            $ref: '#/components/schemas/MongoDbErrorLogDto'
          nullable: true
          type: array
        total:
          format: int32
          type: integer
      type: object
    ServerOverviewMongoDbErrorLogDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          total: 0
          errorLogs:
          - sequenceNumber:
              value: 0
            component: component
            logDate: 2000-01-23T04:56:07.000+00:00
            context: context
            attributes: attributes
            id:
              value: 0
            severityCode: severityCode
            message: message
          - sequenceNumber:
              value: 0
            component: component
            logDate: 2000-01-23T04:56:07.000+00:00
            context: context
            attributes: attributes
            id:
              value: 0
            severityCode: severityCode
            message: message
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/ServerOverviewMongoDbErrorLogDto'
      type: object
    ServerOverviewMySqlErrorLogDto:
      additionalProperties: false
      example:
        total: 0
        errorLogs:
        - threadId: threadId
          errorText: errorText
          subSystem: subSystem
          logged: 2000-01-23T04:56:07.000+00:00
          errorCode: errorCode
          priority: priority
        - threadId: threadId
          errorText: errorText
          subSystem: subSystem
          logged: 2000-01-23T04:56:07.000+00:00
          errorCode: errorCode
          priority: priority
      properties:
        errorLogs:
          items:
            $ref: '#/components/schemas/MySqlErrorLogDto'
          nullable: true
          type: array
        total:
          format: int32
          type: integer
      type: object
    ServerOverviewMySqlErrorLogDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          total: 0
          errorLogs:
          - threadId: threadId
            errorText: errorText
            subSystem: subSystem
            logged: 2000-01-23T04:56:07.000+00:00
            errorCode: errorCode
            priority: priority
          - threadId: threadId
            errorText: errorText
            subSystem: subSystem
            logged: 2000-01-23T04:56:07.000+00:00
            errorCode: errorCode
            priority: priority
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/ServerOverviewMySqlErrorLogDto'
      type: object
    ServerOverviewOracleErrorLogDto:
      additionalProperties: false
      example:
        total: 0
        errorLogs:
        - messageText: messageText
          logDate: 2000-01-23T04:56:07.000+00:00
          messageType: messageType
          processId: processId
          containerName: containerName
          messageLevel: messageLevel
        - messageText: messageText
          logDate: 2000-01-23T04:56:07.000+00:00
          messageType: messageType
          processId: processId
          containerName: containerName
          messageLevel: messageLevel
      properties:
        errorLogs:
          items:
            $ref: '#/components/schemas/OracleErrorLogDto'
          nullable: true
          type: array
        total:
          format: int32
          type: integer
      type: object
    ServerOverviewOracleErrorLogDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          total: 0
          errorLogs:
          - messageText: messageText
            logDate: 2000-01-23T04:56:07.000+00:00
            messageType: messageType
            processId: processId
            containerName: containerName
            messageLevel: messageLevel
          - messageText: messageText
            logDate: 2000-01-23T04:56:07.000+00:00
            messageType: messageType
            processId: processId
            containerName: containerName
            messageLevel: messageLevel
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/ServerOverviewOracleErrorLogDto'
      type: object
    ServerOverviewPostgresErrorLogDto:
      additionalProperties: false
      example:
        total: 0
        errorLogs:
        - processId:
            value: 0
          errorSeverity: errorSeverity
          message: message
          logTime: 2000-01-23T04:56:07.000+00:00
        - processId:
            value: 0
          errorSeverity: errorSeverity
          message: message
          logTime: 2000-01-23T04:56:07.000+00:00
      properties:
        errorLogs:
          items:
            $ref: '#/components/schemas/PostgresErrorLogDto'
          nullable: true
          type: array
        total:
          format: int32
          type: integer
      type: object
    ServerOverviewPostgresErrorLogDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          total: 0
          errorLogs:
          - processId:
              value: 0
            errorSeverity: errorSeverity
            message: message
            logTime: 2000-01-23T04:56:07.000+00:00
          - processId:
              value: 0
            errorSeverity: errorSeverity
            message: message
            logTime: 2000-01-23T04:56:07.000+00:00
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/ServerOverviewPostgresErrorLogDto'
      type: object
    ServerOverviewStatusModelDto:
      additionalProperties: false
      example:
        allServers:
        - severity: null
          displayName: displayName
          entityType: ""
          fullName: fullName
          cir: ""
        - severity: null
          displayName: displayName
          entityType: ""
          fullName: fullName
          cir: ""
        status:
          severity: 1
          fullAlertTypeSerialised: fullAlertTypeSerialised
          dateRaised: 2000-01-23T04:56:07.000+00:00
          extra: 5
          startTimeTicks: 2
          alertCir: ""
          mostRelevantAlertId:
            value: 0
          lastOk: 2000-01-23T04:56:07.000+00:00
          text: text
          eventType: 0
          activeForMinutes: 6
          order: 5
      properties:
        status:
          $ref: '#/components/schemas/EntityStatus'
        allServers:
          items:
            $ref: '#/components/schemas/ServerNameAndUrlDto'
          nullable: true
          type: array
      type: object
    ServerOverviewStatusModelDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          allServers:
          - severity: null
            displayName: displayName
            entityType: ""
            fullName: fullName
            cir: ""
          - severity: null
            displayName: displayName
            entityType: ""
            fullName: fullName
            cir: ""
          status:
            severity: 1
            fullAlertTypeSerialised: fullAlertTypeSerialised
            dateRaised: 2000-01-23T04:56:07.000+00:00
            extra: 5
            startTimeTicks: 2
            alertCir: ""
            mostRelevantAlertId:
              value: 0
            lastOk: 2000-01-23T04:56:07.000+00:00
            text: text
            eventType: 0
            activeForMinutes: 6
            order: 5
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/ServerOverviewStatusModelDto'
      type: object
    ServerRecommendationsDto:
      additionalProperties: false
      example:
        orphanedUserRecommendations:
        - databaseUserType: 1
          databaseUserSid: databaseUserSid
          databaseUserName: databaseUserName
        - databaseUserType: 1
          databaseUserSid: databaseUserSid
          databaseUserName: databaseUserName
        isSaEnabled: true
      properties:
        isSaEnabled:
          type: boolean
        orphanedUserRecommendations:
          items:
            $ref: '#/components/schemas/OrphanedUserRecommendationDto'
          nullable: true
          type: array
      type: object
    ServerRole:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      format: int32
      type: integer
    ServerRoleLoginDto:
      additionalProperties: false
      example:
        role: 0
        loginDtos:
        - accountName: accountName
          name: name
          type: 6
          adMemberships:
          - displayName: displayName
            name: name
            type: null
            adMemberships:
            - null
            - null
            sid: sid
          - displayName: displayName
            name: name
            type: null
            adMemberships:
            - null
            - null
            sid: sid
        - accountName: accountName
          name: name
          type: 6
          adMemberships:
          - displayName: displayName
            name: name
            type: null
            adMemberships:
            - null
            - null
            sid: sid
          - displayName: displayName
            name: name
            type: null
            adMemberships:
            - null
            - null
            sid: sid
        roleName: roleName
      properties:
        role:
          $ref: '#/components/schemas/ServerRole'
        roleName:
          nullable: true
          type: string
        loginDtos:
          items:
            $ref: '#/components/schemas/LoginDto'
          nullable: true
          type: array
      type: object
    ServerRoleViewModelDto:
      additionalProperties: false
      example:
        windowsLoginCount: 0
        windowsLogins:
        - members:
          - null
          - null
          name: name
          isGroup: true
        - members:
          - null
          - null
          name: name
          isGroup: true
        roleName: roleName
        sqlLoginNames:
        - sqlLoginNames
        - sqlLoginNames
        collectionDate: 5
        sqlLoginCount: 6
        activeDirectoryCount: 1
      properties:
        roleName:
          nullable: true
          type: string
        windowsLoginCount:
          format: int32
          type: integer
        sqlLoginCount:
          format: int32
          type: integer
        activeDirectoryCount:
          format: int32
          type: integer
        sqlLoginNames:
          items:
            type: string
          nullable: true
          readOnly: true
          type: array
        windowsLogins:
          items:
            $ref: '#/components/schemas/AdAccountDto'
          nullable: true
          readOnly: true
          type: array
        collectionDate:
          format: int64
          type: integer
      type: object
    ServerRoleViewModelDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - windowsLoginCount: 0
          windowsLogins:
          - members:
            - null
            - null
            name: name
            isGroup: true
          - members:
            - null
            - null
            name: name
            isGroup: true
          roleName: roleName
          sqlLoginNames:
          - sqlLoginNames
          - sqlLoginNames
          collectionDate: 5
          sqlLoginCount: 6
          activeDirectoryCount: 1
        - windowsLoginCount: 0
          windowsLogins:
          - members:
            - null
            - null
            name: name
            isGroup: true
          - members:
            - null
            - null
            name: name
            isGroup: true
          roleName: roleName
          sqlLoginNames:
          - sqlLoginNames
          - sqlLoginNames
          collectionDate: 5
          sqlLoginCount: 6
          activeDirectoryCount: 1
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/ServerRoleViewModelDto'
          type: array
      type: object
    ServiceCountSummaryDto:
      additionalProperties: false
      example:
        running: 0
        total: 6
      properties:
        running:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
      type: object
    ServiceDto:
      additionalProperties: false
      example:
        sqlServiceType: 6
        startUserName: startUserName
        startup: startup
        state: state
      properties:
        sqlServiceType:
          $ref: '#/components/schemas/SqlServiceTypeDto'
        startUserName:
          type: string
        state:
          type: string
        startup:
          type: string
      type: object
    Severity:
      enum:
      - 0
      - 1
      - 2
      - 3
      - -1
      format: int32
      type: integer
    SeverityTimeDto:
      additionalProperties: false
      example:
        severity: 0
        time: 2000-01-23T04:56:07.000+00:00
      properties:
        time:
          format: date-time
          type: string
        severity:
          $ref: '#/components/schemas/Severity'
      type: object
    SimplifiedPostgresAuthenticationMode:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      format: int32
      type: integer
    SkewedClocksDto:
      additionalProperties: false
      example:
        areSkewedBmClocks: true
        listOfSkewedClocks: listOfSkewedClocks
      properties:
        areSkewedBmClocks:
          type: boolean
        listOfSkewedClocks:
          nullable: true
          type: string
      type: object
    SlackSettingsDto:
      additionalProperties: false
      example:
        enable: true
        channel: channel
        alertOnEnded: true
        webhookUrl: webhookUrl
        username: username
      properties:
        enable:
          type: boolean
        webhookUrl:
          nullable: true
          type: string
        channel:
          nullable: true
          type: string
        username:
          nullable: true
          type: string
        alertOnEnded:
          type: boolean
      type: object
    SnmpSettingsDto:
      additionalProperties: false
      example:
        snmpAllAddress: snmpAllAddress
        enable: true
        alertOnEnded: true
        snmpAllCommunityString: snmpAllCommunityString
        snmpAllPort: 5
      properties:
        enable:
          type: boolean
        alertOnEnded:
          type: boolean
        snmpAllAddress:
          nullable: true
          type: string
        snmpAllPort:
          format: int32
          type: integer
        snmpAllCommunityString:
          nullable: true
          type: string
      type: object
    SqlInstanceDto:
      additionalProperties: false
      example:
        name: name
        instanceKey: instanceKey
      properties:
        instanceKey:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    SqlInstanceViewModel:
      additionalProperties: false
      example:
        entityName: entityName
        entityType: ""
        instanceKey: instanceKey
        tags:
        - name: name
        - name: name
      properties:
        instanceKey:
          nullable: true
          type: string
        entityName:
          nullable: true
          type: string
        entityType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
        tags:
          items:
            $ref: '#/components/schemas/TagDto'
          nullable: true
          type: array
      type: object
    SqlServerAuthenticationMode:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    SqlServerConnectionPropertiesModel:
      additionalProperties: false
      example:
        executionTimeout: 2
        networkPacketSize: 5
        trustServerCertificate: true
        connectionTimeout: 5
        networkProtocol: 6
        portNumber: 1
        encryptConnection: true
      properties:
        networkProtocol:
          $ref: '#/components/schemas/NetworkProtocolEnum'
        portNumber:
          format: int32
          nullable: true
          type: integer
        networkPacketSize:
          format: int32
          nullable: true
          type: integer
        connectionTimeout:
          format: int32
          nullable: true
          type: integer
        executionTimeout:
          format: int32
          nullable: true
          type: integer
        encryptConnection:
          nullable: true
          type: boolean
        trustServerCertificate:
          nullable: true
          type: boolean
      type: object
    SqlServerCredentialsModel:
      additionalProperties: false
      example:
        password: password
        isBaseMonitorAccount: true
        isSameAsWindowsCredentials: true
        decryptionFailed: true
        userName: userName
        authenticationMode: 6
      properties:
        isSameAsWindowsCredentials:
          type: boolean
        isBaseMonitorAccount:
          type: boolean
        userName:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        decryptionFailed:
          type: boolean
        authenticationMode:
          $ref: '#/components/schemas/SqlServerAuthenticationMode'
      type: object
    SqlServerInstanceConfiguration:
      additionalProperties: false
      example:
        credentials:
          password: password
          username: username
        sqlServerConnectionProperties:
          executionTimeout: 2
          networkPacketSize: 5
          trustServerCertificate: true
          connectionTimeout: 5
          networkProtocol: 6
          portNumber: 1
          encryptConnection: true
        useSameCredentialsAsHost: true
        authenticationMode: 5
        useBaseMonitorServiceAccount: true
      properties:
        sqlServerConnectionProperties:
          $ref: '#/components/schemas/SqlServerConnectionPropertiesModel'
        useBaseMonitorServiceAccount:
          type: boolean
        useSameCredentialsAsHost:
          type: boolean
        authenticationMode:
          $ref: '#/components/schemas/SqlServerAuthenticationMode'
        credentials:
          $ref: '#/components/schemas/CredentialsDto'
      type: object
    SqlServerInstanceCredentialsModel:
      additionalProperties: false
      example:
        sqlServerCredentials:
          password: password
          isBaseMonitorAccount: true
          isSameAsWindowsCredentials: true
          decryptionFailed: true
          userName: userName
          authenticationMode: 6
        sqlServerId: sqlServerId
      properties:
        sqlServerId:
          nullable: true
          type: string
        sqlServerCredentials:
          $ref: '#/components/schemas/SqlServerCredentialsModel'
      type: object
    SqlServerQueryHistoryPlanKeyDto:
      additionalProperties: false
      example:
        planHandle: planHandle
        createDate: 2000-01-23T04:56:07.000+00:00
      properties:
        planHandle:
          type: string
        createDate:
          format: date-time
          type: string
      type: object
    SqlServerQueryHistoryPlanKeyDtoQueryHistoryPlanChangePointDto:
      additionalProperties: false
      example:
        date: 2000-01-23T04:56:07.000+00:00
        planKey:
          planHandle: planHandle
          createDate: 2000-01-23T04:56:07.000+00:00
      properties:
        date:
          format: date-time
          type: string
        planKey:
          $ref: '#/components/schemas/SqlServerQueryHistoryPlanKeyDto'
      type: object
    SqlServiceTypeDto:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15
      format: int32
      type: integer
    SshAuthenticationTypeDto:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    SshPrivateKeyDto:
      additionalProperties: false
      example:
        createdDate: 2000-01-23T04:56:07.000+00:00
        usage: 0
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
      properties:
        type:
          nullable: true
          readOnly: true
          type: string
        id:
          format: uuid
          type: string
        createdDate:
          format: date-time
          type: string
        name:
          nullable: true
          type: string
        usage:
          format: int32
          type: integer
      type: object
    SshPrivateKeyDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - createdDate: 2000-01-23T04:56:07.000+00:00
          usage: 0
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        - createdDate: 2000-01-23T04:56:07.000+00:00
          usage: 0
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/SshPrivateKeyDto'
          type: array
      type: object
    SshPrivateKeyDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          createdDate: 2000-01-23T04:56:07.000+00:00
          usage: 0
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/SshPrivateKeyDto'
      type: object
    StandaloneMachineDto:
      additionalProperties: false
      example:
        monitoredObjectState:
          isMonitored: true
          configurationState: configurationState
          status: status
        displayType: ""
        baseMonitor:
          port: 0
          displayName: displayName
          name: name
          type: type
          isDisconnected: true
        name: name
        fullName: fullName
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        type: type
        cir: ""
        group:
          displayType: ""
          baseMonitor:
            port: 0
            displayName: displayName
            name: name
            type: type
            isDisconnected: true
          name: name
          fullName: fullName
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          type: type
          cir: ""
          parentId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        name:
          nullable: true
          type: string
        id:
          format: uuid
          type: string
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        displayType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          readOnly: true
          type: EntityType
        monitoredObjectState:
          $ref: '#/components/schemas/MonitoredObjectStateDto'
        baseMonitor:
          $ref: '#/components/schemas/BaseMonitorDto'
        type:
          nullable: true
          readOnly: true
          type: string
        fullName:
          nullable: true
          readOnly: true
          type: string
        group:
          $ref: '#/components/schemas/GroupDto'
      type: object
    StatusCategoryDto:
      enum:
      - 0
      - 50
      - 100
      - 200
      - 250
      - 300
      - 400
      - 500
      format: int32
      type: integer
    StringJSendSuccess:
      additionalProperties: false
      example:
        data: data
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          type: string
      type: object
    SuspendEntityRequest:
      additionalProperties: false
      example:
        ids:
        - ids
        - ids
        makeSuspended: true
      properties:
        ids:
          items:
            type: string
          nullable: true
          type: array
        makeSuspended:
          type: boolean
      type: object
    SuspendedStatus:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    SwitchAuthenticationTypeDto:
      additionalProperties: false
      example:
        authenticationType: 0
      properties:
        authenticationType:
          $ref: '#/components/schemas/AuthenticationTypeDto'
      type: object
    SwitchToActiveDirectoryNewSettingsRequest:
      additionalProperties: false
      example:
        adminUsername: adminUsername
        domainSettings:
          password: password
          domainName: domainName
          baseDN: baseDN
          useBaseMonitorServiceAccount: true
          username: username
      properties:
        domainSettings:
          $ref: '#/components/schemas/ActiveDirectoryDomainViewModel'
        adminUsername:
          nullable: true
          type: string
      type: object
    SystemProcessDto:
      additionalProperties: false
      example:
        percentProcessorTime: 0.8008281904610115
        workingSetMemoryInBytes: 6
        virtualMemoryInBytes: 1
        name: name
        id:
          value: 0
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          $ref: '#/components/schemas/IntegerIdentifier'
        name:
          type: string
        startDate:
          format: date-time
          type: string
        percentProcessorTime:
          format: double
          nullable: true
          type: number
        workingSetMemoryInBytes:
          format: int64
          nullable: true
          type: integer
        virtualMemoryInBytes:
          format: int64
          nullable: true
          type: integer
      type: object
    SystemProcessDtoIEnumerableJSendSuccess:
      additionalProperties: false
      example:
        data:
        - percentProcessorTime: 0.8008281904610115
          workingSetMemoryInBytes: 6
          virtualMemoryInBytes: 1
          name: name
          id:
            value: 0
          startDate: 2000-01-23T04:56:07.000+00:00
        - percentProcessorTime: 0.8008281904610115
          workingSetMemoryInBytes: 6
          virtualMemoryInBytes: 1
          name: name
          id:
            value: 0
          startDate: 2000-01-23T04:56:07.000+00:00
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/SystemProcessDto'
          type: array
      type: object
    Tag:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          nullable: true
          type: string
      type: object
    TagDto:
      additionalProperties: false
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    TagDtoArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - name: name
        - name: name
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/TagDto'
          type: array
      type: object
    TaskQueueStats:
      additionalProperties: false
      example:
        priority:
          fires: 0
          misfires: 6
          medianRunnableTime: 1.4658129805029452
        dataCollection:
          fires: 0
          misfires: 6
          medianRunnableTime: 1.4658129805029452
      properties:
        priority:
          $ref: '#/components/schemas/TaskStats'
        dataCollection:
          $ref: '#/components/schemas/TaskStats'
      type: object
    TaskQueueStatsJSendSuccess:
      additionalProperties: false
      example:
        data:
          priority:
            fires: 0
            misfires: 6
            medianRunnableTime: 1.4658129805029452
          dataCollection:
            fires: 0
            misfires: 6
            medianRunnableTime: 1.4658129805029452
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/TaskQueueStats'
      type: object
    TaskStats:
      additionalProperties: false
      example:
        fires: 0
        misfires: 6
        medianRunnableTime: 1.4658129805029452
      properties:
        fires:
          format: int64
          nullable: true
          type: integer
        misfires:
          format: int64
          nullable: true
          type: integer
        medianRunnableTime:
          format: double
          nullable: true
          type: number
      type: object
    TcpEndpointDto:
      additionalProperties: false
      example:
        dynamicPorts: 5
        port: 5
        endpointId: endpointId
        ipAddress: ipAddress
        active: true
        enabled: true
      properties:
        endpointId:
          nullable: true
          type: string
        enabled:
          nullable: true
          type: boolean
        port:
          format: int64
          nullable: true
          type: integer
        dynamicPorts:
          format: int64
          nullable: true
          type: integer
        ipAddress:
          nullable: true
          type: string
        active:
          nullable: true
          type: boolean
      type: object
    TestCollectionRequest:
      additionalProperties: false
      example:
        query: query
        name: name
        databaseCirs:
        - databaseCirs
        - databaseCirs
      properties:
        name:
          nullable: true
          type: string
        query:
          nullable: true
          type: string
        databaseCirs:
          items:
            type: string
          nullable: true
          type: array
      type: object
    TestCollectionResult:
      additionalProperties: false
      example:
        result: result
        duration: duration
        isError: true
        databaseCir: databaseCir
      properties:
        databaseCir:
          nullable: true
          type: string
        isError:
          type: boolean
        result:
          nullable: true
          type: string
        duration:
          nullable: true
          type: string
      type: object
    TestCollectionStatus:
      additionalProperties: false
      example:
        completedResults:
        - result: result
          duration: duration
          isError: true
          databaseCir: databaseCir
        - result: result
          duration: duration
          isError: true
          databaseCir: databaseCir
        hasCompleted: true
      properties:
        hasCompleted:
          type: boolean
        completedResults:
          items:
            $ref: '#/components/schemas/TestCollectionResult'
          nullable: true
          type: array
      type: object
    TestCollectionStatusJSendSuccess:
      additionalProperties: false
      example:
        data:
          completedResults:
          - result: result
            duration: duration
            isError: true
            databaseCir: databaseCir
          - result: result
            duration: duration
            isError: true
            databaseCir: databaseCir
          hasCompleted: true
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/TestCollectionStatus'
      type: object
    TimeRangeDto:
      additionalProperties: false
      example:
        relativeMinutes: 6
        fromDateTime: 1
        type: 0
        timeWindowMode: 5
        toDateTime: 5
      properties:
        type:
          $ref: '#/components/schemas/AlertsFilterTimeRangeTypeDto'
        relativeMinutes:
          format: int32
          type: integer
        fromDateTime:
          format: int64
          nullable: true
          type: integer
        toDateTime:
          format: int64
          nullable: true
          type: integer
        timeWindowMode:
          $ref: '#/components/schemas/AlertsFilterTimeWindowModesDto'
      type: object
    TimeSpanJSendSuccess:
      additionalProperties: false
      example:
        data: data
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          format: date-span
          type: string
      type: object
    TopQueryDto:
      additionalProperties: false
      example:
        memoryGrant: 2
        impact: 4.145608029883936
        duration: 1
        queryHash: queryHash
        database: database
        physicalReads: 2
        channelInstanceRef: ""
        isTrackedAndNotInZoomRange: true
        cpuTime: 5
        logicalWrites: 9
        planHandle: planHandle
        queryText:
          isTruncated: true
          fragment: fragment
          before: before
          fragmentCharacterOffset: 6
          after: after
          fragmentLineOffset: 0
          fullQuery: fullQuery
        objectName: objectName
        executionCount: 5
        usedMemoryGrant: 3
        logicalReads: 7
        createDate: 2000-01-23T04:56:07.000+00:00
      properties:
        channelInstanceRef:
          format: entity-id
          type: ChannelInstanceRef
        queryText:
          $ref: '#/components/schemas/FullQueryTextDto'
        planHandle:
          type: string
        queryHash:
          type: string
        createDate:
          format: date-time
          type: string
        objectName:
          type: string
        database:
          type: string
        duration:
          format: int64
          type: integer
        executionCount:
          format: int64
          type: integer
        cpuTime:
          format: int64
          type: integer
        physicalReads:
          format: int64
          type: integer
        logicalReads:
          format: int64
          type: integer
        logicalWrites:
          format: int64
          type: integer
        usedMemoryGrant:
          format: int64
          type: integer
        memoryGrant:
          format: int64
          type: integer
        impact:
          format: double
          type: number
        isTrackedAndNotInZoomRange:
          readOnly: true
          type: boolean
      type: object
    TopQueryDtoGroupedTopQueryDtoOneOf:
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/TopQueryDto'
      - $ref: '#/components/schemas/GroupedTopQueryDto'
    TopQueryDtoGroupedTopQueryDtoOneOfArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - memoryGrant: 2
          impact: 4.145608029883936
          duration: 1
          queryHash: queryHash
          database: database
          physicalReads: 2
          channelInstanceRef: ""
          isTrackedAndNotInZoomRange: true
          cpuTime: 5
          logicalWrites: 9
          planHandle: planHandle
          queryText:
            isTruncated: true
            fragment: fragment
            before: before
            fragmentCharacterOffset: 6
            after: after
            fragmentLineOffset: 0
            fullQuery: fullQuery
          objectName: objectName
          executionCount: 5
          usedMemoryGrant: 3
          logicalReads: 7
          createDate: 2000-01-23T04:56:07.000+00:00
        - memoryGrant: 2
          impact: 4.145608029883936
          duration: 1
          queryHash: queryHash
          database: database
          physicalReads: 2
          channelInstanceRef: ""
          isTrackedAndNotInZoomRange: true
          cpuTime: 5
          logicalWrites: 9
          planHandle: planHandle
          queryText:
            isTruncated: true
            fragment: fragment
            before: before
            fragmentCharacterOffset: 6
            after: after
            fragmentLineOffset: 0
            fullQuery: fullQuery
          objectName: objectName
          executionCount: 5
          usedMemoryGrant: 3
          logicalReads: 7
          createDate: 2000-01-23T04:56:07.000+00:00
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/TopQueryDtoGroupedTopQueryDtoOneOf'
          type: array
      type: object
    TopQueryDtoTopQueryOutOfRangeDtoOneOf:
      additionalProperties: false
      oneOf:
      - $ref: '#/components/schemas/TopQueryDto'
      - $ref: '#/components/schemas/TopQueryOutOfRangeDto'
    TopQueryDtoTopQueryOutOfRangeDtoOneOfArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - memoryGrant: 2
          impact: 4.145608029883936
          duration: 1
          queryHash: queryHash
          database: database
          physicalReads: 2
          channelInstanceRef: ""
          isTrackedAndNotInZoomRange: true
          cpuTime: 5
          logicalWrites: 9
          planHandle: planHandle
          queryText:
            isTruncated: true
            fragment: fragment
            before: before
            fragmentCharacterOffset: 6
            after: after
            fragmentLineOffset: 0
            fullQuery: fullQuery
          objectName: objectName
          executionCount: 5
          usedMemoryGrant: 3
          logicalReads: 7
          createDate: 2000-01-23T04:56:07.000+00:00
        - memoryGrant: 2
          impact: 4.145608029883936
          duration: 1
          queryHash: queryHash
          database: database
          physicalReads: 2
          channelInstanceRef: ""
          isTrackedAndNotInZoomRange: true
          cpuTime: 5
          logicalWrites: 9
          planHandle: planHandle
          queryText:
            isTruncated: true
            fragment: fragment
            before: before
            fragmentCharacterOffset: 6
            after: after
            fragmentLineOffset: 0
            fullQuery: fullQuery
          objectName: objectName
          executionCount: 5
          usedMemoryGrant: 3
          logicalReads: 7
          createDate: 2000-01-23T04:56:07.000+00:00
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/TopQueryDtoTopQueryOutOfRangeDtoOneOf'
          type: array
      type: object
    TopQueryOutOfRangeDto:
      additionalProperties: false
      properties:
        channelInstanceRef:
          format: entity-id
          type: ChannelInstanceRef
        queryText:
          $ref: '#/components/schemas/FullQueryTextDto'
        queryHash:
          type: string
        database:
          type: string
        isTrackedAndNotInZoomRange:
          readOnly: true
          type: boolean
      type: object
    TopQueryProperty:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      format: int32
      type: integer
    TopQueryPropertyQueryHistorySeriesDto:
      additionalProperties: false
      example:
        values:
        - date: 2000-01-23T04:56:07.000+00:00
          value: 6.027456183070403
        - date: 2000-01-23T04:56:07.000+00:00
          value: 6.027456183070403
        name: 0
      properties:
        name:
          $ref: '#/components/schemas/TopQueryProperty'
        values:
          items:
            $ref: '#/components/schemas/QueryHistoryPointDto'
          type: array
      type: object
    TopQueryPropertySqlServerQueryHistoryPlanKeyDtoQueryHistoryDto:
      additionalProperties: false
      example:
        maxTime: 2000-01-23T04:56:07.000+00:00
        queryHistorySeries:
        - values:
          - date: 2000-01-23T04:56:07.000+00:00
            value: 6.027456183070403
          - date: 2000-01-23T04:56:07.000+00:00
            value: 6.027456183070403
          name: 0
        - values:
          - date: 2000-01-23T04:56:07.000+00:00
            value: 6.027456183070403
          - date: 2000-01-23T04:56:07.000+00:00
            value: 6.027456183070403
          name: 0
        minTime: 2000-01-23T04:56:07.000+00:00
        planChanges:
        - date: 2000-01-23T04:56:07.000+00:00
          planKey:
            planHandle: planHandle
            createDate: 2000-01-23T04:56:07.000+00:00
        - date: 2000-01-23T04:56:07.000+00:00
          planKey:
            planHandle: planHandle
            createDate: 2000-01-23T04:56:07.000+00:00
      properties:
        minTime:
          format: date-time
          type: string
        maxTime:
          format: date-time
          type: string
        queryHistorySeries:
          items:
            $ref: '#/components/schemas/TopQueryPropertyQueryHistorySeriesDto'
          type: array
        planChanges:
          items:
            $ref: '#/components/schemas/SqlServerQueryHistoryPlanKeyDtoQueryHistoryPlanChangePointDto'
          nullable: true
          type: array
      type: object
    TopQueryPropertySqlServerQueryHistoryPlanKeyDtoQueryHistoryDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          maxTime: 2000-01-23T04:56:07.000+00:00
          queryHistorySeries:
          - values:
            - date: 2000-01-23T04:56:07.000+00:00
              value: 6.027456183070403
            - date: 2000-01-23T04:56:07.000+00:00
              value: 6.027456183070403
            name: 0
          - values:
            - date: 2000-01-23T04:56:07.000+00:00
              value: 6.027456183070403
            - date: 2000-01-23T04:56:07.000+00:00
              value: 6.027456183070403
            name: 0
          minTime: 2000-01-23T04:56:07.000+00:00
          planChanges:
          - date: 2000-01-23T04:56:07.000+00:00
            planKey:
              planHandle: planHandle
              createDate: 2000-01-23T04:56:07.000+00:00
          - date: 2000-01-23T04:56:07.000+00:00
            planKey:
              planHandle: planHandle
              createDate: 2000-01-23T04:56:07.000+00:00
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/TopQueryPropertySqlServerQueryHistoryPlanKeyDtoQueryHistoryDto'
      type: object
    TopStatusBarDto:
      additionalProperties: false
      example:
        failingNotifiers:
        - failingNotifiers
        - failingNotifiers
        showTopBar: true
        skewedClocks:
          areSkewedBmClocks: true
          listOfSkewedClocks: listOfSkewedClocks
        licensingWarnings:
          licenceText: licenceText
          showPermitExpiringSoon: true
          areUnlicensedServers: true
          isTrialExpired: true
          isTrial: true
          permitText: permitText
        isConnectedToBaseMonitorUsingPostgres: true
        blockedBaseMonitors:
          areBlockedBaseMonitors: true
          listOfBlockedBms: listOfBlockedBms
        showHttpWarning: true
        updates:
          showUpdates: true
          updateVersion: updateVersion
          updateText: updateText
          updateLink: updateLink
        productName: productName
        baseMonitorsWithDecryptionFailures:
        - baseMonitorsWithDecryptionFailures
        - baseMonitorsWithDecryptionFailures
      properties:
        productName:
          nullable: true
          type: string
        licensingWarnings:
          $ref: '#/components/schemas/LicensingWarningsDto'
        failingNotifiers:
          items:
            type: string
          nullable: true
          type: array
        showHttpWarning:
          type: boolean
        showTopBar:
          type: boolean
        updates:
          $ref: '#/components/schemas/UpdatesDto'
        skewedClocks:
          $ref: '#/components/schemas/SkewedClocksDto'
        blockedBaseMonitors:
          $ref: '#/components/schemas/BlockedBaseMonitorsDto'
        baseMonitorsWithDecryptionFailures:
          items:
            type: string
          nullable: true
          type: array
        isConnectedToBaseMonitorUsingPostgres:
          type: boolean
      required:
      - baseMonitorsWithDecryptionFailures
      - blockedBaseMonitors
      - failingNotifiers
      - isConnectedToBaseMonitorUsingPostgres
      - licensingWarnings
      - productName
      - showHttpWarning
      - showTopBar
      - skewedClocks
      - updates
      type: object
    TopStatusBarDtoJSendSuccess:
      additionalProperties: false
      example:
        data:
          failingNotifiers:
          - failingNotifiers
          - failingNotifiers
          showTopBar: true
          skewedClocks:
            areSkewedBmClocks: true
            listOfSkewedClocks: listOfSkewedClocks
          licensingWarnings:
            licenceText: licenceText
            showPermitExpiringSoon: true
            areUnlicensedServers: true
            isTrialExpired: true
            isTrial: true
            permitText: permitText
          isConnectedToBaseMonitorUsingPostgres: true
          blockedBaseMonitors:
            areBlockedBaseMonitors: true
            listOfBlockedBms: listOfBlockedBms
          showHttpWarning: true
          updates:
            showUpdates: true
            updateVersion: updateVersion
            updateText: updateText
            updateLink: updateLink
          productName: productName
          baseMonitorsWithDecryptionFailures:
          - baseMonitorsWithDecryptionFailures
          - baseMonitorsWithDecryptionFailures
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/TopStatusBarDto'
      type: object
    TraceFlagDto:
      additionalProperties: false
      example:
        value: 9
      properties:
        value:
          format: int64
          type: integer
      type: object
    TrackQueryDto:
      additionalProperties: false
      type: object
    Unit:
      additionalProperties: false
      type: object
    UnitJSendSuccess:
      additionalProperties: false
      example:
        data: "{}"
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          additionalProperties: false
          type: object
      type: object
    UpdateAmazonRdsSqlServerRequest:
      additionalProperties: false
      example:
        connectionProperties:
          executionTimeout: 2
          networkPacketSize: 5
          trustServerCertificate: true
          connectionTimeout: 5
          networkProtocol: 6
          portNumber: 1
          encryptConnection: true
        endpoints:
        - endpoints
        - endpoints
        password: password
        amazonApiCredentials:
          secretKey: secretKey
          accessKey: accessKey
          roleArn: roleArn
          decryptionFailed: true
          region: region
          dbIdentifier: dbIdentifier
          authenticationMode: 6
        useBaseMonitorAccount: true
        authenticationMode: 0
        username: username
      properties:
        endpoints:
          items:
            type: string
          type: array
        username:
          type: string
        password:
          nullable: true
          type: string
        authenticationMode:
          $ref: '#/components/schemas/SqlServerAuthenticationMode'
        connectionProperties:
          $ref: '#/components/schemas/SqlServerConnectionPropertiesModel'
        amazonApiCredentials:
          $ref: '#/components/schemas/AmazonApiCredentialsUpdateDto'
        useBaseMonitorAccount:
          type: boolean
      required:
      - endpoints
      type: object
    UpdateSelectedDatabasesModel:
      additionalProperties: false
      example:
        databases:
        - databases
        - databases
        autoDiscoveryEnabled: true
      properties:
        autoDiscoveryEnabled:
          type: boolean
        databases:
          items:
            type: string
          nullable: true
          type: array
      type: object
    UpdateTagOperationDto:
      additionalProperties: false
      example:
        tagsToAdd:
        - name: name
        - name: name
        targets:
        - ""
        - ""
        tagsToRemove:
        - name: name
        - name: name
      properties:
        targets:
          items:
            format: entity-id
            type: ChannelInstanceRef
          type: array
        tagsToAdd:
          items:
            $ref: '#/components/schemas/TagDto'
          type: array
        tagsToRemove:
          items:
            $ref: '#/components/schemas/TagDto'
          type: array
      type: object
    UpdatesDto:
      additionalProperties: false
      example:
        showUpdates: true
        updateVersion: updateVersion
        updateText: updateText
        updateLink: updateLink
      properties:
        showUpdates:
          type: boolean
        updateText:
          nullable: true
          type: string
        updateLink:
          nullable: true
          type: string
        updateVersion:
          nullable: true
          type: string
      type: object
    UserServerRolesDto:
      additionalProperties: false
      example:
        createdDate: 2000-01-23T04:56:07.000+00:00
        accountName: accountName
        roles:
        - null
        - null
        name: name
        sid: sid
      properties:
        name:
          type: string
        accountName:
          type: string
        sid:
          nullable: true
          type: string
        roles:
          items:
            $ref: '#/components/schemas/ServerRole'
          type: array
        createdDate:
          format: date-time
          type: string
      type: object
    VMServerStatus:
      additionalProperties: false
      example:
        hosts:
        - name: name
          guests:
          - hostName: hostName
            name: name
            vMwareToolsStatus: vMwareToolsStatus
            status: status
          - hostName: hostName
            name: name
            vMwareToolsStatus: vMwareToolsStatus
            status: status
          status: null
        - name: name
          guests:
          - hostName: hostName
            name: name
            vMwareToolsStatus: vMwareToolsStatus
            status: status
          - hostName: hostName
            name: name
            vMwareToolsStatus: vMwareToolsStatus
            status: status
          status: null
        name: name
        status: 0
      properties:
        name:
          type: string
        status:
          $ref: '#/components/schemas/VMwareServerStatus'
        hosts:
          items:
            $ref: '#/components/schemas/HostStatus'
          type: array
      required:
      - hosts
      - name
      - status
      type: object
    VMServerStatusArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - hosts:
          - name: name
            guests:
            - hostName: hostName
              name: name
              vMwareToolsStatus: vMwareToolsStatus
              status: status
            - hostName: hostName
              name: name
              vMwareToolsStatus: vMwareToolsStatus
              status: status
            status: null
          - name: name
            guests:
            - hostName: hostName
              name: name
              vMwareToolsStatus: vMwareToolsStatus
              status: status
            - hostName: hostName
              name: name
              vMwareToolsStatus: vMwareToolsStatus
              status: status
            status: null
          name: name
          status: 0
        - hosts:
          - name: name
            guests:
            - hostName: hostName
              name: name
              vMwareToolsStatus: vMwareToolsStatus
              status: status
            - hostName: hostName
              name: name
              vMwareToolsStatus: vMwareToolsStatus
              status: status
            status: null
          - name: name
            guests:
            - hostName: hostName
              name: name
              vMwareToolsStatus: vMwareToolsStatus
              status: status
            - hostName: hostName
              name: name
              vMwareToolsStatus: vMwareToolsStatus
              status: status
            status: null
          name: name
          status: 0
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/VMServerStatus'
          type: array
      type: object
    VMwareCredentials:
      additionalProperties: false
      example:
        password: password
        userName: userName
      properties:
        userName:
          type: string
        password:
          type: string
      type: object
    VMwareServerStatus:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      format: int32
      type: integer
    ValidationError:
      additionalProperties: false
      example:
        fieldName: fieldName
        message: message
      properties:
        fieldName:
          type: string
        message:
          type: string
      type: object
    ValidationErrorArrayJSendSuccess:
      additionalProperties: false
      example:
        data:
        - fieldName: fieldName
          message: message
        - fieldName: fieldName
          message: message
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      type: object
    VersionViewModel:
      additionalProperties: false
      example:
        instances:
        - isUpToDate: true
          rawProductLevel: rawProductLevel
          releaseDate: 2000-01-23T04:56:07.000+00:00
          endOfExtendedSupportDate: 2000-01-23T04:56:07.000+00:00
          entityType: ""
          edition: edition
          versionNumber: versionNumber
          latestUpdate:
            servicePackDownloadUrl: servicePackDownloadUrl
            productLevel: productLevel
            releaseDate: 2000-01-23T04:56:07.000+00:00
            downloadUrl: downloadUrl
            versionNumber: versionNumber
          tags:
          - name: name
          - name: name
          productLevel: productLevel
          entityName: entityName
          clusterName: clusterName
          isOnLatestServicePack: true
          endOfSupportDate: 2000-01-23T04:56:07.000+00:00
          friendlyVersion: friendlyVersion
          group: group
          hasAdditionalPatches: true
        - isUpToDate: true
          rawProductLevel: rawProductLevel
          releaseDate: 2000-01-23T04:56:07.000+00:00
          endOfExtendedSupportDate: 2000-01-23T04:56:07.000+00:00
          entityType: ""
          edition: edition
          versionNumber: versionNumber
          latestUpdate:
            servicePackDownloadUrl: servicePackDownloadUrl
            productLevel: productLevel
            releaseDate: 2000-01-23T04:56:07.000+00:00
            downloadUrl: downloadUrl
            versionNumber: versionNumber
          tags:
          - name: name
          - name: name
          productLevel: productLevel
          entityName: entityName
          clusterName: clusterName
          isOnLatestServicePack: true
          endOfSupportDate: 2000-01-23T04:56:07.000+00:00
          friendlyVersion: friendlyVersion
          group: group
          hasAdditionalPatches: true
        groups:
        - groups
        - groups
      properties:
        groups:
          items:
            type: string
          nullable: true
          type: array
        instances:
          items:
            $ref: '#/components/schemas/VersionsRowViewModel'
          nullable: true
          type: array
      type: object
    VersionsRowViewModel:
      additionalProperties: false
      example:
        isUpToDate: true
        rawProductLevel: rawProductLevel
        releaseDate: 2000-01-23T04:56:07.000+00:00
        endOfExtendedSupportDate: 2000-01-23T04:56:07.000+00:00
        entityType: ""
        edition: edition
        versionNumber: versionNumber
        latestUpdate:
          servicePackDownloadUrl: servicePackDownloadUrl
          productLevel: productLevel
          releaseDate: 2000-01-23T04:56:07.000+00:00
          downloadUrl: downloadUrl
          versionNumber: versionNumber
        tags:
        - name: name
        - name: name
        productLevel: productLevel
        entityName: entityName
        clusterName: clusterName
        isOnLatestServicePack: true
        endOfSupportDate: 2000-01-23T04:56:07.000+00:00
        friendlyVersion: friendlyVersion
        group: group
        hasAdditionalPatches: true
      properties:
        entityName:
          nullable: true
          type: string
        group:
          nullable: true
          type: string
        clusterName:
          nullable: true
          type: string
        entityType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
        edition:
          nullable: true
          type: string
        rawProductLevel:
          nullable: true
          type: string
        versionNumber:
          nullable: true
          type: string
        friendlyVersion:
          nullable: true
          type: string
        isUpToDate:
          type: boolean
        isOnLatestServicePack:
          type: boolean
        hasAdditionalPatches:
          type: boolean
        releaseDate:
          format: date-time
          nullable: true
          type: string
        endOfSupportDate:
          format: date-time
          nullable: true
          type: string
        endOfExtendedSupportDate:
          format: date-time
          nullable: true
          type: string
        latestUpdate:
          $ref: '#/components/schemas/LatestUpdateViewModel'
        productLevel:
          nullable: true
          readOnly: true
          type: string
        tags:
          items:
            $ref: '#/components/schemas/TagDto'
          nullable: true
          type: array
      type: object
    VolumeUsageViewModel:
      additionalProperties: false
      example:
        projectedSizeNow: 1.4658129805029452
        parentName: parentName
        size: 6
        projectedSizeInOneYear: 5.962133916683182
        name: name
        sqlInstances:
        - entityName: entityName
          entityType: ""
          instanceKey: instanceKey
          tags:
          - name: name
          - name: name
        - entityName: entityName
          entityType: ""
          instanceKey: instanceKey
          tags:
          - name: name
          - name: name
        parentEntityType: ""
        label: label
        used: 0
        projectedFullDateTicks: 5
        cir: ""
        group: group
      properties:
        cir:
          format: entity-id
          nullable: true
          type: ChannelInstanceRef
        parentName:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        parentEntityType:
          enum:
          - Cluster
          - LinuxMachine
          - AmazonRdsHost
          - Machine
          - SqlServer
          - SqlServerInstance
          - AzureManagedInstance
          - AzureSqlServer
          - AmazonRdsSqlServer
          - PostgresServer
          type: EntityType
        label:
          nullable: true
          type: string
        group:
          nullable: true
          type: string
        used:
          format: int64
          type: integer
        size:
          format: int64
          type: integer
        projectedSizeNow:
          format: double
          nullable: true
          type: number
        projectedSizeInOneYear:
          format: double
          nullable: true
          type: number
        projectedFullDateTicks:
          format: int64
          nullable: true
          type: integer
        sqlInstances:
          items:
            $ref: '#/components/schemas/SqlInstanceViewModel'
          nullable: true
          type: array
      type: object
    VolumesViewModel:
      additionalProperties: false
      example:
        volumes:
        - projectedSizeNow: 1.4658129805029452
          parentName: parentName
          size: 6
          projectedSizeInOneYear: 5.962133916683182
          name: name
          sqlInstances:
          - entityName: entityName
            entityType: ""
            instanceKey: instanceKey
            tags:
            - name: name
            - name: name
          - entityName: entityName
            entityType: ""
            instanceKey: instanceKey
            tags:
            - name: name
            - name: name
          parentEntityType: ""
          label: label
          used: 0
          projectedFullDateTicks: 5
          cir: ""
          group: group
        - projectedSizeNow: 1.4658129805029452
          parentName: parentName
          size: 6
          projectedSizeInOneYear: 5.962133916683182
          name: name
          sqlInstances:
          - entityName: entityName
            entityType: ""
            instanceKey: instanceKey
            tags:
            - name: name
            - name: name
          - entityName: entityName
            entityType: ""
            instanceKey: instanceKey
            tags:
            - name: name
            - name: name
          parentEntityType: ""
          label: label
          used: 0
          projectedFullDateTicks: 5
          cir: ""
          group: group
        groups:
        - groups
        - groups
        diskNames:
        - diskNames
        - diskNames
      properties:
        groups:
          items:
            type: string
          nullable: true
          type: array
        volumes:
          items:
            $ref: '#/components/schemas/VolumeUsageViewModel'
          nullable: true
          type: array
        diskNames:
          items:
            type: string
          nullable: true
          type: array
      type: object
    VolumesViewModelJSendSuccess:
      additionalProperties: false
      example:
        data:
          volumes:
          - projectedSizeNow: 1.4658129805029452
            parentName: parentName
            size: 6
            projectedSizeInOneYear: 5.962133916683182
            name: name
            sqlInstances:
            - entityName: entityName
              entityType: ""
              instanceKey: instanceKey
              tags:
              - name: name
              - name: name
            - entityName: entityName
              entityType: ""
              instanceKey: instanceKey
              tags:
              - name: name
              - name: name
            parentEntityType: ""
            label: label
            used: 0
            projectedFullDateTicks: 5
            cir: ""
            group: group
          - projectedSizeNow: 1.4658129805029452
            parentName: parentName
            size: 6
            projectedSizeInOneYear: 5.962133916683182
            name: name
            sqlInstances:
            - entityName: entityName
              entityType: ""
              instanceKey: instanceKey
              tags:
              - name: name
              - name: name
            - entityName: entityName
              entityType: ""
              instanceKey: instanceKey
              tags:
              - name: name
              - name: name
            parentEntityType: ""
            label: label
            used: 0
            projectedFullDateTicks: 5
            cir: ""
            group: group
          groups:
          - groups
          - groups
          diskNames:
          - diskNames
          - diskNames
        status: success
      properties:
        status:
          enum:
          - success
          readOnly: true
          type: string
        data:
          $ref: '#/components/schemas/VolumesViewModel'
      type: object
    WebhookIntegrationTypeDto:
      enum:
      - 0
      - 1
      format: int32
      type: integer
    WebhookSettingsDto:
      additionalProperties: false
      example:
        template: template
        headers: headers
        notificationLevel: null
        integrationType: 2
        ignoreSslErrors: true
        enable: true
        url: url
      properties:
        enable:
          type: boolean
        url:
          nullable: true
          type: string
        integrationType:
          $ref: '#/components/schemas/WebhookIntegrationTypeDto'
        notificationLevel:
          $ref: '#/components/schemas/NotificationLevel'
        template:
          nullable: true
          type: string
        headers:
          nullable: true
          type: string
        ignoreSslErrors:
          type: boolean
      type: object
    WebhookTestRequestCommandDto:
      additionalProperties: false
      example:
        template: template
        headers: headers
        integrationType: 0
        ignoreSslErrors: true
        url: url
      properties:
        url:
          type: string
        integrationType:
          $ref: '#/components/schemas/WebhookIntegrationTypeDto'
        template:
          nullable: true
          type: string
        headers:
          nullable: true
          type: string
        ignoreSslErrors:
          type: boolean
      type: object
    WindowsConnectionPropertiesModel:
      additionalProperties: false
      example:
        wmiConnectionMethod: 6
        autoDetectClusterName: true
        encodePortInServicePrincipalNameForWinRM: true
      properties:
        wmiConnectionMethod:
          $ref: '#/components/schemas/WmiConnectionMethod'
        autoDetectClusterName:
          type: boolean
        encodePortInServicePrincipalNameForWinRM:
          type: boolean
      type: object
    WindowsMachineCredentialsModel:
      additionalProperties: false
      example:
        password: password
        isBaseMonitorAccount: true
        decryptionFailed: true
        userName: userName
      properties:
        isBaseMonitorAccount:
          type: boolean
        userName:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
        decryptionFailed:
          type: boolean
      type: object
    WmiConnectionMethod:
      enum:
      - 0
      - 1
      - 2
      format: int32
      type: integer
    _SqlInstanceChannelInstanceRef:
      additionalProperties: false
      example:
        rootChannelInstanceRef: ""
        channelKey:
          keys:
            key: ""
          propertyNames:
          - name: name
          - name: name
          count: 1
        channelRef:
          parent: ""
          depth: 0
          isRoot: true
          leadingChannelRefs:
          - null
          - null
          qualifiedChannelName:
            parent: null
            tailQualifiedChannelName: null
            depth: 6
            isRoot: true
            qualifiedSubChannelNames:
            - null
            - null
            headChannelName:
              name: name
            subChannelNames:
            - name: name
            - name: name
            channelName:
              name: name
            qualifiedChannelNames:
            - null
            - null
          channelName:
            name: name
        channelInstanceRefs:
        - ""
        - ""
        subChannelInstanceRefs:
        - ""
        - ""
      properties:
        channelRef:
          $ref: '#/components/schemas/ChannelRef'
        channelKey:
          $ref: '#/components/schemas/ChannelKey'
        channelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
        rootChannelInstanceRef:
          format: entity-id
          readOnly: true
          type: ChannelInstanceRef
        subChannelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
      type: object
    _SqlInstance_Agent_JobChannelInstanceRef:
      additionalProperties: false
      properties:
        channelRef:
          $ref: '#/components/schemas/ChannelRef'
        channelKey:
          $ref: '#/components/schemas/ChannelKey'
        channelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
        rootChannelInstanceRef:
          format: entity-id
          readOnly: true
          type: ChannelInstanceRef
        subChannelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
      type: object
    _SqlInstance_IndexesChannelInstanceRef:
      additionalProperties: false
      example:
        rootChannelInstanceRef: ""
        channelKey:
          keys:
            key: ""
          propertyNames:
          - name: name
          - name: name
          count: 1
        channelRef:
          parent: ""
          depth: 0
          isRoot: true
          leadingChannelRefs:
          - null
          - null
          qualifiedChannelName:
            parent: null
            tailQualifiedChannelName: null
            depth: 6
            isRoot: true
            qualifiedSubChannelNames:
            - null
            - null
            headChannelName:
              name: name
            subChannelNames:
            - name: name
            - name: name
            channelName:
              name: name
            qualifiedChannelNames:
            - null
            - null
          channelName:
            name: name
        channelInstanceRefs:
        - ""
        - ""
        subChannelInstanceRefs:
        - ""
        - ""
      properties:
        channelRef:
          $ref: '#/components/schemas/ChannelRef'
        channelKey:
          $ref: '#/components/schemas/ChannelKey'
        channelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
        rootChannelInstanceRef:
          format: entity-id
          readOnly: true
          type: ChannelInstanceRef
        subChannelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
      type: object
    _SqlInstance_TopQueriesChannelInstanceRef:
      additionalProperties: false
      properties:
        channelRef:
          $ref: '#/components/schemas/ChannelRef'
        channelKey:
          $ref: '#/components/schemas/ChannelKey'
        channelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
        rootChannelInstanceRef:
          format: entity-id
          readOnly: true
          type: ChannelInstanceRef
        subChannelInstanceRefs:
          items:
            format: entity-id
            type: ChannelInstanceRef
          readOnly: true
          type: array
      type: object
    AlertsInboxSaveCustomFilter_request:
      properties:
        TimeRange.Type:
          $ref: '#/components/schemas/AlertsFilterTimeRangeTypeDto'
        TimeRange.RelativeMinutes:
          format: int32
          type: integer
        TimeRange.FromDateTime:
          format: int64
          type: integer
        TimeRange.ToDateTime:
          format: int64
          type: integer
        TimeRange.TimeWindowMode:
          $ref: '#/components/schemas/AlertsFilterTimeWindowModesDto'
        IncludeStatus.SeverityHigh:
          type: boolean
        IncludeStatus.SeverityMedium:
          type: boolean
        IncludeStatus.SeverityLow:
          type: boolean
        IncludeStatus.ReadYes:
          type: boolean
        IncludeStatus.ReadNo:
          type: boolean
        IncludeStatus.ClearedYes:
          type: boolean
        IncludeStatus.ClearedNo:
          type: boolean
        IncludeStatus.StatusEvent:
          type: boolean
        IncludeStatus.StatusActive:
          type: boolean
        IncludeStatus.StatusEnded:
          type: boolean
        IncludeStatus.CommentYes:
          type: boolean
        IncludeStatus.CommentNo:
          type: boolean
        IncludeAlertTypeIds:
          items:
            type: string
          type: array
        SelectedTags:
          items:
            $ref: '#/components/schemas/TagDto'
          type: array
      type: object
    AlertsInboxClearAlert_request:
      properties:
        LastUpdate:
          type: string
        SelectedGroupIds:
          items:
            $ref: '#/components/schemas/GroupIdDto'
          type: array
        SelectedAlertIds:
          items:
            $ref: '#/components/schemas/QualifiedAlertIdDto'
          type: array
        FilterSettings.TimeRange.Type:
          $ref: '#/components/schemas/AlertsFilterTimeRangeTypeDto'
        FilterSettings.TimeRange.RelativeMinutes:
          format: int32
          type: integer
        FilterSettings.TimeRange.FromDateTime:
          format: int64
          type: integer
        FilterSettings.TimeRange.ToDateTime:
          format: int64
          type: integer
        FilterSettings.TimeRange.TimeWindowMode:
          $ref: '#/components/schemas/AlertsFilterTimeWindowModesDto'
        FilterSettings.IncludeStatus.SeverityHigh:
          type: boolean
        FilterSettings.IncludeStatus.SeverityMedium:
          type: boolean
        FilterSettings.IncludeStatus.SeverityLow:
          type: boolean
        FilterSettings.IncludeStatus.ReadYes:
          type: boolean
        FilterSettings.IncludeStatus.ReadNo:
          type: boolean
        FilterSettings.IncludeStatus.ClearedYes:
          type: boolean
        FilterSettings.IncludeStatus.ClearedNo:
          type: boolean
        FilterSettings.IncludeStatus.StatusEvent:
          type: boolean
        FilterSettings.IncludeStatus.StatusActive:
          type: boolean
        FilterSettings.IncludeStatus.StatusEnded:
          type: boolean
        FilterSettings.IncludeStatus.CommentYes:
          type: boolean
        FilterSettings.IncludeStatus.CommentNo:
          type: boolean
        FilterSettings.IncludeAlertTypeIds:
          items:
            type: string
          type: array
        FilterSettings.SelectedTags:
          items:
            $ref: '#/components/schemas/TagDto'
          type: array
        ChannelInstanceRefs:
          items:
            type: string
          type: array
      type: object
    _api_basemonitors__baseMonitorName__amazonrdssqlservers_credentials_patch_500_response:
      oneOf:
      - $ref: '#/components/schemas/InternalServerErrorJSendDataError'
      - $ref: '#/components/schemas/JSendError'
    _api_diagnostics_errorReporting_test_get_500_response:
      oneOf:
      - $ref: '#/components/schemas/InternalServerErrorJSendDataError'
      - $ref: '#/components/schemas/Unit'
    FeatureFlagBooleanDictionaryJSendSuccess_data:
      additionalProperties: false
      example:
        MachineLearningForecastEvaluation: true
        RegistryReading: true
        DiagnosticsVisible: true
        TestFlag_WithNoAttributes: true
        AllowVersionMismatchBetweenWebsiteAndBaseMonitors: true
        NetworkConnectionStatsFur: true
        UseAws: true
        TestFlag_WithEnabledInTestNetAttribute: true
        NewPermissionsData: true
        MultiBaseMonitorInstanceDiscovery: true
        MultiBaseMonitorGlobalDashboard: true
        SubscriptionsUseUatPermits: true
        PostgresIndexes: true
        SaaS: true
        OptimizeForKnownStatistics: true
        TestFlag_WithEnabledInDemoSiteAttribute: true
        InstanceDiscovery: true
        ShowPreviewAlertEmail: true
        OidcAuthCode: true
        AlwaysRedactQueryPlanParameters: true
        UseNewCreateCustomMetricPage: true
        CrossDbHostlessMonitoring: true
        NonParallelPermissionSampling: true
        ScriptAlertResponse: true
        ShowLinkToLinuxTestnet: true
        RecordDatabaseTimings: true
        GreaterThanOrEqualToComparatorInComplianceTemplates: true
        EnumerateGroupMembership: true
        CloudCosts: true
        AzureMiReplicationLinks: true
        Licensing: true
        LinuxSupport: true
        BulkCustomMetricCollection: true
        AllowVersionMismatchBetweenWebsiteAndPowerShellModule: true
        ForceOfflineLicensing: true
        GarbageCollectionFur: true
        PerpetualLicense: true
        ErrorReporting: true
        CrossDbMonitoring: true
        RemoveUndetectedSqlServers: true
        UiTestBench: true
        TimescaleDBRepository: true
        UseContentSecurityPolicyNonce: true
        HighAvailability: true
        IgnoreQueryThrottlingFilters: true
        XeLongRunningQueryStartAndEndTimeSampling: true
        ErrorReportingTesting: true
        AzureSqlDatabaseReplicationLinks: true
        MachineLearningForecasting: true
        FastBaseMonitorShutdown: true
        TestFlag_WithEnabledByDefaultAttribute: true
        PublicApi: true
      properties:
        Licensing:
          type: boolean
        ForceOfflineLicensing:
          type: boolean
        SubscriptionsUseUatPermits:
          type: boolean
        ErrorReporting:
          type: boolean
        InstanceDiscovery:
          type: boolean
        MultiBaseMonitorInstanceDiscovery:
          type: boolean
        RegistryReading:
          type: boolean
        ScriptAlertResponse:
          type: boolean
        EnumerateGroupMembership:
          type: boolean
        AlwaysRedactQueryPlanParameters:
          type: boolean
        ShowPreviewAlertEmail:
          type: boolean
        AllowVersionMismatchBetweenWebsiteAndBaseMonitors:
          type: boolean
        AllowVersionMismatchBetweenWebsiteAndPowerShellModule:
          type: boolean
        AzureMiReplicationLinks:
          type: boolean
        AzureSqlDatabaseReplicationLinks:
          type: boolean
        CloudCosts:
          type: boolean
        GarbageCollectionFur:
          type: boolean
        UiTestBench:
          type: boolean
        ErrorReportingTesting:
          type: boolean
        NetworkConnectionStatsFur:
          type: boolean
        HighAvailability:
          type: boolean
        LinuxSupport:
          type: boolean
        ShowLinkToLinuxTestnet:
          type: boolean
        DiagnosticsVisible:
          type: boolean
        OptimizeForKnownStatistics:
          type: boolean
        MultiBaseMonitorGlobalDashboard:
          type: boolean
        FastBaseMonitorShutdown:
          type: boolean
        UseContentSecurityPolicyNonce:
          type: boolean
        RecordDatabaseTimings:
          type: boolean
        MachineLearningForecastEvaluation:
          type: boolean
        MachineLearningForecasting:
          type: boolean
        CrossDbMonitoring:
          type: boolean
        CrossDbHostlessMonitoring:
          type: boolean
        NonParallelPermissionSampling:
          type: boolean
        PerpetualLicense:
          type: boolean
        PublicApi:
          type: boolean
        BulkCustomMetricCollection:
          type: boolean
        UseAws:
          type: boolean
        SaaS:
          type: boolean
        TestFlag_WithNoAttributes:
          type: boolean
        TestFlag_WithEnabledByDefaultAttribute:
          type: boolean
        TestFlag_WithEnabledInTestNetAttribute:
          type: boolean
        TestFlag_WithEnabledInDemoSiteAttribute:
          type: boolean
        RemoveUndetectedSqlServers:
          type: boolean
        TimescaleDBRepository:
          type: boolean
        IgnoreQueryThrottlingFilters:
          type: boolean
        XeLongRunningQueryStartAndEndTimeSampling:
          type: boolean
        NewPermissionsData:
          type: boolean
        UseNewCreateCustomMetricPage:
          type: boolean
        OidcAuthCode:
          type: boolean
        PostgresIndexes:
          type: boolean
        GreaterThanOrEqualToComparatorInComplianceTemplates:
          type: boolean
      type: object

